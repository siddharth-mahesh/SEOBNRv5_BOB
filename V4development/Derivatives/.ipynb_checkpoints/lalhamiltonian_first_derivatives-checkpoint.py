from __future__ import division
import numpy as np
def ham_first_derivs(m1, m2, tortoise, x1, x2, x3, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    L1 = x2*p3-x3*p2
    L2 = -(x1*p3-x3*p1)
    L3 = x1*p2-x2*p1
    L_mag = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat1 = L1/L_mag
    Lhat2 = L2/L_mag
    Lhat3 = L3/L_mag
    S1dotLhat = S1x*L1+S1y*L2+S1z*L3
    S2dotLhat = S2x*L1+S2y*L2+S2z*L3
    S1_perp1 = S1x-S1dotLhat*Lhat1
    S1_perp2 = S1y-S1dotLhat*Lhat2
    S1_perp3 = S1z-S1dotLhat*Lhat3
    S2_perp1 = S2x-S2dotLhat*Lhat1
    S2_perp2 = S2y-S2dotLhat*Lhat2
    S2_perp3 = S2z-S2dotLhat*Lhat3
    S_perp1 = S1_perp1+S2_perp1
    S_perp2 = S1_perp2+S2_perp2
    S_perp3 = S1_perp3+S2_perp3
    sigmaKerr1 = S1x+S2x
    sigmaKerr2 = S1y+S2y
    sigmaKerr3 = S1z+S2z
    sKerr_norm = np.sqrt(sigmaKerr1*sigmaKerr1+sigmaKerr2*sigmaKerr2+sigmaKerr3*sigmaKerr3)
    S_con = (sigmaKerr1*Lhat1+sigmaKerr2*Lhat2+sigmaKerr3*Lhat3)/(1-2*eta)+(S_perp1*sigmaKerr1+S_perp2*sigmaKerr2+S_perp3*sigmaKerr3)/(sKerr_norm*2*(12*eta))
    chi = S_con
    r2 = x1*x1+x2*x2+x3*x3
    r = np.sqrt(r2)
    u = 1./r
    u2 = u*u
    u3 = u2*u
    u4 = u2*u2
    u5 = u4*u
    nx = x1*u
    ny = x2*u
    nz = x3*u
    sKerr_x = sigmaKerr1
    sKerr_y = sigmaKerr2
    sKerr_z = sigmaKerr3
    sStar_x = S1x*m1/m2+S2x*m2/m1
    sStar_y = S1y*m1/m2+S2y*m2/m1
    sStar_z = S1z*m1/m2+S2z*m2/m1
    a2 = sKerr_x*sKerr_x+sKerr_y*sKerr_y+sKerr_z*sKerr_z
    a = np.sqrt(a2)
    inva = 1./a
    e3_x = sKerr_x*inva
    e3_y = sKerr_y*inva
    e3_z = sKerr_z*inva
    lambda_vec1 = Lhat2*nz-Lhat3*ny
    lambda_vec2 = -(Lhat1*nz-Lhat3*nx)
    lambda_vec3 = Lhat1*ny-Lhat2*nx
    nrm = np.sqrt(lambda_vec1*lambda_vec1+lambda_vec2*lambda_vec2+lambda_vec3*lambda_vec3)
    lambda_hat1 = lambda_vec1/nrm
    lambda_hat2 = lambda_vec2/nrm
    lambda_hat3 = lambda_vec3/nrm
    costheta = e3_x*nx+e3_y*ny+e3_z*nz
    xi2 = 1.-costheta*costheta
    xi_x = -e3_z*ny+e3_y*nz
    xi_y = e3_z*nx-e3_x*nz
    xi_z = -e3_y*nx+e3_x*ny
    vx = -nz*xi_y+ny*xi_z
    vy = nz*xi_x-nx*xi_z
    vz = -ny*xi_x+nx*xi_y
    w2 = r2+a2
    rho2 = r2+a2*costheta*costheta
    KK = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    m1PlusEtaKK = -1+eta*KK
    invm1PlusEtaKK = 1./m1PlusEtaKK
    k0 = KK*(m1PlusEtaKK-1.)
    k1 = -2.*(k0+KK)*m1PlusEtaKK
    k2 = (k1*(k1-4.*m1PlusEtaKK))*0.5-a*a*k0*m1PlusEtaKK*m1PlusEtaKK
    k3 = -(k1*k1)*k1*np.true_divide(1,3)+k1*k2+(k1*k1)*m1PlusEtaKK-2.*(k2-m1PlusEtaKK)*m1PlusEtaKK-a*a*k1*(m1PlusEtaKK*m1PlusEtaKK)
    k4 = ((24./96.)*(k1*k1)*(k1*k1)-(96./96.)*(k1*k1)*k2+(48./96.)*k2*k2-(64./96.)*(k1*k1)*k1*m1PlusEtaKK+(48./96.)*(a*a)*(k1*k1-2.*k2)*(m1PlusEtaKK*m1PlusEtaKK)+(96./96.)*k1*(k3+2.*k2*m1PlusEtaKK)-m1PlusEtaKK*((192./96.)*k3+m1PlusEtaKK*(-(3008./96.)+(123./96.)*np.pi*np.pi)))
    k5 = m1PlusEtaKK*m1PlusEtaKK*(-4237./60.+128./5.*EMgamma+2275.*np.pi*np.pi/512.-np.true_divide(1,3)*(a*a)*(k1*k1*k1-3.*(k1*k2)+3.*k3)-((k1*k1*k1*k1*k1)-5.*(k1*k1*k1*k2)+5.*k1*k2*k2+5.*k1*k1*k3-5.*k2*k3-5.*k1*k4)*np.true_divide(1,5)*invm1PlusEtaKK*invm1PlusEtaKK+((k1*k1*k1*k1)-4.*(k1*k1*k2)+2.*k2*k2+4.*k1*k3-4.*k4)*0.5*invm1PlusEtaKK+(256./5.)*np.log(2)+(41.*np.pi*np.pi/32.-221./6.)*eta)
    k5l = (m1PlusEtaKK*m1PlusEtaKK)*(64./5.)
    bulk = invm1PlusEtaKK*(invm1PlusEtaKK+(2.*u))+a2*u2
    logu = np.log(u)
    logarg = k1*u+k2*u2+k3*u3+k4*u4+k5*u5+k5l*u5*logu
    logTerms = 1.+eta*k0+eta*np.log(1.+logarg)
    deltaU = bulk*logTerms
    deltaT = r2*deltaU
    deltaU_u = 2.*(invm1PlusEtaKK+a2*u)*logTerms+bulk*(eta*(k1+u*(2.*k2+u*(3.*k3+u*(4.*k4+5.*(k5+k5l*logu)*u)))))/(1.+logarg)
    deltaT_r = 2.*r*deltaU-deltaU_u
    Lamb = w2*w2-a2*deltaT*xi2
    invrho2xi2Lamb = 1./(rho2*xi2*Lamb)
    invrho2 = xi2*(Lamb*invrho2xi2Lamb)
    invxi2 = rho2*(Lamb*invrho2xi2Lamb)
    invLamb = xi2*rho2*invrho2xi2Lamb
    D = 1.+np.log1p(6.*eta*u2+2.*(26.-3.*eta)*eta*u3)
    deltaR = deltaT*D
    qq = 2.*eta*(4.-3.*eta)
    ww = 2.*a*r
    csi = np.sqrt(deltaT*deltaR)/w2
    csi1 = 1.0+(1.-np.abs(1.-tortoise))*(csi-1.0)
    csi2 = 1.0+(0.5-0.5*np.sign(1.5-tortoise))*(csi-1.0)
    prT = (p1*nx+p2*ny+p3*nz)*csi2
    tmpP1 = p1-nx*prT*(1.-1./csi1)
    tmpP2 = p2-ny*prT*(1.-1./csi1)
    tmpP3 = p3-nz*prT*(1.-1./csi1)
    pxir = (tmpP1*xi_x+tmpP1*xi_y+tmpP3*xi_z)*r
    pvr = (tmpP1*vx+tmpP2*vy+tmpP3*vz)*r
    pn = tmpP1*nx+tmpP2*ny+tmpP3*nz
    pr = pn
    pf = pxir
    ptheta2 = pvr*pvr*invxi2
    Hns = np.sqrt((1.+((prT*prT)*(prT*prT))*qq*u2+ptheta2*invrho2+pf*pf*rho2*invLamb*invxi2+pr*pr*deltaR*invrho2)*(rho2*deltaT)*invLamb)+pf*ww*invLamb
    B = np.sqrt(deltaT)
    sqrtdeltaT = B
    sqrtdeltaR = np.sqrt(deltaR)
    invdeltaTsqrtdeltaTsqrtdeltaR = 1./(sqrtdeltaT*deltaT*sqrtdeltaR)
    invdeltaT = sqrtdeltaT*(sqrtdeltaR*invdeltaTsqrtdeltaTsqrtdeltaR)
    invsqrtdeltaT = deltaT*(sqrtdeltaR*invdeltaTsqrtdeltaTsqrtdeltaR)
    invsqrtdeltaR = deltaT*sqrtdeltaT*invdeltaTsqrtdeltaTsqrtdeltaR
    w = ww*invLamb
    expnu = np.sqrt(deltaT*rho2*invLamb)
    expMU = np.sqrt(rho2)
    invexpnuexpMU = 1./(expnu*expMU)
    invexpnu = expMU*invexpnuexpMU
    invexpMU = expnu*invexpnuexpMU
    Lamb_r = 4.*r*w2-a2*deltaT_r*xi2
    ww_r = 2.*a
    BR = (-deltaT*invsqrtdeltaR+deltaT_r*0.5)*invsqrtdeltaT
    wr = (-Lamb_r*ww+Lamb*ww_r)*(invLamb*invLamb)
    nur = (r*invrho2+(w2*(-4.*r*deltaT+w2*deltaT_r))*0.5*invdeltaT*invLamb)
    mur = (r*invrho2-invsqrtdeltaR)
    wcos = -2.*(a2*costheta)*deltaT*ww*(invLamb*invLamb)
    nucos = (a2*costheta)*w2*(w2-deltaT)*(invrho2*invLamb)
    mucos = (a2*costheta)*invrho2
    Q = 1.+pvr*pvr*invrho2*invxi2+pxir*pxir*rho2*invLamb*invxi2+pn*pn*deltaR*invrho2
    pn2 = pr*pr*deltaR*invrho2
    pp = Q-1.
    sMultiplier1 = (-706.0+(206.0*pp-282.0*pn2+(-96.0*pn2*pp+23.0*pp*pp)*r)*r+(54.0+(-120.0*pp+324.0*pn2+(-360.0*pn2*pn2+126.0*pn2*pp+3.0*pp*pp)*r)*r)*eta)*eta*u2*(-1./72.0)
    sMultiplier2 = (-56.0/9.0*u2+(-2.0/3.0*pn2*u2-109.0/36.0*pp*u2+(pn2*pp*u2/4.0-5.0/16.0*pp*pp*u2)*r)*r+(-7.0/3.0*u2+(-49.0/8.0*pn2*u2+17.0/12.0*pp*u2+(45.0/8.0*pn2*pn2*u2-13.0/8.0*pn2*pp*u2)*r)*r)*eta)*eta
    coeff00dSO = -44.5324
    coeff01dSO = 0
    coeff02dSO = 0
    coeff03dSO = 66.1987
    coeff10dSO = 0
    coeff11dSO = 0
    coeff12dSO = -343.313
    coeff13dSO = -568.651
    coeff20dSO = 0
    coeff21dSO = 2495.29
    coeff22dSO = 0
    coeff23dSO = 147.481
    coeff30dSO = 0
    coeff31dSO = 0
    coeff32dSO = 0
    coeff33dSO = 0
    chi2 = chi*chi
    chi3 = chi2*chi
    eta2 = eta*eta
    eta3 = eta2*eta
    d1v2 = coeff00dSO+coeff01dSO*chi+coeff02dSO*chi2+coeff03dSO*chi3+coeff10dSO*eta+coeff11dSO*eta*chi+coeff12dSO*eta*chi2+coeff13dSO*eta*chi3+coeff20dSO*eta2+coeff21dSO*eta2*chi+coeff22dSO*eta2*chi2+coeff23dSO*eta2*chi3+coeff30dSO*eta3+coeff31dSO*eta3*chi+coeff32dSO*eta3*chi2+coeff33dSO*eta3*chi3
    deltaSigmaStar_x = eta*((-8.-3.*r*(12.*pn2-pp))*sKerr_x+(14.+(-30.*pn2+4.*pp)*r)*sStar_x)*(1./12.)*u+sMultiplier1*sStar_x+sMultiplier2*sKerr_x+d1v2*eta*sKerr_x*u3
    deltaSigmaStar_y = eta*((-8.-3.*r*(12.*pn2-pp))*sKerr_y+(14.+(-30.*pn2+4.*pp)*r)*sStar_y)*(1./12.)*u+sMultiplier1*sStar_y+sMultiplier2*sKerr_y+d1v2*eta*sKerr_y*u3
    deltaSigmaStar_z = eta*((-8.-3.*r*(12.*pn2-pp))*sKerr_z+(14.+(-30.*pn2+4.*pp)*r)*sStar_z)*(1./12.)*u+sMultiplier1*sStar_z+sMultiplier2*sKerr_z+d1v2*eta*sKerr_z*u3
    sx = sStar_x+deltaSigmaStar_x
    sy = sStar_y+deltaSigmaStar_y
    sz = sStar_z+deltaSigmaStar_z
    sxi = sx*xi_x+sy*xi_y+sz*xi_z
    sv = sx*vx+sy*vy+sz*vz
    sn = sx*nx+sy*ny+sz*nz
    s3 = sx*e3_x+sy*e3_y+sz*e3_z
    sqrtQ = np.sqrt(Q)
    inv2B1psqrtQsqrtQ = 1./(2.*B*(1.+sqrtQ)*sqrtQ)
    Hwr = ((invexpMU*invexpMU*invexpMU*invexpnu)*sqrtdeltaR*((expMU*expMU)*(expnu*expnu)*(pxir*pxir)*sv-B*(expMU*expnu)*pvr*pxir*sxi+B*B*xi2*((expMU*expMU)*(sqrtQ+Q)*sv+pn*pvr*sn*sqrtdeltaR-pn*pn*sv*deltaR)))*inv2B1psqrtQsqrtQ*invxi2
    Hwcos = ((invexpMU*invexpMU*invexpMU*invexpnu)*(sn*(-((expMU*expMU)*(expnu*expnu)*(pxir*pxir))+B*B*(pvr*pvr-(expMU*expMU)*(sqrtQ+Q)*xi2))-B*pn*(B*pvr*sv-(expMU*expnu)*pxir*sxi)*sqrtdeltaR))*inv2B1psqrtQsqrtQ
    HSOL = ((expnu*expnu*invexpMU)*(-B+(expMU*expnu))*pxir*s3)/(deltaT*sqrtQ)*invxi2
    HSONL = ((expnu*(invexpMU*invexpMU))*(-(B*expMU*expnu*nucos*pxir*(1.+2.*sqrtQ)*sn*xi2)+(-(BR*(expMU*expnu)*pxir*(1.+sqrtQ)*sv)+B*((expMU*expnu)*nur*pxir*(1.+2.*sqrtQ)*sv+B*mur*pvr*sxi+B*sxi*(-(mucos*pn*xi2)+sqrtQ*(mur*pvr-nur*pvr+(-mucos+nucos)*pn*xi2))))*sqrtdeltaR))*invxi2/(deltaT*(sqrtQ+Q))
    Hs = w*s3+Hwr*wr+Hwcos*wcos+HSOL+HSONL
    Hss = -0.5*u3*(sx*sx+sy*sy+sz*sz-3.*sn*sn)
    coeff00dSS = 6.06807
    coeff01dSS = 0
    coeff02dSS = 0
    coeff03dSS = 0
    coeff10dSS = -36.0272
    coeff11dSS = 37.1964
    coeff12dSS = 0
    coeff13dSS = -41.0003
    coeff20dSS = 0
    coeff21dSS = 0
    coeff22dSS = -326.325
    coeff23dSS = 528.511
    coeff30dSS = 706.958
    coeff31dSS = 0
    coeff32dSS = 1161.78
    coeff33dSS = 0.
    dheffSSv2 = coeff00dSS+coeff01dSS*chi+coeff02dSS*chi2+coeff03dSS*chi3+coeff10dSS*eta+coeff11dSS*eta*chi+coeff12dSS*eta*chi2+coeff13dSS*eta*chi3+coeff20dSS*eta2+coeff21dSS*eta2*chi+coeff22dSS*eta2*chi2+coeff23dSS*eta2*chi3+coeff30dSS*eta3+coeff31dSS*eta3*chi+coeff32dSS*eta3*chi2+coeff33dSS*eta3*chi3
    H = Hns+Hs+Hss+dheffSSv2*eta*u4*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1.+2.*eta*(H-1.))
    L1_prmx2 = p3
    L1_prmx3 = -p2
    L1_prmp2 = -x3
    L1_prmp3 = x2
    L2_prmx1 = -p3
    L2_prmx3 = p1
    L2_prmp1 = x3
    L2_prmp3 = -x1
    L3_prmx1 = p2
    L3_prmx2 = -p1
    L3_prmp1 = -x2
    L3_prmp2 = x1
    L_mag_prmx1 = (L2*L2_prmx1 + L3*L3_prmx1)/np.sqrt(L1**2 + L2**2 + L3**2)
    L_mag_prmx2 = (L1*L1_prmx2 + L3*L3_prmx2)/np.sqrt(L1**2 + L2**2 + L3**2)
    L_mag_prmx3 = (L1*L1_prmx3 + L2*L2_prmx3)/np.sqrt(L1**2 + L2**2 + L3**2)
    L_mag_prmp1 = (L2*L2_prmp1 + L3*L3_prmp1)/np.sqrt(L1**2 + L2**2 + L3**2)
    L_mag_prmp2 = (L1*L1_prmp2 + L3*L3_prmp2)/np.sqrt(L1**2 + L2**2 + L3**2)
    L_mag_prmp3 = (L1*L1_prmp3 + L2*L2_prmp3)/np.sqrt(L1**2 + L2**2 + L3**2)
    Lhat1_prmx1 = -L1*L_mag_prmx1/L_mag**2
    Lhat1_prmx2 = -L1*L_mag_prmx2/L_mag**2 + L1_prmx2/L_mag
    Lhat1_prmx3 = -L1*L_mag_prmx3/L_mag**2 + L1_prmx3/L_mag
    Lhat1_prmp1 = -L1*L_mag_prmp1/L_mag**2
    Lhat1_prmp2 = -L1*L_mag_prmp2/L_mag**2 + L1_prmp2/L_mag
    Lhat1_prmp3 = -L1*L_mag_prmp3/L_mag**2 + L1_prmp3/L_mag
    Lhat2_prmx1 = -L2*L_mag_prmx1/L_mag**2 + L2_prmx1/L_mag
    Lhat2_prmx2 = -L2*L_mag_prmx2/L_mag**2
    Lhat2_prmx3 = -L2*L_mag_prmx3/L_mag**2 + L2_prmx3/L_mag
    Lhat2_prmp1 = -L2*L_mag_prmp1/L_mag**2 + L2_prmp1/L_mag
    Lhat2_prmp2 = -L2*L_mag_prmp2/L_mag**2
    Lhat2_prmp3 = -L2*L_mag_prmp3/L_mag**2 + L2_prmp3/L_mag
    Lhat3_prmx1 = -L3*L_mag_prmx1/L_mag**2 + L3_prmx1/L_mag
    Lhat3_prmx2 = -L3*L_mag_prmx2/L_mag**2 + L3_prmx2/L_mag
    Lhat3_prmx3 = -L3*L_mag_prmx3/L_mag**2
    Lhat3_prmp1 = -L3*L_mag_prmp1/L_mag**2 + L3_prmp1/L_mag
    Lhat3_prmp2 = -L3*L_mag_prmp2/L_mag**2 + L3_prmp2/L_mag
    Lhat3_prmp3 = -L3*L_mag_prmp3/L_mag**2
    S1dotLhat_prmx1 = L2_prmx1*S1y + L3_prmx1*S1z
    S1dotLhat_prmx2 = L1_prmx2*S1x + L3_prmx2*S1z
    S1dotLhat_prmx3 = L1_prmx3*S1x + L2_prmx3*S1y
    S1dotLhat_prmp1 = L2_prmp1*S1y + L3_prmp1*S1z
    S1dotLhat_prmp2 = L1_prmp2*S1x + L3_prmp2*S1z
    S1dotLhat_prmp3 = L1_prmp3*S1x + L2_prmp3*S1y
    S1dotLhat_prmS1x = L1
    S1dotLhat_prmS1y = L2
    S1dotLhat_prmS1z = L3
    S2dotLhat_prmx1 = L2_prmx1*S2y + L3_prmx1*S2z
    S2dotLhat_prmx2 = L1_prmx2*S2x + L3_prmx2*S2z
    S2dotLhat_prmx3 = L1_prmx3*S2x + L2_prmx3*S2y
    S2dotLhat_prmp1 = L2_prmp1*S2y + L3_prmp1*S2z
    S2dotLhat_prmp2 = L1_prmp2*S2x + L3_prmp2*S2z
    S2dotLhat_prmp3 = L1_prmp3*S2x + L2_prmp3*S2y
    S2dotLhat_prmS2x = L1
    S2dotLhat_prmS2y = L2
    S2dotLhat_prmS2z = L3
    S1_perp1_prmx1 = -Lhat1*S1dotLhat_prmx1 - Lhat1_prmx1*S1dotLhat
    S1_perp1_prmx2 = -Lhat1*S1dotLhat_prmx2 - Lhat1_prmx2*S1dotLhat
    S1_perp1_prmx3 = -Lhat1*S1dotLhat_prmx3 - Lhat1_prmx3*S1dotLhat
    S1_perp1_prmp1 = -Lhat1*S1dotLhat_prmp1 - Lhat1_prmp1*S1dotLhat
    S1_perp1_prmp2 = -Lhat1*S1dotLhat_prmp2 - Lhat1_prmp2*S1dotLhat
    S1_perp1_prmp3 = -Lhat1*S1dotLhat_prmp3 - Lhat1_prmp3*S1dotLhat
    S1_perp1_prmS1x = -Lhat1*S1dotLhat_prmS1x + 1
    S1_perp1_prmS1y = -Lhat1*S1dotLhat_prmS1y
    S1_perp1_prmS1z = -Lhat1*S1dotLhat_prmS1z
    S1_perp2_prmx1 = -Lhat2*S1dotLhat_prmx1 - Lhat2_prmx1*S1dotLhat
    S1_perp2_prmx2 = -Lhat2*S1dotLhat_prmx2 - Lhat2_prmx2*S1dotLhat
    S1_perp2_prmx3 = -Lhat2*S1dotLhat_prmx3 - Lhat2_prmx3*S1dotLhat
    S1_perp2_prmp1 = -Lhat2*S1dotLhat_prmp1 - Lhat2_prmp1*S1dotLhat
    S1_perp2_prmp2 = -Lhat2*S1dotLhat_prmp2 - Lhat2_prmp2*S1dotLhat
    S1_perp2_prmp3 = -Lhat2*S1dotLhat_prmp3 - Lhat2_prmp3*S1dotLhat
    S1_perp2_prmS1x = -Lhat2*S1dotLhat_prmS1x
    S1_perp2_prmS1y = -Lhat2*S1dotLhat_prmS1y + 1
    S1_perp2_prmS1z = -Lhat2*S1dotLhat_prmS1z
    S1_perp3_prmx1 = -Lhat3*S1dotLhat_prmx1 - Lhat3_prmx1*S1dotLhat
    S1_perp3_prmx2 = -Lhat3*S1dotLhat_prmx2 - Lhat3_prmx2*S1dotLhat
    S1_perp3_prmx3 = -Lhat3*S1dotLhat_prmx3 - Lhat3_prmx3*S1dotLhat
    S1_perp3_prmp1 = -Lhat3*S1dotLhat_prmp1 - Lhat3_prmp1*S1dotLhat
    S1_perp3_prmp2 = -Lhat3*S1dotLhat_prmp2 - Lhat3_prmp2*S1dotLhat
    S1_perp3_prmp3 = -Lhat3*S1dotLhat_prmp3 - Lhat3_prmp3*S1dotLhat
    S1_perp3_prmS1x = -Lhat3*S1dotLhat_prmS1x
    S1_perp3_prmS1y = -Lhat3*S1dotLhat_prmS1y
    S1_perp3_prmS1z = -Lhat3*S1dotLhat_prmS1z + 1
    S2_perp1_prmx1 = -Lhat1*S2dotLhat_prmx1 - Lhat1_prmx1*S2dotLhat
    S2_perp1_prmx2 = -Lhat1*S2dotLhat_prmx2 - Lhat1_prmx2*S2dotLhat
    S2_perp1_prmx3 = -Lhat1*S2dotLhat_prmx3 - Lhat1_prmx3*S2dotLhat
    S2_perp1_prmp1 = -Lhat1*S2dotLhat_prmp1 - Lhat1_prmp1*S2dotLhat
    S2_perp1_prmp2 = -Lhat1*S2dotLhat_prmp2 - Lhat1_prmp2*S2dotLhat
    S2_perp1_prmp3 = -Lhat1*S2dotLhat_prmp3 - Lhat1_prmp3*S2dotLhat
    S2_perp1_prmS2x = -Lhat1*S2dotLhat_prmS2x + 1
    S2_perp1_prmS2y = -Lhat1*S2dotLhat_prmS2y
    S2_perp1_prmS2z = -Lhat1*S2dotLhat_prmS2z
    S2_perp2_prmx1 = -Lhat2*S2dotLhat_prmx1 - Lhat2_prmx1*S2dotLhat
    S2_perp2_prmx2 = -Lhat2*S2dotLhat_prmx2 - Lhat2_prmx2*S2dotLhat
    S2_perp2_prmx3 = -Lhat2*S2dotLhat_prmx3 - Lhat2_prmx3*S2dotLhat
    S2_perp2_prmp1 = -Lhat2*S2dotLhat_prmp1 - Lhat2_prmp1*S2dotLhat
    S2_perp2_prmp2 = -Lhat2*S2dotLhat_prmp2 - Lhat2_prmp2*S2dotLhat
    S2_perp2_prmp3 = -Lhat2*S2dotLhat_prmp3 - Lhat2_prmp3*S2dotLhat
    S2_perp2_prmS2x = -Lhat2*S2dotLhat_prmS2x
    S2_perp2_prmS2y = -Lhat2*S2dotLhat_prmS2y + 1
    S2_perp2_prmS2z = -Lhat2*S2dotLhat_prmS2z
    S2_perp3_prmx1 = -Lhat3*S2dotLhat_prmx1 - Lhat3_prmx1*S2dotLhat
    S2_perp3_prmx2 = -Lhat3*S2dotLhat_prmx2 - Lhat3_prmx2*S2dotLhat
    S2_perp3_prmx3 = -Lhat3*S2dotLhat_prmx3 - Lhat3_prmx3*S2dotLhat
    S2_perp3_prmp1 = -Lhat3*S2dotLhat_prmp1 - Lhat3_prmp1*S2dotLhat
    S2_perp3_prmp2 = -Lhat3*S2dotLhat_prmp2 - Lhat3_prmp2*S2dotLhat
    S2_perp3_prmp3 = -Lhat3*S2dotLhat_prmp3 - Lhat3_prmp3*S2dotLhat
    S2_perp3_prmS2x = -Lhat3*S2dotLhat_prmS2x
    S2_perp3_prmS2y = -Lhat3*S2dotLhat_prmS2y
    S2_perp3_prmS2z = -Lhat3*S2dotLhat_prmS2z + 1
    S_perp1_prmx1 = S1_perp1_prmx1 + S2_perp1_prmx1
    S_perp1_prmx2 = S1_perp1_prmx2 + S2_perp1_prmx2
    S_perp1_prmx3 = S1_perp1_prmx3 + S2_perp1_prmx3
    S_perp1_prmp1 = S1_perp1_prmp1 + S2_perp1_prmp1
    S_perp1_prmp2 = S1_perp1_prmp2 + S2_perp1_prmp2
    S_perp1_prmp3 = S1_perp1_prmp3 + S2_perp1_prmp3
    S_perp1_prmS1x = S1_perp1_prmS1x
    S_perp1_prmS1y = S1_perp1_prmS1y
    S_perp1_prmS1z = S1_perp1_prmS1z
    S_perp1_prmS2x = S2_perp1_prmS2x
    S_perp1_prmS2y = S2_perp1_prmS2y
    S_perp1_prmS2z = S2_perp1_prmS2z
    S_perp2_prmx1 = S1_perp2_prmx1 + S2_perp2_prmx1
    S_perp2_prmx2 = S1_perp2_prmx2 + S2_perp2_prmx2
    S_perp2_prmx3 = S1_perp2_prmx3 + S2_perp2_prmx3
    S_perp2_prmp1 = S1_perp2_prmp1 + S2_perp2_prmp1
    S_perp2_prmp2 = S1_perp2_prmp2 + S2_perp2_prmp2
    S_perp2_prmp3 = S1_perp2_prmp3 + S2_perp2_prmp3
    S_perp2_prmS1x = S1_perp2_prmS1x
    S_perp2_prmS1y = S1_perp2_prmS1y
    S_perp2_prmS1z = S1_perp2_prmS1z
    S_perp2_prmS2x = S2_perp2_prmS2x
    S_perp2_prmS2y = S2_perp2_prmS2y
    S_perp2_prmS2z = S2_perp2_prmS2z
    S_perp3_prmx1 = S1_perp3_prmx1 + S2_perp3_prmx1
    S_perp3_prmx2 = S1_perp3_prmx2 + S2_perp3_prmx2
    S_perp3_prmx3 = S1_perp3_prmx3 + S2_perp3_prmx3
    S_perp3_prmp1 = S1_perp3_prmp1 + S2_perp3_prmp1
    S_perp3_prmp2 = S1_perp3_prmp2 + S2_perp3_prmp2
    S_perp3_prmp3 = S1_perp3_prmp3 + S2_perp3_prmp3
    S_perp3_prmS1x = S1_perp3_prmS1x
    S_perp3_prmS1y = S1_perp3_prmS1y
    S_perp3_prmS1z = S1_perp3_prmS1z
    S_perp3_prmS2x = S2_perp3_prmS2x
    S_perp3_prmS2y = S2_perp3_prmS2y
    S_perp3_prmS2z = S2_perp3_prmS2z
    sigmaKerr1_prmS1x = 1
    sigmaKerr1_prmS2x = 1
    sigmaKerr2_prmS1y = 1
    sigmaKerr2_prmS2y = 1
    sigmaKerr3_prmS1z = 1
    sigmaKerr3_prmS2z = 1
    sKerr_norm_prmS1x = sigmaKerr1*sigmaKerr1_prmS1x/np.sqrt(sigmaKerr1**2 + sigmaKerr2**2 + sigmaKerr3**2)
    sKerr_norm_prmS1y = sigmaKerr2*sigmaKerr2_prmS1y/np.sqrt(sigmaKerr1**2 + sigmaKerr2**2 + sigmaKerr3**2)
    sKerr_norm_prmS1z = sigmaKerr3*sigmaKerr3_prmS1z/np.sqrt(sigmaKerr1**2 + sigmaKerr2**2 + sigmaKerr3**2)
    sKerr_norm_prmS2x = sigmaKerr1*sigmaKerr1_prmS2x/np.sqrt(sigmaKerr1**2 + sigmaKerr2**2 + sigmaKerr3**2)
    sKerr_norm_prmS2y = sigmaKerr2*sigmaKerr2_prmS2y/np.sqrt(sigmaKerr1**2 + sigmaKerr2**2 + sigmaKerr3**2)
    sKerr_norm_prmS2z = sigmaKerr3*sigmaKerr3_prmS2z/np.sqrt(sigmaKerr1**2 + sigmaKerr2**2 + sigmaKerr3**2)
    S_con_prmx1 = (Lhat1_prmx1*sigmaKerr1 + Lhat2_prmx1*sigmaKerr2 + Lhat3_prmx1*sigmaKerr3)/(1 - 2*eta) + (S_perp1_prmx1*sigmaKerr1 + S_perp2_prmx1*sigmaKerr2 + S_perp3_prmx1*sigmaKerr3)/(24*eta*sKerr_norm)
    S_con_prmx2 = (Lhat1_prmx2*sigmaKerr1 + Lhat2_prmx2*sigmaKerr2 + Lhat3_prmx2*sigmaKerr3)/(1 - 2*eta) + (S_perp1_prmx2*sigmaKerr1 + S_perp2_prmx2*sigmaKerr2 + S_perp3_prmx2*sigmaKerr3)/(24*eta*sKerr_norm)
    S_con_prmx3 = (Lhat1_prmx3*sigmaKerr1 + Lhat2_prmx3*sigmaKerr2 + Lhat3_prmx3*sigmaKerr3)/(1 - 2*eta) + (S_perp1_prmx3*sigmaKerr1 + S_perp2_prmx3*sigmaKerr2 + S_perp3_prmx3*sigmaKerr3)/(24*eta*sKerr_norm)
    S_con_prmp1 = (Lhat1_prmp1*sigmaKerr1 + Lhat2_prmp1*sigmaKerr2 + Lhat3_prmp1*sigmaKerr3)/(1 - 2*eta) + (S_perp1_prmp1*sigmaKerr1 + S_perp2_prmp1*sigmaKerr2 + S_perp3_prmp1*sigmaKerr3)/(24*eta*sKerr_norm)
    S_con_prmp2 = (Lhat1_prmp2*sigmaKerr1 + Lhat2_prmp2*sigmaKerr2 + Lhat3_prmp2*sigmaKerr3)/(1 - 2*eta) + (S_perp1_prmp2*sigmaKerr1 + S_perp2_prmp2*sigmaKerr2 + S_perp3_prmp2*sigmaKerr3)/(24*eta*sKerr_norm)
    S_con_prmp3 = (Lhat1_prmp3*sigmaKerr1 + Lhat2_prmp3*sigmaKerr2 + Lhat3_prmp3*sigmaKerr3)/(1 - 2*eta) + (S_perp1_prmp3*sigmaKerr1 + S_perp2_prmp3*sigmaKerr2 + S_perp3_prmp3*sigmaKerr3)/(24*eta*sKerr_norm)
    S_con_prmS1x = Lhat1*sigmaKerr1_prmS1x/(1 - 2*eta) + (S_perp1*sigmaKerr1_prmS1x + S_perp1_prmS1x*sigmaKerr1 + S_perp2_prmS1x*sigmaKerr2 + S_perp3_prmS1x*sigmaKerr3)/(24*eta*sKerr_norm) + sKerr_norm_prmS1x*(-S_perp1*sigmaKerr1 - S_perp2*sigmaKerr2 - S_perp3*sigmaKerr3)/(24*eta*sKerr_norm**2)
    S_con_prmS1y = Lhat2*sigmaKerr2_prmS1y/(1 - 2*eta) + (S_perp1_prmS1y*sigmaKerr1 + S_perp2*sigmaKerr2_prmS1y + S_perp2_prmS1y*sigmaKerr2 + S_perp3_prmS1y*sigmaKerr3)/(24*eta*sKerr_norm) + sKerr_norm_prmS1y*(-S_perp1*sigmaKerr1 - S_perp2*sigmaKerr2 - S_perp3*sigmaKerr3)/(24*eta*sKerr_norm**2)
    S_con_prmS1z = Lhat3*sigmaKerr3_prmS1z/(1 - 2*eta) + (S_perp1_prmS1z*sigmaKerr1 + S_perp2_prmS1z*sigmaKerr2 + S_perp3*sigmaKerr3_prmS1z + S_perp3_prmS1z*sigmaKerr3)/(24*eta*sKerr_norm) + sKerr_norm_prmS1z*(-S_perp1*sigmaKerr1 - S_perp2*sigmaKerr2 - S_perp3*sigmaKerr3)/(24*eta*sKerr_norm**2)
    S_con_prmS2x = Lhat1*sigmaKerr1_prmS2x/(1 - 2*eta) + (S_perp1*sigmaKerr1_prmS2x + S_perp1_prmS2x*sigmaKerr1 + S_perp2_prmS2x*sigmaKerr2 + S_perp3_prmS2x*sigmaKerr3)/(24*eta*sKerr_norm) + sKerr_norm_prmS2x*(-S_perp1*sigmaKerr1 - S_perp2*sigmaKerr2 - S_perp3*sigmaKerr3)/(24*eta*sKerr_norm**2)
    S_con_prmS2y = Lhat2*sigmaKerr2_prmS2y/(1 - 2*eta) + (S_perp1_prmS2y*sigmaKerr1 + S_perp2*sigmaKerr2_prmS2y + S_perp2_prmS2y*sigmaKerr2 + S_perp3_prmS2y*sigmaKerr3)/(24*eta*sKerr_norm) + sKerr_norm_prmS2y*(-S_perp1*sigmaKerr1 - S_perp2*sigmaKerr2 - S_perp3*sigmaKerr3)/(24*eta*sKerr_norm**2)
    S_con_prmS2z = Lhat3*sigmaKerr3_prmS2z/(1 - 2*eta) + (S_perp1_prmS2z*sigmaKerr1 + S_perp2_prmS2z*sigmaKerr2 + S_perp3*sigmaKerr3_prmS2z + S_perp3_prmS2z*sigmaKerr3)/(24*eta*sKerr_norm) + sKerr_norm_prmS2z*(-S_perp1*sigmaKerr1 - S_perp2*sigmaKerr2 - S_perp3*sigmaKerr3)/(24*eta*sKerr_norm**2)
    chi_prmx1 = S_con_prmx1
    chi_prmx2 = S_con_prmx2
    chi_prmx3 = S_con_prmx3
    chi_prmp1 = S_con_prmp1
    chi_prmp2 = S_con_prmp2
    chi_prmp3 = S_con_prmp3
    chi_prmS1x = S_con_prmS1x
    chi_prmS1y = S_con_prmS1y
    chi_prmS1z = S_con_prmS1z
    chi_prmS2x = S_con_prmS2x
    chi_prmS2y = S_con_prmS2y
    chi_prmS2z = S_con_prmS2z
    r2_prmx1 = 2*x1
    r2_prmx2 = 2*x2
    r2_prmx3 = 2*x3
    r_prmx1 = r2_prmx1/(2*np.sqrt(r2))
    r_prmx2 = r2_prmx2/(2*np.sqrt(r2))
    r_prmx3 = r2_prmx3/(2*np.sqrt(r2))
    u_prmx1 = -1.0*r_prmx1/r**2
    u_prmx2 = -1.0*r_prmx2/r**2
    u_prmx3 = -1.0*r_prmx3/r**2
    u2_prmx1 = 2*u*u_prmx1
    u2_prmx2 = 2*u*u_prmx2
    u2_prmx3 = 2*u*u_prmx3
    u3_prmx1 = u*u2_prmx1 + u2*u_prmx1
    u3_prmx2 = u*u2_prmx2 + u2*u_prmx2
    u3_prmx3 = u*u2_prmx3 + u2*u_prmx3
    u4_prmx1 = 2*u2*u2_prmx1
    u4_prmx2 = 2*u2*u2_prmx2
    u4_prmx3 = 2*u2*u2_prmx3
    u5_prmx1 = u*u4_prmx1 + u4*u_prmx1
    u5_prmx2 = u*u4_prmx2 + u4*u_prmx2
    u5_prmx3 = u*u4_prmx3 + u4*u_prmx3
    nx_prmx1 = u + u_prmx1*x1
    nx_prmx2 = u_prmx2*x1
    nx_prmx3 = u_prmx3*x1
    ny_prmx1 = u_prmx1*x2
    ny_prmx2 = u + u_prmx2*x2
    ny_prmx3 = u_prmx3*x2
    nz_prmx1 = u_prmx1*x3
    nz_prmx2 = u_prmx2*x3
    nz_prmx3 = u + u_prmx3*x3
    sKerr_x_prmS1x = sigmaKerr1_prmS1x
    sKerr_x_prmS2x = sigmaKerr1_prmS2x
    sKerr_y_prmS1y = sigmaKerr2_prmS1y
    sKerr_y_prmS2y = sigmaKerr2_prmS2y
    sKerr_z_prmS1z = sigmaKerr3_prmS1z
    sKerr_z_prmS2z = sigmaKerr3_prmS2z
    sStar_x_prmS1x = m1/m2
    sStar_x_prmS2x = m2/m1
    sStar_y_prmS1y = m1/m2
    sStar_y_prmS2y = m2/m1
    sStar_z_prmS1z = m1/m2
    sStar_z_prmS2z = m2/m1
    a2_prmS1x = 2*sKerr_x*sKerr_x_prmS1x
    a2_prmS1y = 2*sKerr_y*sKerr_y_prmS1y
    a2_prmS1z = 2*sKerr_z*sKerr_z_prmS1z
    a2_prmS2x = 2*sKerr_x*sKerr_x_prmS2x
    a2_prmS2y = 2*sKerr_y*sKerr_y_prmS2y
    a2_prmS2z = 2*sKerr_z*sKerr_z_prmS2z
    a_prmS1x = a2_prmS1x/(2*np.sqrt(a2))
    a_prmS1y = a2_prmS1y/(2*np.sqrt(a2))
    a_prmS1z = a2_prmS1z/(2*np.sqrt(a2))
    a_prmS2x = a2_prmS2x/(2*np.sqrt(a2))
    a_prmS2y = a2_prmS2y/(2*np.sqrt(a2))
    a_prmS2z = a2_prmS2z/(2*np.sqrt(a2))
    inva_prmS1x = -1.0*a_prmS1x/a**2
    inva_prmS1y = -1.0*a_prmS1y/a**2
    inva_prmS1z = -1.0*a_prmS1z/a**2
    inva_prmS2x = -1.0*a_prmS2x/a**2
    inva_prmS2y = -1.0*a_prmS2y/a**2
    inva_prmS2z = -1.0*a_prmS2z/a**2
    e3_x_prmS1x = inva*sKerr_x_prmS1x + inva_prmS1x*sKerr_x
    e3_x_prmS1y = inva_prmS1y*sKerr_x
    e3_x_prmS1z = inva_prmS1z*sKerr_x
    e3_x_prmS2x = inva*sKerr_x_prmS2x + inva_prmS2x*sKerr_x
    e3_x_prmS2y = inva_prmS2y*sKerr_x
    e3_x_prmS2z = inva_prmS2z*sKerr_x
    e3_y_prmS1x = inva_prmS1x*sKerr_y
    e3_y_prmS1y = inva*sKerr_y_prmS1y + inva_prmS1y*sKerr_y
    e3_y_prmS1z = inva_prmS1z*sKerr_y
    e3_y_prmS2x = inva_prmS2x*sKerr_y
    e3_y_prmS2y = inva*sKerr_y_prmS2y + inva_prmS2y*sKerr_y
    e3_y_prmS2z = inva_prmS2z*sKerr_y
    e3_z_prmS1x = inva_prmS1x*sKerr_z
    e3_z_prmS1y = inva_prmS1y*sKerr_z
    e3_z_prmS1z = inva*sKerr_z_prmS1z + inva_prmS1z*sKerr_z
    e3_z_prmS2x = inva_prmS2x*sKerr_z
    e3_z_prmS2y = inva_prmS2y*sKerr_z
    e3_z_prmS2z = inva*sKerr_z_prmS2z + inva_prmS2z*sKerr_z
    lambda_vec1_prmx1 = Lhat2*nz_prmx1 + Lhat2_prmx1*nz - Lhat3*ny_prmx1 - Lhat3_prmx1*ny
    lambda_vec1_prmx2 = Lhat2*nz_prmx2 + Lhat2_prmx2*nz - Lhat3*ny_prmx2 - Lhat3_prmx2*ny
    lambda_vec1_prmx3 = Lhat2*nz_prmx3 + Lhat2_prmx3*nz - Lhat3*ny_prmx3 - Lhat3_prmx3*ny
    lambda_vec1_prmp1 = Lhat2_prmp1*nz - Lhat3_prmp1*ny
    lambda_vec1_prmp2 = Lhat2_prmp2*nz - Lhat3_prmp2*ny
    lambda_vec1_prmp3 = Lhat2_prmp3*nz - Lhat3_prmp3*ny
    lambda_vec2_prmx1 = -Lhat1*nz_prmx1 - Lhat1_prmx1*nz + Lhat3*nx_prmx1 + Lhat3_prmx1*nx
    lambda_vec2_prmx2 = -Lhat1*nz_prmx2 - Lhat1_prmx2*nz + Lhat3*nx_prmx2 + Lhat3_prmx2*nx
    lambda_vec2_prmx3 = -Lhat1*nz_prmx3 - Lhat1_prmx3*nz + Lhat3*nx_prmx3 + Lhat3_prmx3*nx
    lambda_vec2_prmp1 = -Lhat1_prmp1*nz + Lhat3*nx_prmp1 + Lhat3_prmp1*nx
    lambda_vec2_prmp2 = -Lhat1_prmp2*nz + Lhat3*nx_prmp2 + Lhat3_prmp2*nx
    lambda_vec2_prmp3 = -Lhat1_prmp3*nz + Lhat3*nx_prmp3 + Lhat3_prmp3*nx
    lambda_vec2_prmS1x = Lhat3*nx_prmS1x
    lambda_vec2_prmS1y = Lhat3*nx_prmS1y
    lambda_vec2_prmS1z = Lhat3*nx_prmS1z
    lambda_vec2_prmS2x = Lhat3*nx_prmS2x
    lambda_vec2_prmS2y = Lhat3*nx_prmS2y
    lambda_vec2_prmS2z = Lhat3*nx_prmS2z
    lambda_vec3_prmx1 = Lhat1*ny_prmx1 + Lhat1_prmx1*ny - Lhat2*nx_prmx1 - Lhat2_prmx1*nx
    lambda_vec3_prmx2 = Lhat1*ny_prmx2 + Lhat1_prmx2*ny - Lhat2*nx_prmx2 - Lhat2_prmx2*nx
    lambda_vec3_prmx3 = Lhat1*ny_prmx3 + Lhat1_prmx3*ny - Lhat2*nx_prmx3 - Lhat2_prmx3*nx
    lambda_vec3_prmp1 = Lhat1_prmp1*ny - Lhat2_prmp1*nx
    lambda_vec3_prmp2 = Lhat1_prmp2*ny - Lhat2_prmp2*nx
    lambda_vec3_prmp3 = Lhat1_prmp3*ny - Lhat2_prmp3*nx
    nrm_prmx1 = (lambda_vec1*lambda_vec1_prmx1 + lambda_vec2*lambda_vec2_prmx1 + lambda_vec3*lambda_vec3_prmx1)/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmx2 = (lambda_vec1*lambda_vec1_prmx2 + lambda_vec2*lambda_vec2_prmx2 + lambda_vec3*lambda_vec3_prmx2)/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmx3 = (lambda_vec1*lambda_vec1_prmx3 + lambda_vec2*lambda_vec2_prmx3 + lambda_vec3*lambda_vec3_prmx3)/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmp1 = (lambda_vec1*lambda_vec1_prmp1 + lambda_vec2*lambda_vec2_prmp1 + lambda_vec3*lambda_vec3_prmp1)/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmp2 = (lambda_vec1*lambda_vec1_prmp2 + lambda_vec2*lambda_vec2_prmp2 + lambda_vec3*lambda_vec3_prmp2)/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmp3 = (lambda_vec1*lambda_vec1_prmp3 + lambda_vec2*lambda_vec2_prmp3 + lambda_vec3*lambda_vec3_prmp3)/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmS1x = lambda_vec2*lambda_vec2_prmS1x/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmS1y = lambda_vec2*lambda_vec2_prmS1y/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmS1z = lambda_vec2*lambda_vec2_prmS1z/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmS2x = lambda_vec2*lambda_vec2_prmS2x/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmS2y = lambda_vec2*lambda_vec2_prmS2y/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    nrm_prmS2z = lambda_vec2*lambda_vec2_prmS2z/np.sqrt(lambda_vec1**2 + lambda_vec2**2 + lambda_vec3**2)
    lambda_hat1_prmx1 = -lambda_vec1*nrm_prmx1/nrm**2 + lambda_vec1_prmx1/nrm
    lambda_hat1_prmx2 = -lambda_vec1*nrm_prmx2/nrm**2 + lambda_vec1_prmx2/nrm
    lambda_hat1_prmx3 = -lambda_vec1*nrm_prmx3/nrm**2 + lambda_vec1_prmx3/nrm
    lambda_hat1_prmp1 = -lambda_vec1*nrm_prmp1/nrm**2 + lambda_vec1_prmp1/nrm
    lambda_hat1_prmp2 = -lambda_vec1*nrm_prmp2/nrm**2 + lambda_vec1_prmp2/nrm
    lambda_hat1_prmp3 = -lambda_vec1*nrm_prmp3/nrm**2 + lambda_vec1_prmp3/nrm
    lambda_hat1_prmS1x = -lambda_vec1*nrm_prmS1x/nrm**2
    lambda_hat1_prmS1y = -lambda_vec1*nrm_prmS1y/nrm**2
    lambda_hat1_prmS1z = -lambda_vec1*nrm_prmS1z/nrm**2
    lambda_hat1_prmS2x = -lambda_vec1*nrm_prmS2x/nrm**2
    lambda_hat1_prmS2y = -lambda_vec1*nrm_prmS2y/nrm**2
    lambda_hat1_prmS2z = -lambda_vec1*nrm_prmS2z/nrm**2
    lambda_hat2_prmx1 = -lambda_vec2*nrm_prmx1/nrm**2 + lambda_vec2_prmx1/nrm
    lambda_hat2_prmx2 = -lambda_vec2*nrm_prmx2/nrm**2 + lambda_vec2_prmx2/nrm
    lambda_hat2_prmx3 = -lambda_vec2*nrm_prmx3/nrm**2 + lambda_vec2_prmx3/nrm
    lambda_hat2_prmp1 = -lambda_vec2*nrm_prmp1/nrm**2 + lambda_vec2_prmp1/nrm
    lambda_hat2_prmp2 = -lambda_vec2*nrm_prmp2/nrm**2 + lambda_vec2_prmp2/nrm
    lambda_hat2_prmp3 = -lambda_vec2*nrm_prmp3/nrm**2 + lambda_vec2_prmp3/nrm
    lambda_hat2_prmS1x = -lambda_vec2*nrm_prmS1x/nrm**2 + lambda_vec2_prmS1x/nrm
    lambda_hat2_prmS1y = -lambda_vec2*nrm_prmS1y/nrm**2 + lambda_vec2_prmS1y/nrm
    lambda_hat2_prmS1z = -lambda_vec2*nrm_prmS1z/nrm**2 + lambda_vec2_prmS1z/nrm
    lambda_hat2_prmS2x = -lambda_vec2*nrm_prmS2x/nrm**2 + lambda_vec2_prmS2x/nrm
    lambda_hat2_prmS2y = -lambda_vec2*nrm_prmS2y/nrm**2 + lambda_vec2_prmS2y/nrm
    lambda_hat2_prmS2z = -lambda_vec2*nrm_prmS2z/nrm**2 + lambda_vec2_prmS2z/nrm
    lambda_hat3_prmx1 = -lambda_vec3*nrm_prmx1/nrm**2 + lambda_vec3_prmx1/nrm
    lambda_hat3_prmx2 = -lambda_vec3*nrm_prmx2/nrm**2 + lambda_vec3_prmx2/nrm
    lambda_hat3_prmx3 = -lambda_vec3*nrm_prmx3/nrm**2 + lambda_vec3_prmx3/nrm
    lambda_hat3_prmp1 = -lambda_vec3*nrm_prmp1/nrm**2 + lambda_vec3_prmp1/nrm
    lambda_hat3_prmp2 = -lambda_vec3*nrm_prmp2/nrm**2 + lambda_vec3_prmp2/nrm
    lambda_hat3_prmp3 = -lambda_vec3*nrm_prmp3/nrm**2 + lambda_vec3_prmp3/nrm
    lambda_hat3_prmS1x = -lambda_vec3*nrm_prmS1x/nrm**2
    lambda_hat3_prmS1y = -lambda_vec3*nrm_prmS1y/nrm**2
    lambda_hat3_prmS1z = -lambda_vec3*nrm_prmS1z/nrm**2
    lambda_hat3_prmS2x = -lambda_vec3*nrm_prmS2x/nrm**2
    lambda_hat3_prmS2y = -lambda_vec3*nrm_prmS2y/nrm**2
    lambda_hat3_prmS2z = -lambda_vec3*nrm_prmS2z/nrm**2
    costheta_prmx1 = e3_x*nx_prmx1 + e3_y*ny_prmx1 + e3_z*nz_prmx1
    costheta_prmx2 = e3_x*nx_prmx2 + e3_y*ny_prmx2 + e3_z*nz_prmx2
    costheta_prmx3 = e3_x*nx_prmx3 + e3_y*ny_prmx3 + e3_z*nz_prmx3
    costheta_prmS1x = e3_x_prmS1x*nx + e3_y_prmS1x*ny + e3_z_prmS1x*nz
    costheta_prmS1y = e3_x_prmS1y*nx + e3_y_prmS1y*ny + e3_z_prmS1y*nz
    costheta_prmS1z = e3_x_prmS1z*nx + e3_y_prmS1z*ny + e3_z_prmS1z*nz
    costheta_prmS2x = e3_x_prmS2x*nx + e3_y_prmS2x*ny + e3_z_prmS2x*nz
    costheta_prmS2y = e3_x_prmS2y*nx + e3_y_prmS2y*ny + e3_z_prmS2y*nz
    costheta_prmS2z = e3_x_prmS2z*nx + e3_y_prmS2z*ny + e3_z_prmS2z*nz
    xi2_prmx1 = -2*costheta*costheta_prmx1
    xi2_prmx2 = -2*costheta*costheta_prmx2
    xi2_prmx3 = -2*costheta*costheta_prmx3
    xi2_prmS1x = -2*costheta*costheta_prmS1x
    xi2_prmS1y = -2*costheta*costheta_prmS1y
    xi2_prmS1z = -2*costheta*costheta_prmS1z
    xi2_prmS2x = -2*costheta*costheta_prmS2x
    xi2_prmS2y = -2*costheta*costheta_prmS2y
    xi2_prmS2z = -2*costheta*costheta_prmS2z
    xi_x_prmx1 = e3_y*nz_prmx1 - e3_z*ny_prmx1
    xi_x_prmx2 = e3_y*nz_prmx2 - e3_z*ny_prmx2
    xi_x_prmx3 = e3_y*nz_prmx3 - e3_z*ny_prmx3
    xi_x_prmS1x = e3_y_prmS1x*nz - e3_z_prmS1x*ny
    xi_x_prmS1y = e3_y_prmS1y*nz - e3_z_prmS1y*ny
    xi_x_prmS1z = e3_y_prmS1z*nz - e3_z_prmS1z*ny
    xi_x_prmS2x = e3_y_prmS2x*nz - e3_z_prmS2x*ny
    xi_x_prmS2y = e3_y_prmS2y*nz - e3_z_prmS2y*ny
    xi_x_prmS2z = e3_y_prmS2z*nz - e3_z_prmS2z*ny
    xi_y_prmx1 = -e3_x*nz_prmx1 + e3_z*nx_prmx1
    xi_y_prmx2 = -e3_x*nz_prmx2 + e3_z*nx_prmx2
    xi_y_prmx3 = -e3_x*nz_prmx3 + e3_z*nx_prmx3
    xi_y_prmS1x = -e3_x_prmS1x*nz + e3_z_prmS1x*nx
    xi_y_prmS1y = -e3_x_prmS1y*nz + e3_z_prmS1y*nx
    xi_y_prmS1z = -e3_x_prmS1z*nz + e3_z_prmS1z*nx
    xi_y_prmS2x = -e3_x_prmS2x*nz + e3_z_prmS2x*nx
    xi_y_prmS2y = -e3_x_prmS2y*nz + e3_z_prmS2y*nx
    xi_y_prmS2z = -e3_x_prmS2z*nz + e3_z_prmS2z*nx
    xi_z_prmx1 = e3_x*ny_prmx1 - e3_y*nx_prmx1
    xi_z_prmx2 = e3_x*ny_prmx2 - e3_y*nx_prmx2
    xi_z_prmx3 = e3_x*ny_prmx3 - e3_y*nx_prmx3
    xi_z_prmS1x = e3_x_prmS1x*ny - e3_y_prmS1x*nx
    xi_z_prmS1y = e3_x_prmS1y*ny - e3_y_prmS1y*nx
    xi_z_prmS1z = e3_x_prmS1z*ny - e3_y_prmS1z*nx
    xi_z_prmS2x = e3_x_prmS2x*ny - e3_y_prmS2x*nx
    xi_z_prmS2y = e3_x_prmS2y*ny - e3_y_prmS2y*nx
    xi_z_prmS2z = e3_x_prmS2z*ny - e3_y_prmS2z*nx
    vx_prmx1 = ny*xi_z_prmx1 + ny_prmx1*xi_z - nz*xi_y_prmx1 - nz_prmx1*xi_y
    vx_prmx2 = ny*xi_z_prmx2 + ny_prmx2*xi_z - nz*xi_y_prmx2 - nz_prmx2*xi_y
    vx_prmx3 = ny*xi_z_prmx3 + ny_prmx3*xi_z - nz*xi_y_prmx3 - nz_prmx3*xi_y
    vx_prmS1x = ny*xi_z_prmS1x - nz*xi_y_prmS1x
    vx_prmS1y = ny*xi_z_prmS1y - nz*xi_y_prmS1y
    vx_prmS1z = ny*xi_z_prmS1z - nz*xi_y_prmS1z
    vx_prmS2x = ny*xi_z_prmS2x - nz*xi_y_prmS2x
    vx_prmS2y = ny*xi_z_prmS2y - nz*xi_y_prmS2y
    vx_prmS2z = ny*xi_z_prmS2z - nz*xi_y_prmS2z
    vy_prmx1 = -nx*xi_z_prmx1 - nx_prmx1*xi_z + nz*xi_x_prmx1 + nz_prmx1*xi_x
    vy_prmx2 = -nx*xi_z_prmx2 - nx_prmx2*xi_z + nz*xi_x_prmx2 + nz_prmx2*xi_x
    vy_prmx3 = -nx*xi_z_prmx3 - nx_prmx3*xi_z + nz*xi_x_prmx3 + nz_prmx3*xi_x
    vy_prmS1x = -nx*xi_z_prmS1x + nz*xi_x_prmS1x
    vy_prmS1y = -nx*xi_z_prmS1y + nz*xi_x_prmS1y
    vy_prmS1z = -nx*xi_z_prmS1z + nz*xi_x_prmS1z
    vy_prmS2x = -nx*xi_z_prmS2x + nz*xi_x_prmS2x
    vy_prmS2y = -nx*xi_z_prmS2y + nz*xi_x_prmS2y
    vy_prmS2z = -nx*xi_z_prmS2z + nz*xi_x_prmS2z
    vz_prmx1 = nx*xi_y_prmx1 + nx_prmx1*xi_y - ny*xi_x_prmx1 - ny_prmx1*xi_x
    vz_prmx2 = nx*xi_y_prmx2 + nx_prmx2*xi_y - ny*xi_x_prmx2 - ny_prmx2*xi_x
    vz_prmx3 = nx*xi_y_prmx3 + nx_prmx3*xi_y - ny*xi_x_prmx3 - ny_prmx3*xi_x
    vz_prmS1x = nx*xi_y_prmS1x - ny*xi_x_prmS1x
    vz_prmS1y = nx*xi_y_prmS1y - ny*xi_x_prmS1y
    vz_prmS1z = nx*xi_y_prmS1z - ny*xi_x_prmS1z
    vz_prmS2x = nx*xi_y_prmS2x - ny*xi_x_prmS2x
    vz_prmS2y = nx*xi_y_prmS2y - ny*xi_x_prmS2y
    vz_prmS2z = nx*xi_y_prmS2z - ny*xi_x_prmS2z
    w2_prmx1 = r2_prmx1
    w2_prmx2 = r2_prmx2
    w2_prmx3 = r2_prmx3
    w2_prmS1x = a2_prmS1x
    w2_prmS1y = a2_prmS1y
    w2_prmS1z = a2_prmS1z
    w2_prmS2x = a2_prmS2x
    w2_prmS2y = a2_prmS2y
    w2_prmS2z = a2_prmS2z
    rho2_prmx1 = 2*a2*costheta*costheta_prmx1 + r2_prmx1
    rho2_prmx2 = 2*a2*costheta*costheta_prmx2 + r2_prmx2
    rho2_prmx3 = 2*a2*costheta*costheta_prmx3 + r2_prmx3
    rho2_prmS1x = 2*a2*costheta*costheta_prmS1x + a2_prmS1x*costheta**2
    rho2_prmS1y = 2*a2*costheta*costheta_prmS1y + a2_prmS1y*costheta**2
    rho2_prmS1z = 2*a2*costheta*costheta_prmS1z + a2_prmS1z*costheta**2
    rho2_prmS2x = 2*a2*costheta*costheta_prmS2x + a2_prmS2x*costheta**2
    rho2_prmS2y = 2*a2*costheta*costheta_prmS2y + a2_prmS2y*costheta**2
    rho2_prmS2z = 2*a2*costheta*costheta_prmS2z + a2_prmS2z*costheta**2
    KK_prmx1 = -177.4974*chi**2*chi_prmx1*eta**3 - 1.280874*chi**2*chi_prmx1*eta + 4.30977*chi**2*chi_prmx1 + 62.3492*chi*chi_prmx1*eta**3 + 12.32932*chi*chi_prmx1*eta**2 - 2.76172*chi*chi_prmx1 - 27.5201*chi_prmx1*eta**3 + 17.3736*chi_prmx1*eta**2 + 2.26831*chi_prmx1*eta - 1.62045*chi_prmx1
    KK_prmx2 = -177.4974*chi**2*chi_prmx2*eta**3 - 1.280874*chi**2*chi_prmx2*eta + 4.30977*chi**2*chi_prmx2 + 62.3492*chi*chi_prmx2*eta**3 + 12.32932*chi*chi_prmx2*eta**2 - 2.76172*chi*chi_prmx2 - 27.5201*chi_prmx2*eta**3 + 17.3736*chi_prmx2*eta**2 + 2.26831*chi_prmx2*eta - 1.62045*chi_prmx2
    KK_prmx3 = -177.4974*chi**2*chi_prmx3*eta**3 - 1.280874*chi**2*chi_prmx3*eta + 4.30977*chi**2*chi_prmx3 + 62.3492*chi*chi_prmx3*eta**3 + 12.32932*chi*chi_prmx3*eta**2 - 2.76172*chi*chi_prmx3 - 27.5201*chi_prmx3*eta**3 + 17.3736*chi_prmx3*eta**2 + 2.26831*chi_prmx3*eta - 1.62045*chi_prmx3
    KK_prmp1 = -177.4974*chi**2*chi_prmp1*eta**3 - 1.280874*chi**2*chi_prmp1*eta + 4.30977*chi**2*chi_prmp1 + 62.3492*chi*chi_prmp1*eta**3 + 12.32932*chi*chi_prmp1*eta**2 - 2.76172*chi*chi_prmp1 - 27.5201*chi_prmp1*eta**3 + 17.3736*chi_prmp1*eta**2 + 2.26831*chi_prmp1*eta - 1.62045*chi_prmp1
    KK_prmp2 = -177.4974*chi**2*chi_prmp2*eta**3 - 1.280874*chi**2*chi_prmp2*eta + 4.30977*chi**2*chi_prmp2 + 62.3492*chi*chi_prmp2*eta**3 + 12.32932*chi*chi_prmp2*eta**2 - 2.76172*chi*chi_prmp2 - 27.5201*chi_prmp2*eta**3 + 17.3736*chi_prmp2*eta**2 + 2.26831*chi_prmp2*eta - 1.62045*chi_prmp2
    KK_prmp3 = -177.4974*chi**2*chi_prmp3*eta**3 - 1.280874*chi**2*chi_prmp3*eta + 4.30977*chi**2*chi_prmp3 + 62.3492*chi*chi_prmp3*eta**3 + 12.32932*chi*chi_prmp3*eta**2 - 2.76172*chi*chi_prmp3 - 27.5201*chi_prmp3*eta**3 + 17.3736*chi_prmp3*eta**2 + 2.26831*chi_prmp3*eta - 1.62045*chi_prmp3
    KK_prmS1x = -177.4974*chi**2*chi_prmS1x*eta**3 - 1.280874*chi**2*chi_prmS1x*eta + 4.30977*chi**2*chi_prmS1x + 62.3492*chi*chi_prmS1x*eta**3 + 12.32932*chi*chi_prmS1x*eta**2 - 2.76172*chi*chi_prmS1x - 27.5201*chi_prmS1x*eta**3 + 17.3736*chi_prmS1x*eta**2 + 2.26831*chi_prmS1x*eta - 1.62045*chi_prmS1x
    KK_prmS1y = -177.4974*chi**2*chi_prmS1y*eta**3 - 1.280874*chi**2*chi_prmS1y*eta + 4.30977*chi**2*chi_prmS1y + 62.3492*chi*chi_prmS1y*eta**3 + 12.32932*chi*chi_prmS1y*eta**2 - 2.76172*chi*chi_prmS1y - 27.5201*chi_prmS1y*eta**3 + 17.3736*chi_prmS1y*eta**2 + 2.26831*chi_prmS1y*eta - 1.62045*chi_prmS1y
    KK_prmS1z = -177.4974*chi**2*chi_prmS1z*eta**3 - 1.280874*chi**2*chi_prmS1z*eta + 4.30977*chi**2*chi_prmS1z + 62.3492*chi*chi_prmS1z*eta**3 + 12.32932*chi*chi_prmS1z*eta**2 - 2.76172*chi*chi_prmS1z - 27.5201*chi_prmS1z*eta**3 + 17.3736*chi_prmS1z*eta**2 + 2.26831*chi_prmS1z*eta - 1.62045*chi_prmS1z
    KK_prmS2x = -177.4974*chi**2*chi_prmS2x*eta**3 - 1.280874*chi**2*chi_prmS2x*eta + 4.30977*chi**2*chi_prmS2x + 62.3492*chi*chi_prmS2x*eta**3 + 12.32932*chi*chi_prmS2x*eta**2 - 2.76172*chi*chi_prmS2x - 27.5201*chi_prmS2x*eta**3 + 17.3736*chi_prmS2x*eta**2 + 2.26831*chi_prmS2x*eta - 1.62045*chi_prmS2x
    KK_prmS2y = -177.4974*chi**2*chi_prmS2y*eta**3 - 1.280874*chi**2*chi_prmS2y*eta + 4.30977*chi**2*chi_prmS2y + 62.3492*chi*chi_prmS2y*eta**3 + 12.32932*chi*chi_prmS2y*eta**2 - 2.76172*chi*chi_prmS2y - 27.5201*chi_prmS2y*eta**3 + 17.3736*chi_prmS2y*eta**2 + 2.26831*chi_prmS2y*eta - 1.62045*chi_prmS2y
    KK_prmS2z = -177.4974*chi**2*chi_prmS2z*eta**3 - 1.280874*chi**2*chi_prmS2z*eta + 4.30977*chi**2*chi_prmS2z + 62.3492*chi*chi_prmS2z*eta**3 + 12.32932*chi*chi_prmS2z*eta**2 - 2.76172*chi*chi_prmS2z - 27.5201*chi_prmS2z*eta**3 + 17.3736*chi_prmS2z*eta**2 + 2.26831*chi_prmS2z*eta - 1.62045*chi_prmS2z
    m1PlusEtaKK_prmx1 = KK_prmx1*eta
    m1PlusEtaKK_prmx2 = KK_prmx2*eta
    m1PlusEtaKK_prmx3 = KK_prmx3*eta
    m1PlusEtaKK_prmp1 = KK_prmp1*eta
    m1PlusEtaKK_prmp2 = KK_prmp2*eta
    m1PlusEtaKK_prmp3 = KK_prmp3*eta
    m1PlusEtaKK_prmS1x = KK_prmS1x*eta
    m1PlusEtaKK_prmS1y = KK_prmS1y*eta
    m1PlusEtaKK_prmS1z = KK_prmS1z*eta
    m1PlusEtaKK_prmS2x = KK_prmS2x*eta
    m1PlusEtaKK_prmS2y = KK_prmS2y*eta
    m1PlusEtaKK_prmS2z = KK_prmS2z*eta
    invm1PlusEtaKK_prmx1 = -1.0*m1PlusEtaKK_prmx1/m1PlusEtaKK**2
    invm1PlusEtaKK_prmx2 = -1.0*m1PlusEtaKK_prmx2/m1PlusEtaKK**2
    invm1PlusEtaKK_prmx3 = -1.0*m1PlusEtaKK_prmx3/m1PlusEtaKK**2
    invm1PlusEtaKK_prmp1 = -1.0*m1PlusEtaKK_prmp1/m1PlusEtaKK**2
    invm1PlusEtaKK_prmp2 = -1.0*m1PlusEtaKK_prmp2/m1PlusEtaKK**2
    invm1PlusEtaKK_prmp3 = -1.0*m1PlusEtaKK_prmp3/m1PlusEtaKK**2
    invm1PlusEtaKK_prmS1x = -1.0*m1PlusEtaKK_prmS1x/m1PlusEtaKK**2
    invm1PlusEtaKK_prmS1y = -1.0*m1PlusEtaKK_prmS1y/m1PlusEtaKK**2
    invm1PlusEtaKK_prmS1z = -1.0*m1PlusEtaKK_prmS1z/m1PlusEtaKK**2
    invm1PlusEtaKK_prmS2x = -1.0*m1PlusEtaKK_prmS2x/m1PlusEtaKK**2
    invm1PlusEtaKK_prmS2y = -1.0*m1PlusEtaKK_prmS2y/m1PlusEtaKK**2
    invm1PlusEtaKK_prmS2z = -1.0*m1PlusEtaKK_prmS2z/m1PlusEtaKK**2
    k0_prmx1 = KK*m1PlusEtaKK_prmx1 + KK_prmx1*(m1PlusEtaKK - 1.0)
    k0_prmx2 = KK*m1PlusEtaKK_prmx2 + KK_prmx2*(m1PlusEtaKK - 1.0)
    k0_prmx3 = KK*m1PlusEtaKK_prmx3 + KK_prmx3*(m1PlusEtaKK - 1.0)
    k0_prmp1 = KK*m1PlusEtaKK_prmp1 + KK_prmp1*(m1PlusEtaKK - 1.0)
    k0_prmp2 = KK*m1PlusEtaKK_prmp2 + KK_prmp2*(m1PlusEtaKK - 1.0)
    k0_prmp3 = KK*m1PlusEtaKK_prmp3 + KK_prmp3*(m1PlusEtaKK - 1.0)
    k0_prmS1x = KK*m1PlusEtaKK_prmS1x + KK_prmS1x*(m1PlusEtaKK - 1.0)
    k0_prmS1y = KK*m1PlusEtaKK_prmS1y + KK_prmS1y*(m1PlusEtaKK - 1.0)
    k0_prmS1z = KK*m1PlusEtaKK_prmS1z + KK_prmS1z*(m1PlusEtaKK - 1.0)
    k0_prmS2x = KK*m1PlusEtaKK_prmS2x + KK_prmS2x*(m1PlusEtaKK - 1.0)
    k0_prmS2y = KK*m1PlusEtaKK_prmS2y + KK_prmS2y*(m1PlusEtaKK - 1.0)
    k0_prmS2z = KK*m1PlusEtaKK_prmS2z + KK_prmS2z*(m1PlusEtaKK - 1.0)
    k1_prmx1 = m1PlusEtaKK*(-2.0*KK_prmx1 - 2.0*k0_prmx1) + m1PlusEtaKK_prmx1*(-2.0*KK - 2.0*k0)
    k1_prmx2 = m1PlusEtaKK*(-2.0*KK_prmx2 - 2.0*k0_prmx2) + m1PlusEtaKK_prmx2*(-2.0*KK - 2.0*k0)
    k1_prmx3 = m1PlusEtaKK*(-2.0*KK_prmx3 - 2.0*k0_prmx3) + m1PlusEtaKK_prmx3*(-2.0*KK - 2.0*k0)
    k1_prmp1 = m1PlusEtaKK*(-2.0*KK_prmp1 - 2.0*k0_prmp1) + m1PlusEtaKK_prmp1*(-2.0*KK - 2.0*k0)
    k1_prmp2 = m1PlusEtaKK*(-2.0*KK_prmp2 - 2.0*k0_prmp2) + m1PlusEtaKK_prmp2*(-2.0*KK - 2.0*k0)
    k1_prmp3 = m1PlusEtaKK*(-2.0*KK_prmp3 - 2.0*k0_prmp3) + m1PlusEtaKK_prmp3*(-2.0*KK - 2.0*k0)
    k1_prmS1x = m1PlusEtaKK*(-2.0*KK_prmS1x - 2.0*k0_prmS1x) + m1PlusEtaKK_prmS1x*(-2.0*KK - 2.0*k0)
    k1_prmS1y = m1PlusEtaKK*(-2.0*KK_prmS1y - 2.0*k0_prmS1y) + m1PlusEtaKK_prmS1y*(-2.0*KK - 2.0*k0)
    k1_prmS1z = m1PlusEtaKK*(-2.0*KK_prmS1z - 2.0*k0_prmS1z) + m1PlusEtaKK_prmS1z*(-2.0*KK - 2.0*k0)
    k1_prmS2x = m1PlusEtaKK*(-2.0*KK_prmS2x - 2.0*k0_prmS2x) + m1PlusEtaKK_prmS2x*(-2.0*KK - 2.0*k0)
    k1_prmS2y = m1PlusEtaKK*(-2.0*KK_prmS2y - 2.0*k0_prmS2y) + m1PlusEtaKK_prmS2y*(-2.0*KK - 2.0*k0)
    k1_prmS2z = m1PlusEtaKK*(-2.0*KK_prmS2z - 2.0*k0_prmS2z) + m1PlusEtaKK_prmS2z*(-2.0*KK - 2.0*k0)
    k2_prmx1 = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmx1 - a**2*k0_prmx1*m1PlusEtaKK**2 + k1*(0.5*k1_prmx1 - 2.0*m1PlusEtaKK_prmx1) + k1_prmx1*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmx2 = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmx2 - a**2*k0_prmx2*m1PlusEtaKK**2 + k1*(0.5*k1_prmx2 - 2.0*m1PlusEtaKK_prmx2) + k1_prmx2*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmx3 = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmx3 - a**2*k0_prmx3*m1PlusEtaKK**2 + k1*(0.5*k1_prmx3 - 2.0*m1PlusEtaKK_prmx3) + k1_prmx3*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmp1 = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmp1 - a**2*k0_prmp1*m1PlusEtaKK**2 + k1*(0.5*k1_prmp1 - 2.0*m1PlusEtaKK_prmp1) + k1_prmp1*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmp2 = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmp2 - a**2*k0_prmp2*m1PlusEtaKK**2 + k1*(0.5*k1_prmp2 - 2.0*m1PlusEtaKK_prmp2) + k1_prmp2*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmp3 = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmp3 - a**2*k0_prmp3*m1PlusEtaKK**2 + k1*(0.5*k1_prmp3 - 2.0*m1PlusEtaKK_prmp3) + k1_prmp3*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmS1x = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmS1x - a**2*k0_prmS1x*m1PlusEtaKK**2 - 2*a*a_prmS1x*k0*m1PlusEtaKK**2 + k1*(0.5*k1_prmS1x - 2.0*m1PlusEtaKK_prmS1x) + k1_prmS1x*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmS1y = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmS1y - a**2*k0_prmS1y*m1PlusEtaKK**2 - 2*a*a_prmS1y*k0*m1PlusEtaKK**2 + k1*(0.5*k1_prmS1y - 2.0*m1PlusEtaKK_prmS1y) + k1_prmS1y*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmS1z = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmS1z - a**2*k0_prmS1z*m1PlusEtaKK**2 - 2*a*a_prmS1z*k0*m1PlusEtaKK**2 + k1*(0.5*k1_prmS1z - 2.0*m1PlusEtaKK_prmS1z) + k1_prmS1z*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmS2x = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmS2x - a**2*k0_prmS2x*m1PlusEtaKK**2 - 2*a*a_prmS2x*k0*m1PlusEtaKK**2 + k1*(0.5*k1_prmS2x - 2.0*m1PlusEtaKK_prmS2x) + k1_prmS2x*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmS2y = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmS2y - a**2*k0_prmS2y*m1PlusEtaKK**2 - 2*a*a_prmS2y*k0*m1PlusEtaKK**2 + k1*(0.5*k1_prmS2y - 2.0*m1PlusEtaKK_prmS2y) + k1_prmS2y*(0.5*k1 - 2.0*m1PlusEtaKK)
    k2_prmS2z = -2*a**2*k0*m1PlusEtaKK*m1PlusEtaKK_prmS2z - a**2*k0_prmS2z*m1PlusEtaKK**2 - 2*a*a_prmS2z*k0*m1PlusEtaKK**2 + k1*(0.5*k1_prmS2z - 2.0*m1PlusEtaKK_prmS2z) + k1_prmS2z*(0.5*k1 - 2.0*m1PlusEtaKK)
    k3_prmx1 = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmx1 - a**2*k1_prmx1*m1PlusEtaKK**2 - 3*k1**2*k1_prmx1*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmx1 + 2*k1*k1_prmx1*m1PlusEtaKK + k1*k2_prmx1 + k1_prmx1*k2 + m1PlusEtaKK*(-2.0*k2_prmx1 + 2.0*m1PlusEtaKK_prmx1) + m1PlusEtaKK_prmx1*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmx2 = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmx2 - a**2*k1_prmx2*m1PlusEtaKK**2 - 3*k1**2*k1_prmx2*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmx2 + 2*k1*k1_prmx2*m1PlusEtaKK + k1*k2_prmx2 + k1_prmx2*k2 + m1PlusEtaKK*(-2.0*k2_prmx2 + 2.0*m1PlusEtaKK_prmx2) + m1PlusEtaKK_prmx2*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmx3 = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmx3 - a**2*k1_prmx3*m1PlusEtaKK**2 - 3*k1**2*k1_prmx3*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmx3 + 2*k1*k1_prmx3*m1PlusEtaKK + k1*k2_prmx3 + k1_prmx3*k2 + m1PlusEtaKK*(-2.0*k2_prmx3 + 2.0*m1PlusEtaKK_prmx3) + m1PlusEtaKK_prmx3*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmp1 = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmp1 - a**2*k1_prmp1*m1PlusEtaKK**2 - 3*k1**2*k1_prmp1*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmp1 + 2*k1*k1_prmp1*m1PlusEtaKK + k1*k2_prmp1 + k1_prmp1*k2 + m1PlusEtaKK*(-2.0*k2_prmp1 + 2.0*m1PlusEtaKK_prmp1) + m1PlusEtaKK_prmp1*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmp2 = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmp2 - a**2*k1_prmp2*m1PlusEtaKK**2 - 3*k1**2*k1_prmp2*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmp2 + 2*k1*k1_prmp2*m1PlusEtaKK + k1*k2_prmp2 + k1_prmp2*k2 + m1PlusEtaKK*(-2.0*k2_prmp2 + 2.0*m1PlusEtaKK_prmp2) + m1PlusEtaKK_prmp2*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmp3 = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmp3 - a**2*k1_prmp3*m1PlusEtaKK**2 - 3*k1**2*k1_prmp3*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmp3 + 2*k1*k1_prmp3*m1PlusEtaKK + k1*k2_prmp3 + k1_prmp3*k2 + m1PlusEtaKK*(-2.0*k2_prmp3 + 2.0*m1PlusEtaKK_prmp3) + m1PlusEtaKK_prmp3*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmS1x = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmS1x - a**2*k1_prmS1x*m1PlusEtaKK**2 - 2*a*a_prmS1x*k1*m1PlusEtaKK**2 - 3*k1**2*k1_prmS1x*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmS1x + 2*k1*k1_prmS1x*m1PlusEtaKK + k1*k2_prmS1x + k1_prmS1x*k2 + m1PlusEtaKK*(-2.0*k2_prmS1x + 2.0*m1PlusEtaKK_prmS1x) + m1PlusEtaKK_prmS1x*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmS1y = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmS1y - a**2*k1_prmS1y*m1PlusEtaKK**2 - 2*a*a_prmS1y*k1*m1PlusEtaKK**2 - 3*k1**2*k1_prmS1y*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmS1y + 2*k1*k1_prmS1y*m1PlusEtaKK + k1*k2_prmS1y + k1_prmS1y*k2 + m1PlusEtaKK*(-2.0*k2_prmS1y + 2.0*m1PlusEtaKK_prmS1y) + m1PlusEtaKK_prmS1y*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmS1z = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmS1z - a**2*k1_prmS1z*m1PlusEtaKK**2 - 2*a*a_prmS1z*k1*m1PlusEtaKK**2 - 3*k1**2*k1_prmS1z*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmS1z + 2*k1*k1_prmS1z*m1PlusEtaKK + k1*k2_prmS1z + k1_prmS1z*k2 + m1PlusEtaKK*(-2.0*k2_prmS1z + 2.0*m1PlusEtaKK_prmS1z) + m1PlusEtaKK_prmS1z*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmS2x = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmS2x - a**2*k1_prmS2x*m1PlusEtaKK**2 - 2*a*a_prmS2x*k1*m1PlusEtaKK**2 - 3*k1**2*k1_prmS2x*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmS2x + 2*k1*k1_prmS2x*m1PlusEtaKK + k1*k2_prmS2x + k1_prmS2x*k2 + m1PlusEtaKK*(-2.0*k2_prmS2x + 2.0*m1PlusEtaKK_prmS2x) + m1PlusEtaKK_prmS2x*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmS2y = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmS2y - a**2*k1_prmS2y*m1PlusEtaKK**2 - 2*a*a_prmS2y*k1*m1PlusEtaKK**2 - 3*k1**2*k1_prmS2y*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmS2y + 2*k1*k1_prmS2y*m1PlusEtaKK + k1*k2_prmS2y + k1_prmS2y*k2 + m1PlusEtaKK*(-2.0*k2_prmS2y + 2.0*m1PlusEtaKK_prmS2y) + m1PlusEtaKK_prmS2y*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k3_prmS2z = -2*a**2*k1*m1PlusEtaKK*m1PlusEtaKK_prmS2z - a**2*k1_prmS2z*m1PlusEtaKK**2 - 2*a*a_prmS2z*k1*m1PlusEtaKK**2 - 3*k1**2*k1_prmS2z*np.true_divide(1, 3) + k1**2*m1PlusEtaKK_prmS2z + 2*k1*k1_prmS2z*m1PlusEtaKK + k1*k2_prmS2z + k1_prmS2z*k2 + m1PlusEtaKK*(-2.0*k2_prmS2z + 2.0*m1PlusEtaKK_prmS2z) + m1PlusEtaKK_prmS2z*(-2.0*k2 + 2.0*m1PlusEtaKK)
    k4_prmx1 = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmx1 - 1.0*k2_prmx1) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmx1*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmx1 - 0.666666666666667*k1**3*m1PlusEtaKK_prmx1 - 2.0*k1**2*k1_prmx1*m1PlusEtaKK - 1.0*k1**2*k2_prmx1 - 2.0*k1*k1_prmx1*k2 + k1*(2.0*k2*m1PlusEtaKK_prmx1 + 2.0*k2_prmx1*m1PlusEtaKK + 1.0*k3_prmx1) + k1_prmx1*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmx1 + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmx1*m1PlusEtaKK - 2.0*k3_prmx1 + m1PlusEtaKK_prmx1*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmx1*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmx2 = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmx2 - 1.0*k2_prmx2) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmx2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmx2 - 0.666666666666667*k1**3*m1PlusEtaKK_prmx2 - 2.0*k1**2*k1_prmx2*m1PlusEtaKK - 1.0*k1**2*k2_prmx2 - 2.0*k1*k1_prmx2*k2 + k1*(2.0*k2*m1PlusEtaKK_prmx2 + 2.0*k2_prmx2*m1PlusEtaKK + 1.0*k3_prmx2) + k1_prmx2*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmx2 + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmx2*m1PlusEtaKK - 2.0*k3_prmx2 + m1PlusEtaKK_prmx2*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmx2*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmx3 = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmx3 - 1.0*k2_prmx3) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmx3*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmx3 - 0.666666666666667*k1**3*m1PlusEtaKK_prmx3 - 2.0*k1**2*k1_prmx3*m1PlusEtaKK - 1.0*k1**2*k2_prmx3 - 2.0*k1*k1_prmx3*k2 + k1*(2.0*k2*m1PlusEtaKK_prmx3 + 2.0*k2_prmx3*m1PlusEtaKK + 1.0*k3_prmx3) + k1_prmx3*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmx3 + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmx3*m1PlusEtaKK - 2.0*k3_prmx3 + m1PlusEtaKK_prmx3*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmx3*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmp1 = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmp1 - 1.0*k2_prmp1) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmp1*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmp1 - 0.666666666666667*k1**3*m1PlusEtaKK_prmp1 - 2.0*k1**2*k1_prmp1*m1PlusEtaKK - 1.0*k1**2*k2_prmp1 - 2.0*k1*k1_prmp1*k2 + k1*(2.0*k2*m1PlusEtaKK_prmp1 + 2.0*k2_prmp1*m1PlusEtaKK + 1.0*k3_prmp1) + k1_prmp1*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmp1 + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmp1*m1PlusEtaKK - 2.0*k3_prmp1 + m1PlusEtaKK_prmp1*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmp1*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmp2 = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmp2 - 1.0*k2_prmp2) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmp2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmp2 - 0.666666666666667*k1**3*m1PlusEtaKK_prmp2 - 2.0*k1**2*k1_prmp2*m1PlusEtaKK - 1.0*k1**2*k2_prmp2 - 2.0*k1*k1_prmp2*k2 + k1*(2.0*k2*m1PlusEtaKK_prmp2 + 2.0*k2_prmp2*m1PlusEtaKK + 1.0*k3_prmp2) + k1_prmp2*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmp2 + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmp2*m1PlusEtaKK - 2.0*k3_prmp2 + m1PlusEtaKK_prmp2*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmp2*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmp3 = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmp3 - 1.0*k2_prmp3) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmp3*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmp3 - 0.666666666666667*k1**3*m1PlusEtaKK_prmp3 - 2.0*k1**2*k1_prmp3*m1PlusEtaKK - 1.0*k1**2*k2_prmp3 - 2.0*k1*k1_prmp3*k2 + k1*(2.0*k2*m1PlusEtaKK_prmp3 + 2.0*k2_prmp3*m1PlusEtaKK + 1.0*k3_prmp3) + k1_prmp3*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmp3 + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmp3*m1PlusEtaKK - 2.0*k3_prmp3 + m1PlusEtaKK_prmp3*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmp3*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmS1x = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmS1x - 1.0*k2_prmS1x) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmS1x*(1.0*k1**2 - 2.0*k2) + a*a_prmS1x*m1PlusEtaKK**2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmS1x - 0.666666666666667*k1**3*m1PlusEtaKK_prmS1x - 2.0*k1**2*k1_prmS1x*m1PlusEtaKK - 1.0*k1**2*k2_prmS1x - 2.0*k1*k1_prmS1x*k2 + k1*(2.0*k2*m1PlusEtaKK_prmS1x + 2.0*k2_prmS1x*m1PlusEtaKK + 1.0*k3_prmS1x) + k1_prmS1x*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmS1x + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmS1x*m1PlusEtaKK - 2.0*k3_prmS1x + m1PlusEtaKK_prmS1x*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmS1x*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmS1y = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmS1y - 1.0*k2_prmS1y) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmS1y*(1.0*k1**2 - 2.0*k2) + a*a_prmS1y*m1PlusEtaKK**2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmS1y - 0.666666666666667*k1**3*m1PlusEtaKK_prmS1y - 2.0*k1**2*k1_prmS1y*m1PlusEtaKK - 1.0*k1**2*k2_prmS1y - 2.0*k1*k1_prmS1y*k2 + k1*(2.0*k2*m1PlusEtaKK_prmS1y + 2.0*k2_prmS1y*m1PlusEtaKK + 1.0*k3_prmS1y) + k1_prmS1y*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmS1y + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmS1y*m1PlusEtaKK - 2.0*k3_prmS1y + m1PlusEtaKK_prmS1y*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmS1y*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmS1z = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmS1z - 1.0*k2_prmS1z) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmS1z*(1.0*k1**2 - 2.0*k2) + a*a_prmS1z*m1PlusEtaKK**2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmS1z - 0.666666666666667*k1**3*m1PlusEtaKK_prmS1z - 2.0*k1**2*k1_prmS1z*m1PlusEtaKK - 1.0*k1**2*k2_prmS1z - 2.0*k1*k1_prmS1z*k2 + k1*(2.0*k2*m1PlusEtaKK_prmS1z + 2.0*k2_prmS1z*m1PlusEtaKK + 1.0*k3_prmS1z) + k1_prmS1z*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmS1z + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmS1z*m1PlusEtaKK - 2.0*k3_prmS1z + m1PlusEtaKK_prmS1z*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmS1z*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmS2x = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmS2x - 1.0*k2_prmS2x) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmS2x*(1.0*k1**2 - 2.0*k2) + a*a_prmS2x*m1PlusEtaKK**2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmS2x - 0.666666666666667*k1**3*m1PlusEtaKK_prmS2x - 2.0*k1**2*k1_prmS2x*m1PlusEtaKK - 1.0*k1**2*k2_prmS2x - 2.0*k1*k1_prmS2x*k2 + k1*(2.0*k2*m1PlusEtaKK_prmS2x + 2.0*k2_prmS2x*m1PlusEtaKK + 1.0*k3_prmS2x) + k1_prmS2x*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmS2x + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmS2x*m1PlusEtaKK - 2.0*k3_prmS2x + m1PlusEtaKK_prmS2x*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmS2x*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmS2y = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmS2y - 1.0*k2_prmS2y) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmS2y*(1.0*k1**2 - 2.0*k2) + a*a_prmS2y*m1PlusEtaKK**2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmS2y - 0.666666666666667*k1**3*m1PlusEtaKK_prmS2y - 2.0*k1**2*k1_prmS2y*m1PlusEtaKK - 1.0*k1**2*k2_prmS2y - 2.0*k1*k1_prmS2y*k2 + k1*(2.0*k2*m1PlusEtaKK_prmS2y + 2.0*k2_prmS2y*m1PlusEtaKK + 1.0*k3_prmS2y) + k1_prmS2y*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmS2y + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmS2y*m1PlusEtaKK - 2.0*k3_prmS2y + m1PlusEtaKK_prmS2y*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmS2y*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k4_prmS2z = a**2*m1PlusEtaKK**2*(1.0*k1*k1_prmS2z - 1.0*k2_prmS2z) + a**2*m1PlusEtaKK*m1PlusEtaKK_prmS2z*(1.0*k1**2 - 2.0*k2) + a*a_prmS2z*m1PlusEtaKK**2*(1.0*k1**2 - 2.0*k2) + 1.0*k1**3*k1_prmS2z - 0.666666666666667*k1**3*m1PlusEtaKK_prmS2z - 2.0*k1**2*k1_prmS2z*m1PlusEtaKK - 1.0*k1**2*k2_prmS2z - 2.0*k1*k1_prmS2z*k2 + k1*(2.0*k2*m1PlusEtaKK_prmS2z + 2.0*k2_prmS2z*m1PlusEtaKK + 1.0*k3_prmS2z) + k1_prmS2z*(2.0*k2*m1PlusEtaKK + 1.0*k3) + 1.0*k2*k2_prmS2z + m1PlusEtaKK*(-2.5625*np.pi*np.pi_prmS2z*m1PlusEtaKK - 2.0*k3_prmS2z + m1PlusEtaKK_prmS2z*(31.3333333333333 - 1.28125*np.pi**2)) + m1PlusEtaKK_prmS2z*(-2.0*k3 + m1PlusEtaKK*(31.3333333333333 - 1.28125*np.pi**2))
    k5_prmx1 = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmx1 - 3.0*k1*k2_prmx1 - 3.0*k1_prmx1*k2 + 3.0*k3_prmx1)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmx1 - 5.0*k1**3*k2_prmx1 - 15.0*k1**2*k1_prmx1*k2 + 5.0*k1**2*k3_prmx1 + 10.0*k1*k1_prmx1*k3 + 10.0*k1*k2*k2_prmx1 - 5.0*k1*k4_prmx1 + 5.0*k1_prmx1*k2**2 - 5.0*k1_prmx1*k4 - 5.0*k2*k3_prmx1 - 5.0*k2_prmx1*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmx1*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmx1 - 2.0*k1**2*k2_prmx1 - 4.0*k1*k1_prmx1*k2 + 2.0*k1*k3_prmx1 + 2.0*k1_prmx1*k3 + 2.0*k2*k2_prmx1 - 2.0*k4_prmx1) + invm1PlusEtaKK_prmx1*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmx1) + m1PlusEtaKK*m1PlusEtaKK_prmx1*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmx2 = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmx2 - 3.0*k1*k2_prmx2 - 3.0*k1_prmx2*k2 + 3.0*k3_prmx2)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmx2 - 5.0*k1**3*k2_prmx2 - 15.0*k1**2*k1_prmx2*k2 + 5.0*k1**2*k3_prmx2 + 10.0*k1*k1_prmx2*k3 + 10.0*k1*k2*k2_prmx2 - 5.0*k1*k4_prmx2 + 5.0*k1_prmx2*k2**2 - 5.0*k1_prmx2*k4 - 5.0*k2*k3_prmx2 - 5.0*k2_prmx2*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmx2*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmx2 - 2.0*k1**2*k2_prmx2 - 4.0*k1*k1_prmx2*k2 + 2.0*k1*k3_prmx2 + 2.0*k1_prmx2*k3 + 2.0*k2*k2_prmx2 - 2.0*k4_prmx2) + invm1PlusEtaKK_prmx2*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmx2) + m1PlusEtaKK*m1PlusEtaKK_prmx2*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmx3 = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmx3 - 3.0*k1*k2_prmx3 - 3.0*k1_prmx3*k2 + 3.0*k3_prmx3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmx3 - 5.0*k1**3*k2_prmx3 - 15.0*k1**2*k1_prmx3*k2 + 5.0*k1**2*k3_prmx3 + 10.0*k1*k1_prmx3*k3 + 10.0*k1*k2*k2_prmx3 - 5.0*k1*k4_prmx3 + 5.0*k1_prmx3*k2**2 - 5.0*k1_prmx3*k4 - 5.0*k2*k3_prmx3 - 5.0*k2_prmx3*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmx3*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmx3 - 2.0*k1**2*k2_prmx3 - 4.0*k1*k1_prmx3*k2 + 2.0*k1*k3_prmx3 + 2.0*k1_prmx3*k3 + 2.0*k2*k2_prmx3 - 2.0*k4_prmx3) + invm1PlusEtaKK_prmx3*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmx3) + m1PlusEtaKK*m1PlusEtaKK_prmx3*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmp1 = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmp1 - 3.0*k1*k2_prmp1 - 3.0*k1_prmp1*k2 + 3.0*k3_prmp1)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmp1 - 5.0*k1**3*k2_prmp1 - 15.0*k1**2*k1_prmp1*k2 + 5.0*k1**2*k3_prmp1 + 10.0*k1*k1_prmp1*k3 + 10.0*k1*k2*k2_prmp1 - 5.0*k1*k4_prmp1 + 5.0*k1_prmp1*k2**2 - 5.0*k1_prmp1*k4 - 5.0*k2*k3_prmp1 - 5.0*k2_prmp1*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmp1*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmp1 - 2.0*k1**2*k2_prmp1 - 4.0*k1*k1_prmp1*k2 + 2.0*k1*k3_prmp1 + 2.0*k1_prmp1*k3 + 2.0*k2*k2_prmp1 - 2.0*k4_prmp1) + invm1PlusEtaKK_prmp1*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmp1) + m1PlusEtaKK*m1PlusEtaKK_prmp1*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmp2 = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmp2 - 3.0*k1*k2_prmp2 - 3.0*k1_prmp2*k2 + 3.0*k3_prmp2)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmp2 - 5.0*k1**3*k2_prmp2 - 15.0*k1**2*k1_prmp2*k2 + 5.0*k1**2*k3_prmp2 + 10.0*k1*k1_prmp2*k3 + 10.0*k1*k2*k2_prmp2 - 5.0*k1*k4_prmp2 + 5.0*k1_prmp2*k2**2 - 5.0*k1_prmp2*k4 - 5.0*k2*k3_prmp2 - 5.0*k2_prmp2*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmp2*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmp2 - 2.0*k1**2*k2_prmp2 - 4.0*k1*k1_prmp2*k2 + 2.0*k1*k3_prmp2 + 2.0*k1_prmp2*k3 + 2.0*k2*k2_prmp2 - 2.0*k4_prmp2) + invm1PlusEtaKK_prmp2*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmp2) + m1PlusEtaKK*m1PlusEtaKK_prmp2*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmp3 = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmp3 - 3.0*k1*k2_prmp3 - 3.0*k1_prmp3*k2 + 3.0*k3_prmp3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmp3 - 5.0*k1**3*k2_prmp3 - 15.0*k1**2*k1_prmp3*k2 + 5.0*k1**2*k3_prmp3 + 10.0*k1*k1_prmp3*k3 + 10.0*k1*k2*k2_prmp3 - 5.0*k1*k4_prmp3 + 5.0*k1_prmp3*k2**2 - 5.0*k1_prmp3*k4 - 5.0*k2*k3_prmp3 - 5.0*k2_prmp3*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmp3*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmp3 - 2.0*k1**2*k2_prmp3 - 4.0*k1*k1_prmp3*k2 + 2.0*k1*k3_prmp3 + 2.0*k1_prmp3*k3 + 2.0*k2*k2_prmp3 - 2.0*k4_prmp3) + invm1PlusEtaKK_prmp3*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmp3) + m1PlusEtaKK*m1PlusEtaKK_prmp3*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmS1x = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmS1x - 3.0*k1*k2_prmS1x - 3.0*k1_prmS1x*k2 + 3.0*k3_prmS1x)*np.true_divide(1, 3) + a*a_prmS1x*(-2*k1**3 + 6.0*k1*k2 - 6.0*k3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmS1x - 5.0*k1**3*k2_prmS1x - 15.0*k1**2*k1_prmS1x*k2 + 5.0*k1**2*k3_prmS1x + 10.0*k1*k1_prmS1x*k3 + 10.0*k1*k2*k2_prmS1x - 5.0*k1*k4_prmS1x + 5.0*k1_prmS1x*k2**2 - 5.0*k1_prmS1x*k4 - 5.0*k2*k3_prmS1x - 5.0*k2_prmS1x*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmS1x*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmS1x - 2.0*k1**2*k2_prmS1x - 4.0*k1*k1_prmS1x*k2 + 2.0*k1*k3_prmS1x + 2.0*k1_prmS1x*k3 + 2.0*k2*k2_prmS1x - 2.0*k4_prmS1x) + invm1PlusEtaKK_prmS1x*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmS1x) + m1PlusEtaKK*m1PlusEtaKK_prmS1x*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmS1y = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmS1y - 3.0*k1*k2_prmS1y - 3.0*k1_prmS1y*k2 + 3.0*k3_prmS1y)*np.true_divide(1, 3) + a*a_prmS1y*(-2*k1**3 + 6.0*k1*k2 - 6.0*k3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmS1y - 5.0*k1**3*k2_prmS1y - 15.0*k1**2*k1_prmS1y*k2 + 5.0*k1**2*k3_prmS1y + 10.0*k1*k1_prmS1y*k3 + 10.0*k1*k2*k2_prmS1y - 5.0*k1*k4_prmS1y + 5.0*k1_prmS1y*k2**2 - 5.0*k1_prmS1y*k4 - 5.0*k2*k3_prmS1y - 5.0*k2_prmS1y*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmS1y*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmS1y - 2.0*k1**2*k2_prmS1y - 4.0*k1*k1_prmS1y*k2 + 2.0*k1*k3_prmS1y + 2.0*k1_prmS1y*k3 + 2.0*k2*k2_prmS1y - 2.0*k4_prmS1y) + invm1PlusEtaKK_prmS1y*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmS1y) + m1PlusEtaKK*m1PlusEtaKK_prmS1y*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmS1z = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmS1z - 3.0*k1*k2_prmS1z - 3.0*k1_prmS1z*k2 + 3.0*k3_prmS1z)*np.true_divide(1, 3) + a*a_prmS1z*(-2*k1**3 + 6.0*k1*k2 - 6.0*k3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmS1z - 5.0*k1**3*k2_prmS1z - 15.0*k1**2*k1_prmS1z*k2 + 5.0*k1**2*k3_prmS1z + 10.0*k1*k1_prmS1z*k3 + 10.0*k1*k2*k2_prmS1z - 5.0*k1*k4_prmS1z + 5.0*k1_prmS1z*k2**2 - 5.0*k1_prmS1z*k4 - 5.0*k2*k3_prmS1z - 5.0*k2_prmS1z*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmS1z*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmS1z - 2.0*k1**2*k2_prmS1z - 4.0*k1*k1_prmS1z*k2 + 2.0*k1*k3_prmS1z + 2.0*k1_prmS1z*k3 + 2.0*k2*k2_prmS1z - 2.0*k4_prmS1z) + invm1PlusEtaKK_prmS1z*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmS1z) + m1PlusEtaKK*m1PlusEtaKK_prmS1z*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmS2x = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmS2x - 3.0*k1*k2_prmS2x - 3.0*k1_prmS2x*k2 + 3.0*k3_prmS2x)*np.true_divide(1, 3) + a*a_prmS2x*(-2*k1**3 + 6.0*k1*k2 - 6.0*k3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmS2x - 5.0*k1**3*k2_prmS2x - 15.0*k1**2*k1_prmS2x*k2 + 5.0*k1**2*k3_prmS2x + 10.0*k1*k1_prmS2x*k3 + 10.0*k1*k2*k2_prmS2x - 5.0*k1*k4_prmS2x + 5.0*k1_prmS2x*k2**2 - 5.0*k1_prmS2x*k4 - 5.0*k2*k3_prmS2x - 5.0*k2_prmS2x*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmS2x*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmS2x - 2.0*k1**2*k2_prmS2x - 4.0*k1*k1_prmS2x*k2 + 2.0*k1*k3_prmS2x + 2.0*k1_prmS2x*k3 + 2.0*k2*k2_prmS2x - 2.0*k4_prmS2x) + invm1PlusEtaKK_prmS2x*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmS2x) + m1PlusEtaKK*m1PlusEtaKK_prmS2x*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmS2y = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmS2y - 3.0*k1*k2_prmS2y - 3.0*k1_prmS2y*k2 + 3.0*k3_prmS2y)*np.true_divide(1, 3) + a*a_prmS2y*(-2*k1**3 + 6.0*k1*k2 - 6.0*k3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmS2y - 5.0*k1**3*k2_prmS2y - 15.0*k1**2*k1_prmS2y*k2 + 5.0*k1**2*k3_prmS2y + 10.0*k1*k1_prmS2y*k3 + 10.0*k1*k2*k2_prmS2y - 5.0*k1*k4_prmS2y + 5.0*k1_prmS2y*k2**2 - 5.0*k1_prmS2y*k4 - 5.0*k2*k3_prmS2y - 5.0*k2_prmS2y*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmS2y*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmS2y - 2.0*k1**2*k2_prmS2y - 4.0*k1*k1_prmS2y*k2 + 2.0*k1*k3_prmS2y + 2.0*k1_prmS2y*k3 + 2.0*k2*k2_prmS2y - 2.0*k4_prmS2y) + invm1PlusEtaKK_prmS2y*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmS2y) + m1PlusEtaKK*m1PlusEtaKK_prmS2y*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5_prmS2z = m1PlusEtaKK**2*(-a**2*(3*k1**2*k1_prmS2z - 3.0*k1*k2_prmS2z - 3.0*k1_prmS2z*k2 + 3.0*k3_prmS2z)*np.true_divide(1, 3) + a*a_prmS2z*(-2*k1**3 + 6.0*k1*k2 - 6.0*k3)*np.true_divide(1, 3) - invm1PlusEtaKK**2*(5*k1**4*k1_prmS2z - 5.0*k1**3*k2_prmS2z - 15.0*k1**2*k1_prmS2z*k2 + 5.0*k1**2*k3_prmS2z + 10.0*k1*k1_prmS2z*k3 + 10.0*k1*k2*k2_prmS2z - 5.0*k1*k4_prmS2z + 5.0*k1_prmS2z*k2**2 - 5.0*k1_prmS2z*k4 - 5.0*k2*k3_prmS2z - 5.0*k2_prmS2z*k3)*np.true_divide(1, 5) - invm1PlusEtaKK*invm1PlusEtaKK_prmS2z*(2*k1**5 - 10.0*k1**3*k2 + 10.0*k1**2*k3 + 10.0*k1*k2**2 - 10.0*k1*k4 - 10.0*k2*k3)*np.true_divide(1, 5) + invm1PlusEtaKK*(2.0*k1**3*k1_prmS2z - 2.0*k1**2*k2_prmS2z - 4.0*k1*k1_prmS2z*k2 + 2.0*k1*k3_prmS2z + 2.0*k1_prmS2z*k3 + 2.0*k2*k2_prmS2z - 2.0*k4_prmS2z) + invm1PlusEtaKK_prmS2z*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 51.2*np.log(2)_prmS2z) + m1PlusEtaKK*m1PlusEtaKK_prmS2z*(51.2*EMgamma + 2*a**2*(-k1**3 + 3.0*k1*k2 - 3.0*k3)*np.true_divide(1, 3) + 2*eta*(-36.8333333333333 + 1.28125*np.pi**2) - 2*invm1PlusEtaKK**2*(k1**5 - 5.0*k1**3*k2 + 5.0*k1**2*k3 + 5.0*k1*k2**2 - 5.0*k1*k4 - 5.0*k2*k3)*np.true_divide(1, 5) + 2*invm1PlusEtaKK*(0.5*k1**4 - 2.0*k1**2*k2 + 2.0*k1*k3 + 1.0*k2**2 - 2.0*k4) + 102.4*np.log(2) - 141.233333333333 + 8.88671875*np.pi**2)
    k5l_prmx1 = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmx1
    k5l_prmx2 = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmx2
    k5l_prmx3 = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmx3
    k5l_prmp1 = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmp1
    k5l_prmp2 = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmp2
    k5l_prmp3 = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmp3
    k5l_prmS1x = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmS1x
    k5l_prmS1y = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmS1y
    k5l_prmS1z = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmS1z
    k5l_prmS2x = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmS2x
    k5l_prmS2y = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmS2y
    k5l_prmS2z = 25.6*m1PlusEtaKK*m1PlusEtaKK_prmS2z
    bulk_prmx1 = a2*u2_prmx1 + invm1PlusEtaKK*(invm1PlusEtaKK_prmx1 + 2.0*u_prmx1) + invm1PlusEtaKK_prmx1*(invm1PlusEtaKK + 2.0*u)
    bulk_prmx2 = a2*u2_prmx2 + invm1PlusEtaKK*(invm1PlusEtaKK_prmx2 + 2.0*u_prmx2) + invm1PlusEtaKK_prmx2*(invm1PlusEtaKK + 2.0*u)
    bulk_prmx3 = a2*u2_prmx3 + invm1PlusEtaKK*(invm1PlusEtaKK_prmx3 + 2.0*u_prmx3) + invm1PlusEtaKK_prmx3*(invm1PlusEtaKK + 2.0*u)
    bulk_prmp1 = invm1PlusEtaKK*invm1PlusEtaKK_prmp1 + invm1PlusEtaKK_prmp1*(invm1PlusEtaKK + 2.0*u)
    bulk_prmp2 = invm1PlusEtaKK*invm1PlusEtaKK_prmp2 + invm1PlusEtaKK_prmp2*(invm1PlusEtaKK + 2.0*u)
    bulk_prmp3 = invm1PlusEtaKK*invm1PlusEtaKK_prmp3 + invm1PlusEtaKK_prmp3*(invm1PlusEtaKK + 2.0*u)
    bulk_prmS1x = a2_prmS1x*u2 + invm1PlusEtaKK*invm1PlusEtaKK_prmS1x + invm1PlusEtaKK_prmS1x*(invm1PlusEtaKK + 2.0*u)
    bulk_prmS1y = a2_prmS1y*u2 + invm1PlusEtaKK*invm1PlusEtaKK_prmS1y + invm1PlusEtaKK_prmS1y*(invm1PlusEtaKK + 2.0*u)
    bulk_prmS1z = a2_prmS1z*u2 + invm1PlusEtaKK*invm1PlusEtaKK_prmS1z + invm1PlusEtaKK_prmS1z*(invm1PlusEtaKK + 2.0*u)
    bulk_prmS2x = a2_prmS2x*u2 + invm1PlusEtaKK*invm1PlusEtaKK_prmS2x + invm1PlusEtaKK_prmS2x*(invm1PlusEtaKK + 2.0*u)
    bulk_prmS2y = a2_prmS2y*u2 + invm1PlusEtaKK*invm1PlusEtaKK_prmS2y + invm1PlusEtaKK_prmS2y*(invm1PlusEtaKK + 2.0*u)
    bulk_prmS2z = a2_prmS2z*u2 + invm1PlusEtaKK*invm1PlusEtaKK_prmS2z + invm1PlusEtaKK_prmS2z*(invm1PlusEtaKK + 2.0*u)
    logu_prmx1 = u_prmx1/u
    logu_prmx2 = u_prmx2/u
    logu_prmx3 = u_prmx3/u
    logarg_prmx1 = k1*u_prmx1 + k1_prmx1*u + k2*u2_prmx1 + k2_prmx1*u2 + k3*u3_prmx1 + k3_prmx1*u3 + k4*u4_prmx1 + k4_prmx1*u4 + k5*u5_prmx1 + k5l*logu*u5_prmx1 + k5l*logu_prmx1*u5 + k5l_prmx1*logu*u5 + k5_prmx1*u5
    logarg_prmx2 = k1*u_prmx2 + k1_prmx2*u + k2*u2_prmx2 + k2_prmx2*u2 + k3*u3_prmx2 + k3_prmx2*u3 + k4*u4_prmx2 + k4_prmx2*u4 + k5*u5_prmx2 + k5l*logu*u5_prmx2 + k5l*logu_prmx2*u5 + k5l_prmx2*logu*u5 + k5_prmx2*u5
    logarg_prmx3 = k1*u_prmx3 + k1_prmx3*u + k2*u2_prmx3 + k2_prmx3*u2 + k3*u3_prmx3 + k3_prmx3*u3 + k4*u4_prmx3 + k4_prmx3*u4 + k5*u5_prmx3 + k5l*logu*u5_prmx3 + k5l*logu_prmx3*u5 + k5l_prmx3*logu*u5 + k5_prmx3*u5
    logarg_prmp1 = k1_prmp1*u + k2_prmp1*u2 + k3_prmp1*u3 + k4_prmp1*u4 + k5l_prmp1*logu*u5 + k5_prmp1*u5
    logarg_prmp2 = k1_prmp2*u + k2_prmp2*u2 + k3_prmp2*u3 + k4_prmp2*u4 + k5l_prmp2*logu*u5 + k5_prmp2*u5
    logarg_prmp3 = k1_prmp3*u + k2_prmp3*u2 + k3_prmp3*u3 + k4_prmp3*u4 + k5l_prmp3*logu*u5 + k5_prmp3*u5
    logarg_prmS1x = k1_prmS1x*u + k2_prmS1x*u2 + k3_prmS1x*u3 + k4_prmS1x*u4 + k5l_prmS1x*logu*u5 + k5_prmS1x*u5
    logarg_prmS1y = k1_prmS1y*u + k2_prmS1y*u2 + k3_prmS1y*u3 + k4_prmS1y*u4 + k5l_prmS1y*logu*u5 + k5_prmS1y*u5
    logarg_prmS1z = k1_prmS1z*u + k2_prmS1z*u2 + k3_prmS1z*u3 + k4_prmS1z*u4 + k5l_prmS1z*logu*u5 + k5_prmS1z*u5
    logarg_prmS2x = k1_prmS2x*u + k2_prmS2x*u2 + k3_prmS2x*u3 + k4_prmS2x*u4 + k5l_prmS2x*logu*u5 + k5_prmS2x*u5
    logarg_prmS2y = k1_prmS2y*u + k2_prmS2y*u2 + k3_prmS2y*u3 + k4_prmS2y*u4 + k5l_prmS2y*logu*u5 + k5_prmS2y*u5
    logarg_prmS2z = k1_prmS2z*u + k2_prmS2z*u2 + k3_prmS2z*u3 + k4_prmS2z*u4 + k5l_prmS2z*logu*u5 + k5_prmS2z*u5
    logTerms_prmx1 = eta*k0_prmx1 + eta*logarg_prmx1/(logarg + 1.0)
    logTerms_prmx2 = eta*k0_prmx2 + eta*logarg_prmx2/(logarg + 1.0)
    logTerms_prmx3 = eta*k0_prmx3 + eta*logarg_prmx3/(logarg + 1.0)
    logTerms_prmp1 = eta*k0_prmp1 + eta*logarg_prmp1/(logarg + 1.0)
    logTerms_prmp2 = eta*k0_prmp2 + eta*logarg_prmp2/(logarg + 1.0)
    logTerms_prmp3 = eta*k0_prmp3 + eta*logarg_prmp3/(logarg + 1.0)
    logTerms_prmS1x = eta*k0_prmS1x + eta*logarg_prmS1x/(logarg + 1.0)
    logTerms_prmS1y = eta*k0_prmS1y + eta*logarg_prmS1y/(logarg + 1.0)
    logTerms_prmS1z = eta*k0_prmS1z + eta*logarg_prmS1z/(logarg + 1.0)
    logTerms_prmS2x = eta*k0_prmS2x + eta*logarg_prmS2x/(logarg + 1.0)
    logTerms_prmS2y = eta*k0_prmS2y + eta*logarg_prmS2y/(logarg + 1.0)
    logTerms_prmS2z = eta*k0_prmS2z + eta*logarg_prmS2z/(logarg + 1.0)
    deltaU_prmx1 = bulk*logTerms_prmx1 + bulk_prmx1*logTerms
    deltaU_prmx2 = bulk*logTerms_prmx2 + bulk_prmx2*logTerms
    deltaU_prmx3 = bulk*logTerms_prmx3 + bulk_prmx3*logTerms
    deltaU_prmp1 = bulk*logTerms_prmp1 + bulk_prmp1*logTerms
    deltaU_prmp2 = bulk*logTerms_prmp2 + bulk_prmp2*logTerms
    deltaU_prmp3 = bulk*logTerms_prmp3 + bulk_prmp3*logTerms
    deltaU_prmS1x = bulk*logTerms_prmS1x + bulk_prmS1x*logTerms
    deltaU_prmS1y = bulk*logTerms_prmS1y + bulk_prmS1y*logTerms
    deltaU_prmS1z = bulk*logTerms_prmS1z + bulk_prmS1z*logTerms
    deltaU_prmS2x = bulk*logTerms_prmS2x + bulk_prmS2x*logTerms
    deltaU_prmS2y = bulk*logTerms_prmS2y + bulk_prmS2y*logTerms
    deltaU_prmS2z = bulk*logTerms_prmS2z + bulk_prmS2z*logTerms
    deltaT_prmx1 = deltaU*r2_prmx1 + deltaU_prmx1*r2
    deltaT_prmx2 = deltaU*r2_prmx2 + deltaU_prmx2*r2
    deltaT_prmx3 = deltaU*r2_prmx3 + deltaU_prmx3*r2
    deltaT_prmp1 = deltaU_prmp1*r2
    deltaT_prmp2 = deltaU_prmp2*r2
    deltaT_prmp3 = deltaU_prmp3*r2
    deltaT_prmS1x = deltaU_prmS1x*r2
    deltaT_prmS1y = deltaU_prmS1y*r2
    deltaT_prmS1z = deltaU_prmS1z*r2
    deltaT_prmS2x = deltaU_prmS2x*r2
    deltaT_prmS2y = deltaU_prmS2y*r2
    deltaT_prmS2z = deltaU_prmS2z*r2
    deltaU_u_prmx1 = -bulk*eta*logarg_prmx1*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmx1 + u*(2.0*k2_prmx1 + u*(3.0*k3_prmx1 + u*(4.0*k4_prmx1 + u*(5.0*k5l*logu_prmx1 + 5.0*k5l_prmx1*logu + 5.0*k5_prmx1) + u_prmx1*(5.0*k5 + 5.0*k5l*logu)) + u_prmx1*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu))) + u_prmx1*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))) + u_prmx1*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + bulk_prmx1*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2*u_prmx1 + 2.0*invm1PlusEtaKK_prmx1) + logTerms_prmx1*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmx2 = -bulk*eta*logarg_prmx2*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmx2 + u*(2.0*k2_prmx2 + u*(3.0*k3_prmx2 + u*(4.0*k4_prmx2 + u*(5.0*k5l*logu_prmx2 + 5.0*k5l_prmx2*logu + 5.0*k5_prmx2) + u_prmx2*(5.0*k5 + 5.0*k5l*logu)) + u_prmx2*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu))) + u_prmx2*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))) + u_prmx2*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + bulk_prmx2*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2*u_prmx2 + 2.0*invm1PlusEtaKK_prmx2) + logTerms_prmx2*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmx3 = -bulk*eta*logarg_prmx3*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmx3 + u*(2.0*k2_prmx3 + u*(3.0*k3_prmx3 + u*(4.0*k4_prmx3 + u*(5.0*k5l*logu_prmx3 + 5.0*k5l_prmx3*logu + 5.0*k5_prmx3) + u_prmx3*(5.0*k5 + 5.0*k5l*logu)) + u_prmx3*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu))) + u_prmx3*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))) + u_prmx3*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + bulk_prmx3*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2*u_prmx3 + 2.0*invm1PlusEtaKK_prmx3) + logTerms_prmx3*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmp1 = -bulk*eta*logarg_prmp1*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmp1 + u*(2.0*k2_prmp1 + u*(3.0*k3_prmp1 + u*(4.0*k4_prmp1 + u*(5.0*k5l_prmp1*logu + 5.0*k5_prmp1)))))/(logarg + 1.0) + bulk_prmp1*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + 2.0*invm1PlusEtaKK_prmp1*logTerms + logTerms_prmp1*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmp2 = -bulk*eta*logarg_prmp2*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmp2 + u*(2.0*k2_prmp2 + u*(3.0*k3_prmp2 + u*(4.0*k4_prmp2 + u*(5.0*k5l_prmp2*logu + 5.0*k5_prmp2)))))/(logarg + 1.0) + bulk_prmp2*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + 2.0*invm1PlusEtaKK_prmp2*logTerms + logTerms_prmp2*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmp3 = -bulk*eta*logarg_prmp3*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmp3 + u*(2.0*k2_prmp3 + u*(3.0*k3_prmp3 + u*(4.0*k4_prmp3 + u*(5.0*k5l_prmp3*logu + 5.0*k5_prmp3)))))/(logarg + 1.0) + bulk_prmp3*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + 2.0*invm1PlusEtaKK_prmp3*logTerms + logTerms_prmp3*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmS1x = -bulk*eta*logarg_prmS1x*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmS1x + u*(2.0*k2_prmS1x + u*(3.0*k3_prmS1x + u*(4.0*k4_prmS1x + u*(5.0*k5l_prmS1x*logu + 5.0*k5_prmS1x)))))/(logarg + 1.0) + bulk_prmS1x*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2_prmS1x*u + 2.0*invm1PlusEtaKK_prmS1x) + logTerms_prmS1x*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmS1y = -bulk*eta*logarg_prmS1y*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmS1y + u*(2.0*k2_prmS1y + u*(3.0*k3_prmS1y + u*(4.0*k4_prmS1y + u*(5.0*k5l_prmS1y*logu + 5.0*k5_prmS1y)))))/(logarg + 1.0) + bulk_prmS1y*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2_prmS1y*u + 2.0*invm1PlusEtaKK_prmS1y) + logTerms_prmS1y*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmS1z = -bulk*eta*logarg_prmS1z*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmS1z + u*(2.0*k2_prmS1z + u*(3.0*k3_prmS1z + u*(4.0*k4_prmS1z + u*(5.0*k5l_prmS1z*logu + 5.0*k5_prmS1z)))))/(logarg + 1.0) + bulk_prmS1z*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2_prmS1z*u + 2.0*invm1PlusEtaKK_prmS1z) + logTerms_prmS1z*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmS2x = -bulk*eta*logarg_prmS2x*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmS2x + u*(2.0*k2_prmS2x + u*(3.0*k3_prmS2x + u*(4.0*k4_prmS2x + u*(5.0*k5l_prmS2x*logu + 5.0*k5_prmS2x)))))/(logarg + 1.0) + bulk_prmS2x*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2_prmS2x*u + 2.0*invm1PlusEtaKK_prmS2x) + logTerms_prmS2x*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmS2y = -bulk*eta*logarg_prmS2y*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmS2y + u*(2.0*k2_prmS2y + u*(3.0*k3_prmS2y + u*(4.0*k4_prmS2y + u*(5.0*k5l_prmS2y*logu + 5.0*k5_prmS2y)))))/(logarg + 1.0) + bulk_prmS2y*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2_prmS2y*u + 2.0*invm1PlusEtaKK_prmS2y) + logTerms_prmS2y*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaU_u_prmS2z = -bulk*eta*logarg_prmS2z*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0)**2 + bulk*eta*(k1_prmS2z + u*(2.0*k2_prmS2z + u*(3.0*k3_prmS2z + u*(4.0*k4_prmS2z + u*(5.0*k5l_prmS2z*logu + 5.0*k5_prmS2z)))))/(logarg + 1.0) + bulk_prmS2z*eta*(k1 + u*(2.0*k2 + u*(3.0*k3 + u*(4.0*k4 + u*(5.0*k5 + 5.0*k5l*logu)))))/(logarg + 1.0) + logTerms*(2.0*a2_prmS2z*u + 2.0*invm1PlusEtaKK_prmS2z) + logTerms_prmS2z*(2.0*a2*u + 2.0*invm1PlusEtaKK)
    deltaT_r_prmx1 = 2.0*deltaU*r_prmx1 - deltaU_u_prmx1 + 2.0*deltaU_prmx1*r
    deltaT_r_prmx2 = 2.0*deltaU*r_prmx2 - deltaU_u_prmx2 + 2.0*deltaU_prmx2*r
    deltaT_r_prmx3 = 2.0*deltaU*r_prmx3 - deltaU_u_prmx3 + 2.0*deltaU_prmx3*r
    deltaT_r_prmp1 = -deltaU_u_prmp1 + 2.0*deltaU_prmp1*r
    deltaT_r_prmp2 = -deltaU_u_prmp2 + 2.0*deltaU_prmp2*r
    deltaT_r_prmp3 = -deltaU_u_prmp3 + 2.0*deltaU_prmp3*r
    deltaT_r_prmS1x = -deltaU_u_prmS1x + 2.0*deltaU_prmS1x*r
    deltaT_r_prmS1y = -deltaU_u_prmS1y + 2.0*deltaU_prmS1y*r
    deltaT_r_prmS1z = -deltaU_u_prmS1z + 2.0*deltaU_prmS1z*r
    deltaT_r_prmS2x = -deltaU_u_prmS2x + 2.0*deltaU_prmS2x*r
    deltaT_r_prmS2y = -deltaU_u_prmS2y + 2.0*deltaU_prmS2y*r
    deltaT_r_prmS2z = -deltaU_u_prmS2z + 2.0*deltaU_prmS2z*r
    Lamb_prmx1 = -a2*deltaT*xi2_prmx1 - a2*deltaT_prmx1*xi2 + 2*w2*w2_prmx1
    Lamb_prmx2 = -a2*deltaT*xi2_prmx2 - a2*deltaT_prmx2*xi2 + 2*w2*w2_prmx2
    Lamb_prmx3 = -a2*deltaT*xi2_prmx3 - a2*deltaT_prmx3*xi2 + 2*w2*w2_prmx3
    Lamb_prmp1 = -a2*deltaT_prmp1*xi2
    Lamb_prmp2 = -a2*deltaT_prmp2*xi2
    Lamb_prmp3 = -a2*deltaT_prmp3*xi2
    Lamb_prmS1x = -a2*deltaT*xi2_prmS1x - a2*deltaT_prmS1x*xi2 - a2_prmS1x*deltaT*xi2 + 2*w2*w2_prmS1x
    Lamb_prmS1y = -a2*deltaT*xi2_prmS1y - a2*deltaT_prmS1y*xi2 - a2_prmS1y*deltaT*xi2 + 2*w2*w2_prmS1y
    Lamb_prmS1z = -a2*deltaT*xi2_prmS1z - a2*deltaT_prmS1z*xi2 - a2_prmS1z*deltaT*xi2 + 2*w2*w2_prmS1z
    Lamb_prmS2x = -a2*deltaT*xi2_prmS2x - a2*deltaT_prmS2x*xi2 - a2_prmS2x*deltaT*xi2 + 2*w2*w2_prmS2x
    Lamb_prmS2y = -a2*deltaT*xi2_prmS2y - a2*deltaT_prmS2y*xi2 - a2_prmS2y*deltaT*xi2 + 2*w2*w2_prmS2y
    Lamb_prmS2z = -a2*deltaT*xi2_prmS2z - a2*deltaT_prmS2z*xi2 - a2_prmS2z*deltaT*xi2 + 2*w2*w2_prmS2z
    invrho2xi2Lamb_prmx1 = -1.0*xi2_prmx1/(Lamb*rho2*xi2**2) - 1.0*rho2_prmx1/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmx1/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmx2 = -1.0*xi2_prmx2/(Lamb*rho2*xi2**2) - 1.0*rho2_prmx2/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmx2/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmx3 = -1.0*xi2_prmx3/(Lamb*rho2*xi2**2) - 1.0*rho2_prmx3/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmx3/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmp1 = -1.0*Lamb_prmp1/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmp2 = -1.0*Lamb_prmp2/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmp3 = -1.0*Lamb_prmp3/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmS1x = -1.0*xi2_prmS1x/(Lamb*rho2*xi2**2) - 1.0*rho2_prmS1x/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmS1x/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmS1y = -1.0*xi2_prmS1y/(Lamb*rho2*xi2**2) - 1.0*rho2_prmS1y/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmS1y/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmS1z = -1.0*xi2_prmS1z/(Lamb*rho2*xi2**2) - 1.0*rho2_prmS1z/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmS1z/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmS2x = -1.0*xi2_prmS2x/(Lamb*rho2*xi2**2) - 1.0*rho2_prmS2x/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmS2x/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmS2y = -1.0*xi2_prmS2y/(Lamb*rho2*xi2**2) - 1.0*rho2_prmS2y/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmS2y/(Lamb**2*rho2*xi2)
    invrho2xi2Lamb_prmS2z = -1.0*xi2_prmS2z/(Lamb*rho2*xi2**2) - 1.0*rho2_prmS2z/(Lamb*rho2**2*xi2) - 1.0*Lamb_prmS2z/(Lamb**2*rho2*xi2)
    invrho2_prmx1 = Lamb*invrho2xi2Lamb*xi2_prmx1 + Lamb*invrho2xi2Lamb_prmx1*xi2 + Lamb_prmx1*invrho2xi2Lamb*xi2
    invrho2_prmx2 = Lamb*invrho2xi2Lamb*xi2_prmx2 + Lamb*invrho2xi2Lamb_prmx2*xi2 + Lamb_prmx2*invrho2xi2Lamb*xi2
    invrho2_prmx3 = Lamb*invrho2xi2Lamb*xi2_prmx3 + Lamb*invrho2xi2Lamb_prmx3*xi2 + Lamb_prmx3*invrho2xi2Lamb*xi2
    invrho2_prmp1 = Lamb*invrho2xi2Lamb_prmp1*xi2 + Lamb_prmp1*invrho2xi2Lamb*xi2
    invrho2_prmp2 = Lamb*invrho2xi2Lamb_prmp2*xi2 + Lamb_prmp2*invrho2xi2Lamb*xi2
    invrho2_prmp3 = Lamb*invrho2xi2Lamb_prmp3*xi2 + Lamb_prmp3*invrho2xi2Lamb*xi2
    invrho2_prmS1x = Lamb*invrho2xi2Lamb*xi2_prmS1x + Lamb*invrho2xi2Lamb_prmS1x*xi2 + Lamb_prmS1x*invrho2xi2Lamb*xi2
    invrho2_prmS1y = Lamb*invrho2xi2Lamb*xi2_prmS1y + Lamb*invrho2xi2Lamb_prmS1y*xi2 + Lamb_prmS1y*invrho2xi2Lamb*xi2
    invrho2_prmS1z = Lamb*invrho2xi2Lamb*xi2_prmS1z + Lamb*invrho2xi2Lamb_prmS1z*xi2 + Lamb_prmS1z*invrho2xi2Lamb*xi2
    invrho2_prmS2x = Lamb*invrho2xi2Lamb*xi2_prmS2x + Lamb*invrho2xi2Lamb_prmS2x*xi2 + Lamb_prmS2x*invrho2xi2Lamb*xi2
    invrho2_prmS2y = Lamb*invrho2xi2Lamb*xi2_prmS2y + Lamb*invrho2xi2Lamb_prmS2y*xi2 + Lamb_prmS2y*invrho2xi2Lamb*xi2
    invrho2_prmS2z = Lamb*invrho2xi2Lamb*xi2_prmS2z + Lamb*invrho2xi2Lamb_prmS2z*xi2 + Lamb_prmS2z*invrho2xi2Lamb*xi2
    invxi2_prmx1 = Lamb*invrho2xi2Lamb*rho2_prmx1 + Lamb*invrho2xi2Lamb_prmx1*rho2 + Lamb_prmx1*invrho2xi2Lamb*rho2
    invxi2_prmx2 = Lamb*invrho2xi2Lamb*rho2_prmx2 + Lamb*invrho2xi2Lamb_prmx2*rho2 + Lamb_prmx2*invrho2xi2Lamb*rho2
    invxi2_prmx3 = Lamb*invrho2xi2Lamb*rho2_prmx3 + Lamb*invrho2xi2Lamb_prmx3*rho2 + Lamb_prmx3*invrho2xi2Lamb*rho2
    invxi2_prmp1 = Lamb*invrho2xi2Lamb_prmp1*rho2 + Lamb_prmp1*invrho2xi2Lamb*rho2
    invxi2_prmp2 = Lamb*invrho2xi2Lamb_prmp2*rho2 + Lamb_prmp2*invrho2xi2Lamb*rho2
    invxi2_prmp3 = Lamb*invrho2xi2Lamb_prmp3*rho2 + Lamb_prmp3*invrho2xi2Lamb*rho2
    invxi2_prmS1x = Lamb*invrho2xi2Lamb*rho2_prmS1x + Lamb*invrho2xi2Lamb_prmS1x*rho2 + Lamb_prmS1x*invrho2xi2Lamb*rho2
    invxi2_prmS1y = Lamb*invrho2xi2Lamb*rho2_prmS1y + Lamb*invrho2xi2Lamb_prmS1y*rho2 + Lamb_prmS1y*invrho2xi2Lamb*rho2
    invxi2_prmS1z = Lamb*invrho2xi2Lamb*rho2_prmS1z + Lamb*invrho2xi2Lamb_prmS1z*rho2 + Lamb_prmS1z*invrho2xi2Lamb*rho2
    invxi2_prmS2x = Lamb*invrho2xi2Lamb*rho2_prmS2x + Lamb*invrho2xi2Lamb_prmS2x*rho2 + Lamb_prmS2x*invrho2xi2Lamb*rho2
    invxi2_prmS2y = Lamb*invrho2xi2Lamb*rho2_prmS2y + Lamb*invrho2xi2Lamb_prmS2y*rho2 + Lamb_prmS2y*invrho2xi2Lamb*rho2
    invxi2_prmS2z = Lamb*invrho2xi2Lamb*rho2_prmS2z + Lamb*invrho2xi2Lamb_prmS2z*rho2 + Lamb_prmS2z*invrho2xi2Lamb*rho2
    invLamb_prmx1 = invrho2xi2Lamb*rho2*xi2_prmx1 + invrho2xi2Lamb*rho2_prmx1*xi2 + invrho2xi2Lamb_prmx1*rho2*xi2
    invLamb_prmx2 = invrho2xi2Lamb*rho2*xi2_prmx2 + invrho2xi2Lamb*rho2_prmx2*xi2 + invrho2xi2Lamb_prmx2*rho2*xi2
    invLamb_prmx3 = invrho2xi2Lamb*rho2*xi2_prmx3 + invrho2xi2Lamb*rho2_prmx3*xi2 + invrho2xi2Lamb_prmx3*rho2*xi2
    invLamb_prmp1 = invrho2xi2Lamb_prmp1*rho2*xi2
    invLamb_prmp2 = invrho2xi2Lamb_prmp2*rho2*xi2
    invLamb_prmp3 = invrho2xi2Lamb_prmp3*rho2*xi2
    invLamb_prmS1x = invrho2xi2Lamb*rho2*xi2_prmS1x + invrho2xi2Lamb*rho2_prmS1x*xi2 + invrho2xi2Lamb_prmS1x*rho2*xi2
    invLamb_prmS1y = invrho2xi2Lamb*rho2*xi2_prmS1y + invrho2xi2Lamb*rho2_prmS1y*xi2 + invrho2xi2Lamb_prmS1y*rho2*xi2
    invLamb_prmS1z = invrho2xi2Lamb*rho2*xi2_prmS1z + invrho2xi2Lamb*rho2_prmS1z*xi2 + invrho2xi2Lamb_prmS1z*rho2*xi2
    invLamb_prmS2x = invrho2xi2Lamb*rho2*xi2_prmS2x + invrho2xi2Lamb*rho2_prmS2x*xi2 + invrho2xi2Lamb_prmS2x*rho2*xi2
    invLamb_prmS2y = invrho2xi2Lamb*rho2*xi2_prmS2y + invrho2xi2Lamb*rho2_prmS2y*xi2 + invrho2xi2Lamb_prmS2y*rho2*xi2
    invLamb_prmS2z = invrho2xi2Lamb*rho2*xi2_prmS2z + invrho2xi2Lamb*rho2_prmS2z*xi2 + invrho2xi2Lamb_prmS2z*rho2*xi2
    D_prmx1 = (6.0*eta*u2_prmx1 + eta*u3_prmx1*(52.0 - 6.0*eta))/(6.0*eta*u2 + eta*u3*(52.0 - 6.0*eta) + 1)
    D_prmx2 = (6.0*eta*u2_prmx2 + eta*u3_prmx2*(52.0 - 6.0*eta))/(6.0*eta*u2 + eta*u3*(52.0 - 6.0*eta) + 1)
    D_prmx3 = (6.0*eta*u2_prmx3 + eta*u3_prmx3*(52.0 - 6.0*eta))/(6.0*eta*u2 + eta*u3*(52.0 - 6.0*eta) + 1)
    deltaR_prmx1 = D*deltaT_prmx1 + D_prmx1*deltaT
    deltaR_prmx2 = D*deltaT_prmx2 + D_prmx2*deltaT
    deltaR_prmx3 = D*deltaT_prmx3 + D_prmx3*deltaT
    deltaR_prmp1 = D*deltaT_prmp1
    deltaR_prmp2 = D*deltaT_prmp2
    deltaR_prmp3 = D*deltaT_prmp3
    deltaR_prmS1x = D*deltaT_prmS1x
    deltaR_prmS1y = D*deltaT_prmS1y
    deltaR_prmS1z = D*deltaT_prmS1z
    deltaR_prmS2x = D*deltaT_prmS2x
    deltaR_prmS2y = D*deltaT_prmS2y
    deltaR_prmS2z = D*deltaT_prmS2z
    ww_prmx1 = 2.0*a*r_prmx1
    ww_prmx2 = 2.0*a*r_prmx2
    ww_prmx3 = 2.0*a*r_prmx3
    ww_prmS1x = 2.0*a_prmS1x*r
    ww_prmS1y = 2.0*a_prmS1y*r
    ww_prmS1z = 2.0*a_prmS1z*r
    ww_prmS2x = 2.0*a_prmS2x*r
    ww_prmS2y = 2.0*a_prmS2y*r
    ww_prmS2z = 2.0*a_prmS2z*r
    csi_prmx1 = -w2_prmx1*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmx1/2 + deltaR_prmx1*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmx2 = -w2_prmx2*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmx2/2 + deltaR_prmx2*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmx3 = -w2_prmx3*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmx3/2 + deltaR_prmx3*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmp1 = np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmp1/2 + deltaR_prmp1*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmp2 = np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmp2/2 + deltaR_prmp2*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmp3 = np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmp3/2 + deltaR_prmp3*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmS1x = -w2_prmS1x*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmS1x/2 + deltaR_prmS1x*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmS1y = -w2_prmS1y*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmS1y/2 + deltaR_prmS1y*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmS1z = -w2_prmS1z*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmS1z/2 + deltaR_prmS1z*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmS2x = -w2_prmS2x*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmS2x/2 + deltaR_prmS2x*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmS2y = -w2_prmS2y*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmS2y/2 + deltaR_prmS2y*deltaT/2)/(deltaR*deltaT*w2)
    csi_prmS2z = -w2_prmS2z*np.sqrt(deltaR*deltaT)/w2**2 + np.sqrt(deltaR*deltaT)*(deltaR*deltaT_prmS2z/2 + deltaR_prmS2z*deltaT/2)/(deltaR*deltaT*w2)
    csi1_prmx1 = csi_prmx1*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmx2 = csi_prmx2*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmx3 = csi_prmx3*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmp1 = csi_prmp1*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmp2 = csi_prmp2*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmp3 = csi_prmp3*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmS1x = csi_prmS1x*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmS1y = csi_prmS1y*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmS1z = csi_prmS1z*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmS2x = csi_prmS2x*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmS2y = csi_prmS2y*(1.0 - np.abs(tortoise - 1.0))
    csi1_prmS2z = csi_prmS2z*(1.0 - np.abs(tortoise - 1.0))
    csi2_prmx1 = csi_prmx1*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmx2 = csi_prmx2*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmx3 = csi_prmx3*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmp1 = csi_prmp1*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmp2 = csi_prmp2*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmp3 = csi_prmp3*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmS1x = csi_prmS1x*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmS1y = csi_prmS1y*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmS1z = csi_prmS1z*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmS2x = csi_prmS2x*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmS2y = csi_prmS2y*(0.5 - 0.5*np.sign(1.5 - tortoise))
    csi2_prmS2z = csi_prmS2z*(0.5 - 0.5*np.sign(1.5 - tortoise))
    prT_prmx1 = csi2*(nx_prmx1*p1 + ny_prmx1*p2 + nz_prmx1*p3) + csi2_prmx1*(nx*p1 + ny*p2 + nz*p3)
    prT_prmx2 = csi2*(nx_prmx2*p1 + ny_prmx2*p2 + nz_prmx2*p3) + csi2_prmx2*(nx*p1 + ny*p2 + nz*p3)
    prT_prmx3 = csi2*(nx_prmx3*p1 + ny_prmx3*p2 + nz_prmx3*p3) + csi2_prmx3*(nx*p1 + ny*p2 + nz*p3)
    prT_prmp1 = csi2*nx + csi2_prmp1*(nx*p1 + ny*p2 + nz*p3)
    prT_prmp2 = csi2*ny + csi2_prmp2*(nx*p1 + ny*p2 + nz*p3)
    prT_prmp3 = csi2*nz + csi2_prmp3*(nx*p1 + ny*p2 + nz*p3)
    prT_prmS1x = csi2_prmS1x*(nx*p1 + ny*p2 + nz*p3)
    prT_prmS1y = csi2_prmS1y*(nx*p1 + ny*p2 + nz*p3)
    prT_prmS1z = csi2_prmS1z*(nx*p1 + ny*p2 + nz*p3)
    prT_prmS2x = csi2_prmS2x*(nx*p1 + ny*p2 + nz*p3)
    prT_prmS2y = csi2_prmS2y*(nx*p1 + ny*p2 + nz*p3)
    prT_prmS2z = csi2_prmS2z*(nx*p1 + ny*p2 + nz*p3)
    tmpP1_prmx1 = nx*prT_prmx1*(-1.0 + 1.0/csi1) + nx_prmx1*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx1*nx*prT/csi1**2
    tmpP1_prmx2 = nx*prT_prmx2*(-1.0 + 1.0/csi1) + nx_prmx2*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx2*nx*prT/csi1**2
    tmpP1_prmx3 = nx*prT_prmx3*(-1.0 + 1.0/csi1) + nx_prmx3*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx3*nx*prT/csi1**2
    tmpP1_prmp1 = nx*prT_prmp1*(-1.0 + 1.0/csi1) + 1 - 1.0*csi1_prmp1*nx*prT/csi1**2
    tmpP1_prmp2 = nx*prT_prmp2*(-1.0 + 1.0/csi1) - 1.0*csi1_prmp2*nx*prT/csi1**2
    tmpP1_prmp3 = nx*prT_prmp3*(-1.0 + 1.0/csi1) - 1.0*csi1_prmp3*nx*prT/csi1**2
    tmpP1_prmS1x = nx*prT_prmS1x*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1x*nx*prT/csi1**2
    tmpP1_prmS1y = nx*prT_prmS1y*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1y*nx*prT/csi1**2
    tmpP1_prmS1z = nx*prT_prmS1z*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1z*nx*prT/csi1**2
    tmpP1_prmS2x = nx*prT_prmS2x*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2x*nx*prT/csi1**2
    tmpP1_prmS2y = nx*prT_prmS2y*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2y*nx*prT/csi1**2
    tmpP1_prmS2z = nx*prT_prmS2z*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2z*nx*prT/csi1**2
    tmpP2_prmx1 = ny*prT_prmx1*(-1.0 + 1.0/csi1) + ny_prmx1*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx1*ny*prT/csi1**2
    tmpP2_prmx2 = ny*prT_prmx2*(-1.0 + 1.0/csi1) + ny_prmx2*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx2*ny*prT/csi1**2
    tmpP2_prmx3 = ny*prT_prmx3*(-1.0 + 1.0/csi1) + ny_prmx3*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx3*ny*prT/csi1**2
    tmpP2_prmp1 = ny*prT_prmp1*(-1.0 + 1.0/csi1) - 1.0*csi1_prmp1*ny*prT/csi1**2
    tmpP2_prmp2 = ny*prT_prmp2*(-1.0 + 1.0/csi1) + 1 - 1.0*csi1_prmp2*ny*prT/csi1**2
    tmpP2_prmp3 = ny*prT_prmp3*(-1.0 + 1.0/csi1) - 1.0*csi1_prmp3*ny*prT/csi1**2
    tmpP2_prmS1x = ny*prT_prmS1x*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1x*ny*prT/csi1**2
    tmpP2_prmS1y = ny*prT_prmS1y*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1y*ny*prT/csi1**2
    tmpP2_prmS1z = ny*prT_prmS1z*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1z*ny*prT/csi1**2
    tmpP2_prmS2x = ny*prT_prmS2x*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2x*ny*prT/csi1**2
    tmpP2_prmS2y = ny*prT_prmS2y*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2y*ny*prT/csi1**2
    tmpP2_prmS2z = ny*prT_prmS2z*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2z*ny*prT/csi1**2
    tmpP3_prmx1 = nz*prT_prmx1*(-1.0 + 1.0/csi1) + nz_prmx1*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx1*nz*prT/csi1**2
    tmpP3_prmx2 = nz*prT_prmx2*(-1.0 + 1.0/csi1) + nz_prmx2*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx2*nz*prT/csi1**2
    tmpP3_prmx3 = nz*prT_prmx3*(-1.0 + 1.0/csi1) + nz_prmx3*prT*(-1.0 + 1.0/csi1) - 1.0*csi1_prmx3*nz*prT/csi1**2
    tmpP3_prmp1 = nz*prT_prmp1*(-1.0 + 1.0/csi1) - 1.0*csi1_prmp1*nz*prT/csi1**2
    tmpP3_prmp2 = nz*prT_prmp2*(-1.0 + 1.0/csi1) - 1.0*csi1_prmp2*nz*prT/csi1**2
    tmpP3_prmp3 = nz*prT_prmp3*(-1.0 + 1.0/csi1) + 1 - 1.0*csi1_prmp3*nz*prT/csi1**2
    tmpP3_prmS1x = nz*prT_prmS1x*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1x*nz*prT/csi1**2
    tmpP3_prmS1y = nz*prT_prmS1y*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1y*nz*prT/csi1**2
    tmpP3_prmS1z = nz*prT_prmS1z*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS1z*nz*prT/csi1**2
    tmpP3_prmS2x = nz*prT_prmS2x*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2x*nz*prT/csi1**2
    tmpP3_prmS2y = nz*prT_prmS2y*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2y*nz*prT/csi1**2
    tmpP3_prmS2z = nz*prT_prmS2z*(-1.0 + 1.0/csi1) - 1.0*csi1_prmS2z*nz*prT/csi1**2
    pxir_prmx1 = r*(tmpP1*xi_x_prmx1 + tmpP1*xi_y_prmx1 + tmpP1_prmx1*xi_x + tmpP1_prmx1*xi_y + tmpP3*xi_z_prmx1 + tmpP3_prmx1*xi_z) + r_prmx1*(tmpP1*xi_x + tmpP1*xi_y + tmpP3*xi_z)
    pxir_prmx2 = r*(tmpP1*xi_x_prmx2 + tmpP1*xi_y_prmx2 + tmpP1_prmx2*xi_x + tmpP1_prmx2*xi_y + tmpP3*xi_z_prmx2 + tmpP3_prmx2*xi_z) + r_prmx2*(tmpP1*xi_x + tmpP1*xi_y + tmpP3*xi_z)
    pxir_prmx3 = r*(tmpP1*xi_x_prmx3 + tmpP1*xi_y_prmx3 + tmpP1_prmx3*xi_x + tmpP1_prmx3*xi_y + tmpP3*xi_z_prmx3 + tmpP3_prmx3*xi_z) + r_prmx3*(tmpP1*xi_x + tmpP1*xi_y + tmpP3*xi_z)
    pxir_prmp1 = r*(tmpP1_prmp1*xi_x + tmpP1_prmp1*xi_y + tmpP3_prmp1*xi_z)
    pxir_prmp2 = r*(tmpP1_prmp2*xi_x + tmpP1_prmp2*xi_y + tmpP3_prmp2*xi_z)
    pxir_prmp3 = r*(tmpP1_prmp3*xi_x + tmpP1_prmp3*xi_y + tmpP3_prmp3*xi_z)
    pxir_prmS1x = r*(tmpP1*xi_x_prmS1x + tmpP1*xi_y_prmS1x + tmpP1_prmS1x*xi_x + tmpP1_prmS1x*xi_y + tmpP3*xi_z_prmS1x + tmpP3_prmS1x*xi_z)
    pxir_prmS1y = r*(tmpP1*xi_x_prmS1y + tmpP1*xi_y_prmS1y + tmpP1_prmS1y*xi_x + tmpP1_prmS1y*xi_y + tmpP3*xi_z_prmS1y + tmpP3_prmS1y*xi_z)
    pxir_prmS1z = r*(tmpP1*xi_x_prmS1z + tmpP1*xi_y_prmS1z + tmpP1_prmS1z*xi_x + tmpP1_prmS1z*xi_y + tmpP3*xi_z_prmS1z + tmpP3_prmS1z*xi_z)
    pxir_prmS2x = r*(tmpP1*xi_x_prmS2x + tmpP1*xi_y_prmS2x + tmpP1_prmS2x*xi_x + tmpP1_prmS2x*xi_y + tmpP3*xi_z_prmS2x + tmpP3_prmS2x*xi_z)
    pxir_prmS2y = r*(tmpP1*xi_x_prmS2y + tmpP1*xi_y_prmS2y + tmpP1_prmS2y*xi_x + tmpP1_prmS2y*xi_y + tmpP3*xi_z_prmS2y + tmpP3_prmS2y*xi_z)
    pxir_prmS2z = r*(tmpP1*xi_x_prmS2z + tmpP1*xi_y_prmS2z + tmpP1_prmS2z*xi_x + tmpP1_prmS2z*xi_y + tmpP3*xi_z_prmS2z + tmpP3_prmS2z*xi_z)
    pvr_prmx1 = r*(tmpP1*vx_prmx1 + tmpP1_prmx1*vx + tmpP2*vy_prmx1 + tmpP2_prmx1*vy + tmpP3*vz_prmx1 + tmpP3_prmx1*vz) + r_prmx1*(tmpP1*vx + tmpP2*vy + tmpP3*vz)
    pvr_prmx2 = r*(tmpP1*vx_prmx2 + tmpP1_prmx2*vx + tmpP2*vy_prmx2 + tmpP2_prmx2*vy + tmpP3*vz_prmx2 + tmpP3_prmx2*vz) + r_prmx2*(tmpP1*vx + tmpP2*vy + tmpP3*vz)
    pvr_prmx3 = r*(tmpP1*vx_prmx3 + tmpP1_prmx3*vx + tmpP2*vy_prmx3 + tmpP2_prmx3*vy + tmpP3*vz_prmx3 + tmpP3_prmx3*vz) + r_prmx3*(tmpP1*vx + tmpP2*vy + tmpP3*vz)
    pvr_prmp1 = r*(tmpP1_prmp1*vx + tmpP2_prmp1*vy + tmpP3_prmp1*vz)
    pvr_prmp2 = r*(tmpP1_prmp2*vx + tmpP2_prmp2*vy + tmpP3_prmp2*vz)
    pvr_prmp3 = r*(tmpP1_prmp3*vx + tmpP2_prmp3*vy + tmpP3_prmp3*vz)
    pvr_prmS1x = r*(tmpP1*vx_prmS1x + tmpP1_prmS1x*vx + tmpP2*vy_prmS1x + tmpP2_prmS1x*vy + tmpP3*vz_prmS1x + tmpP3_prmS1x*vz)
    pvr_prmS1y = r*(tmpP1*vx_prmS1y + tmpP1_prmS1y*vx + tmpP2*vy_prmS1y + tmpP2_prmS1y*vy + tmpP3*vz_prmS1y + tmpP3_prmS1y*vz)
    pvr_prmS1z = r*(tmpP1*vx_prmS1z + tmpP1_prmS1z*vx + tmpP2*vy_prmS1z + tmpP2_prmS1z*vy + tmpP3*vz_prmS1z + tmpP3_prmS1z*vz)
    pvr_prmS2x = r*(tmpP1*vx_prmS2x + tmpP1_prmS2x*vx + tmpP2*vy_prmS2x + tmpP2_prmS2x*vy + tmpP3*vz_prmS2x + tmpP3_prmS2x*vz)
    pvr_prmS2y = r*(tmpP1*vx_prmS2y + tmpP1_prmS2y*vx + tmpP2*vy_prmS2y + tmpP2_prmS2y*vy + tmpP3*vz_prmS2y + tmpP3_prmS2y*vz)
    pvr_prmS2z = r*(tmpP1*vx_prmS2z + tmpP1_prmS2z*vx + tmpP2*vy_prmS2z + tmpP2_prmS2z*vy + tmpP3*vz_prmS2z + tmpP3_prmS2z*vz)
    pn_prmx1 = nx*tmpP1_prmx1 + nx_prmx1*tmpP1 + ny*tmpP2_prmx1 + ny_prmx1*tmpP2 + nz*tmpP3_prmx1 + nz_prmx1*tmpP3
    pn_prmx2 = nx*tmpP1_prmx2 + nx_prmx2*tmpP1 + ny*tmpP2_prmx2 + ny_prmx2*tmpP2 + nz*tmpP3_prmx2 + nz_prmx2*tmpP3
    pn_prmx3 = nx*tmpP1_prmx3 + nx_prmx3*tmpP1 + ny*tmpP2_prmx3 + ny_prmx3*tmpP2 + nz*tmpP3_prmx3 + nz_prmx3*tmpP3
    pn_prmp1 = nx*tmpP1_prmp1 + ny*tmpP2_prmp1 + nz*tmpP3_prmp1
    pn_prmp2 = nx*tmpP1_prmp2 + ny*tmpP2_prmp2 + nz*tmpP3_prmp2
    pn_prmp3 = nx*tmpP1_prmp3 + ny*tmpP2_prmp3 + nz*tmpP3_prmp3
    pn_prmS1x = nx*tmpP1_prmS1x + ny*tmpP2_prmS1x + nz*tmpP3_prmS1x
    pn_prmS1y = nx*tmpP1_prmS1y + ny*tmpP2_prmS1y + nz*tmpP3_prmS1y
    pn_prmS1z = nx*tmpP1_prmS1z + ny*tmpP2_prmS1z + nz*tmpP3_prmS1z
    pn_prmS2x = nx*tmpP1_prmS2x + ny*tmpP2_prmS2x + nz*tmpP3_prmS2x
    pn_prmS2y = nx*tmpP1_prmS2y + ny*tmpP2_prmS2y + nz*tmpP3_prmS2y
    pn_prmS2z = nx*tmpP1_prmS2z + ny*tmpP2_prmS2z + nz*tmpP3_prmS2z
    pr_prmx1 = pn_prmx1
    pr_prmx2 = pn_prmx2
    pr_prmx3 = pn_prmx3
    pr_prmp1 = pn_prmp1
    pr_prmp2 = pn_prmp2
    pr_prmp3 = pn_prmp3
    pr_prmS1x = pn_prmS1x
    pr_prmS1y = pn_prmS1y
    pr_prmS1z = pn_prmS1z
    pr_prmS2x = pn_prmS2x
    pr_prmS2y = pn_prmS2y
    pr_prmS2z = pn_prmS2z
    pf_prmx1 = pxir_prmx1
    pf_prmx2 = pxir_prmx2
    pf_prmx3 = pxir_prmx3
    pf_prmp1 = pxir_prmp1
    pf_prmp2 = pxir_prmp2
    pf_prmp3 = pxir_prmp3
    pf_prmS1x = pxir_prmS1x
    pf_prmS1y = pxir_prmS1y
    pf_prmS1z = pxir_prmS1z
    pf_prmS2x = pxir_prmS2x
    pf_prmS2y = pxir_prmS2y
    pf_prmS2z = pxir_prmS2z
    ptheta2_prmx1 = 2*invxi2*pvr*pvr_prmx1 + invxi2_prmx1*pvr**2
    ptheta2_prmx2 = 2*invxi2*pvr*pvr_prmx2 + invxi2_prmx2*pvr**2
    ptheta2_prmx3 = 2*invxi2*pvr*pvr_prmx3 + invxi2_prmx3*pvr**2
    ptheta2_prmp1 = 2*invxi2*pvr*pvr_prmp1 + invxi2_prmp1*pvr**2
    ptheta2_prmp2 = 2*invxi2*pvr*pvr_prmp2 + invxi2_prmp2*pvr**2
    ptheta2_prmp3 = 2*invxi2*pvr*pvr_prmp3 + invxi2_prmp3*pvr**2
    ptheta2_prmS1x = 2*invxi2*pvr*pvr_prmS1x + invxi2_prmS1x*pvr**2
    ptheta2_prmS1y = 2*invxi2*pvr*pvr_prmS1y + invxi2_prmS1y*pvr**2
    ptheta2_prmS1z = 2*invxi2*pvr*pvr_prmS1z + invxi2_prmS1z*pvr**2
    ptheta2_prmS2x = 2*invxi2*pvr*pvr_prmS2x + invxi2_prmS2x*pvr**2
    ptheta2_prmS2y = 2*invxi2*pvr*pvr_prmS2y + invxi2_prmS2y*pvr**2
    ptheta2_prmS2z = 2*invxi2*pvr*pvr_prmS2z + invxi2_prmS2z*pvr**2
    Hns_prmx1 = invLamb*pf*ww_prmx1 + invLamb*pf_prmx1*ww + invLamb_prmx1*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmx1 + deltaR*invrho2_prmx1*pr**2 + deltaR_prmx1*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmx1 + 2*invLamb*invxi2*pf*pf_prmx1*rho2 + invLamb*invxi2_prmx1*pf**2*rho2 + invLamb_prmx1*invxi2*pf**2*rho2 + invrho2*ptheta2_prmx1 + invrho2_prmx1*ptheta2 + prT**4*qq*u2_prmx1 + 4*prT**3*prT_prmx1*qq*u2)/2 + deltaT*invLamb*rho2_prmx1*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmx1*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmx1*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmx2 = invLamb*pf*ww_prmx2 + invLamb*pf_prmx2*ww + invLamb_prmx2*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmx2 + deltaR*invrho2_prmx2*pr**2 + deltaR_prmx2*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmx2 + 2*invLamb*invxi2*pf*pf_prmx2*rho2 + invLamb*invxi2_prmx2*pf**2*rho2 + invLamb_prmx2*invxi2*pf**2*rho2 + invrho2*ptheta2_prmx2 + invrho2_prmx2*ptheta2 + prT**4*qq*u2_prmx2 + 4*prT**3*prT_prmx2*qq*u2)/2 + deltaT*invLamb*rho2_prmx2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmx2*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmx2*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmx3 = invLamb*pf*ww_prmx3 + invLamb*pf_prmx3*ww + invLamb_prmx3*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmx3 + deltaR*invrho2_prmx3*pr**2 + deltaR_prmx3*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmx3 + 2*invLamb*invxi2*pf*pf_prmx3*rho2 + invLamb*invxi2_prmx3*pf**2*rho2 + invLamb_prmx3*invxi2*pf**2*rho2 + invrho2*ptheta2_prmx3 + invrho2_prmx3*ptheta2 + prT**4*qq*u2_prmx3 + 4*prT**3*prT_prmx3*qq*u2)/2 + deltaT*invLamb*rho2_prmx3*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmx3*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmx3*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmp1 = invLamb*pf_prmp1*ww + invLamb_prmp1*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmp1 + deltaR*invrho2_prmp1*pr**2 + deltaR_prmp1*invrho2*pr**2 + 2*invLamb*invxi2*pf*pf_prmp1*rho2 + invLamb*invxi2_prmp1*pf**2*rho2 + invLamb_prmp1*invxi2*pf**2*rho2 + invrho2*ptheta2_prmp1 + invrho2_prmp1*ptheta2 + 4*prT**3*prT_prmp1*qq*u2)/2 + deltaT*invLamb_prmp1*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmp1*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmp2 = invLamb*pf_prmp2*ww + invLamb_prmp2*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmp2 + deltaR*invrho2_prmp2*pr**2 + deltaR_prmp2*invrho2*pr**2 + 2*invLamb*invxi2*pf*pf_prmp2*rho2 + invLamb*invxi2_prmp2*pf**2*rho2 + invLamb_prmp2*invxi2*pf**2*rho2 + invrho2*ptheta2_prmp2 + invrho2_prmp2*ptheta2 + 4*prT**3*prT_prmp2*qq*u2)/2 + deltaT*invLamb_prmp2*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmp2*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmp3 = invLamb*pf_prmp3*ww + invLamb_prmp3*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmp3 + deltaR*invrho2_prmp3*pr**2 + deltaR_prmp3*invrho2*pr**2 + 2*invLamb*invxi2*pf*pf_prmp3*rho2 + invLamb*invxi2_prmp3*pf**2*rho2 + invLamb_prmp3*invxi2*pf**2*rho2 + invrho2*ptheta2_prmp3 + invrho2_prmp3*ptheta2 + 4*prT**3*prT_prmp3*qq*u2)/2 + deltaT*invLamb_prmp3*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmp3*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmS1x = invLamb*pf*ww_prmS1x + invLamb*pf_prmS1x*ww + invLamb_prmS1x*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmS1x + deltaR*invrho2_prmS1x*pr**2 + deltaR_prmS1x*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmS1x + 2*invLamb*invxi2*pf*pf_prmS1x*rho2 + invLamb*invxi2_prmS1x*pf**2*rho2 + invLamb_prmS1x*invxi2*pf**2*rho2 + invrho2*ptheta2_prmS1x + invrho2_prmS1x*ptheta2 + 4*prT**3*prT_prmS1x*qq*u2)/2 + deltaT*invLamb*rho2_prmS1x*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmS1x*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmS1x*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmS1y = invLamb*pf*ww_prmS1y + invLamb*pf_prmS1y*ww + invLamb_prmS1y*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmS1y + deltaR*invrho2_prmS1y*pr**2 + deltaR_prmS1y*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmS1y + 2*invLamb*invxi2*pf*pf_prmS1y*rho2 + invLamb*invxi2_prmS1y*pf**2*rho2 + invLamb_prmS1y*invxi2*pf**2*rho2 + invrho2*ptheta2_prmS1y + invrho2_prmS1y*ptheta2 + 4*prT**3*prT_prmS1y*qq*u2)/2 + deltaT*invLamb*rho2_prmS1y*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmS1y*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmS1y*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmS1z = invLamb*pf*ww_prmS1z + invLamb*pf_prmS1z*ww + invLamb_prmS1z*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmS1z + deltaR*invrho2_prmS1z*pr**2 + deltaR_prmS1z*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmS1z + 2*invLamb*invxi2*pf*pf_prmS1z*rho2 + invLamb*invxi2_prmS1z*pf**2*rho2 + invLamb_prmS1z*invxi2*pf**2*rho2 + invrho2*ptheta2_prmS1z + invrho2_prmS1z*ptheta2 + 4*prT**3*prT_prmS1z*qq*u2)/2 + deltaT*invLamb*rho2_prmS1z*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmS1z*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmS1z*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmS2x = invLamb*pf*ww_prmS2x + invLamb*pf_prmS2x*ww + invLamb_prmS2x*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmS2x + deltaR*invrho2_prmS2x*pr**2 + deltaR_prmS2x*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmS2x + 2*invLamb*invxi2*pf*pf_prmS2x*rho2 + invLamb*invxi2_prmS2x*pf**2*rho2 + invLamb_prmS2x*invxi2*pf**2*rho2 + invrho2*ptheta2_prmS2x + invrho2_prmS2x*ptheta2 + 4*prT**3*prT_prmS2x*qq*u2)/2 + deltaT*invLamb*rho2_prmS2x*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmS2x*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmS2x*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmS2y = invLamb*pf*ww_prmS2y + invLamb*pf_prmS2y*ww + invLamb_prmS2y*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmS2y + deltaR*invrho2_prmS2y*pr**2 + deltaR_prmS2y*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmS2y + 2*invLamb*invxi2*pf*pf_prmS2y*rho2 + invLamb*invxi2_prmS2y*pf**2*rho2 + invLamb_prmS2y*invxi2*pf**2*rho2 + invrho2*ptheta2_prmS2y + invrho2_prmS2y*ptheta2 + 4*prT**3*prT_prmS2y*qq*u2)/2 + deltaT*invLamb*rho2_prmS2y*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmS2y*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmS2y*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    Hns_prmS2z = invLamb*pf*ww_prmS2z + invLamb*pf_prmS2z*ww + invLamb_prmS2z*pf*ww + np.sqrt(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))*(deltaT*invLamb*rho2*(2*deltaR*invrho2*pr*pr_prmS2z + deltaR*invrho2_prmS2z*pr**2 + deltaR_prmS2z*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2_prmS2z + 2*invLamb*invxi2*pf*pf_prmS2z*rho2 + invLamb*invxi2_prmS2z*pf**2*rho2 + invLamb_prmS2z*invxi2*pf**2*rho2 + invrho2*ptheta2_prmS2z + invrho2_prmS2z*ptheta2 + 4*prT**3*prT_prmS2z*qq*u2)/2 + deltaT*invLamb*rho2_prmS2z*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT*invLamb_prmS2z*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2 + deltaT_prmS2z*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0)/2)/(deltaT*invLamb*rho2*(deltaR*invrho2*pr**2 + invLamb*invxi2*pf**2*rho2 + invrho2*ptheta2 + prT**4*qq*u2 + 1.0))
    B_prmx1 = deltaT_prmx1/(2*np.sqrt(deltaT))
    B_prmx2 = deltaT_prmx2/(2*np.sqrt(deltaT))
    B_prmx3 = deltaT_prmx3/(2*np.sqrt(deltaT))
    B_prmp1 = deltaT_prmp1/(2*np.sqrt(deltaT))
    B_prmp2 = deltaT_prmp2/(2*np.sqrt(deltaT))
    B_prmp3 = deltaT_prmp3/(2*np.sqrt(deltaT))
    B_prmS1x = deltaT_prmS1x/(2*np.sqrt(deltaT))
    B_prmS1y = deltaT_prmS1y/(2*np.sqrt(deltaT))
    B_prmS1z = deltaT_prmS1z/(2*np.sqrt(deltaT))
    B_prmS2x = deltaT_prmS2x/(2*np.sqrt(deltaT))
    B_prmS2y = deltaT_prmS2y/(2*np.sqrt(deltaT))
    B_prmS2z = deltaT_prmS2z/(2*np.sqrt(deltaT))
    sqrtdeltaT_prmx1 = B_prmx1
    sqrtdeltaT_prmx2 = B_prmx2
    sqrtdeltaT_prmx3 = B_prmx3
    sqrtdeltaT_prmp1 = B_prmp1
    sqrtdeltaT_prmp2 = B_prmp2
    sqrtdeltaT_prmp3 = B_prmp3
    sqrtdeltaT_prmS1x = B_prmS1x
    sqrtdeltaT_prmS1y = B_prmS1y
    sqrtdeltaT_prmS1z = B_prmS1z
    sqrtdeltaT_prmS2x = B_prmS2x
    sqrtdeltaT_prmS2y = B_prmS2y
    sqrtdeltaT_prmS2z = B_prmS2z
    sqrtdeltaR_prmx1 = deltaR_prmx1/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmx2 = deltaR_prmx2/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmx3 = deltaR_prmx3/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmp1 = deltaR_prmp1/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmp2 = deltaR_prmp2/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmp3 = deltaR_prmp3/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmS1x = deltaR_prmS1x/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmS1y = deltaR_prmS1y/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmS1z = deltaR_prmS1z/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmS2x = deltaR_prmS2x/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmS2y = deltaR_prmS2y/(2*np.sqrt(deltaR))
    sqrtdeltaR_prmS2z = deltaR_prmS2z/(2*np.sqrt(deltaR))
    invdeltaTsqrtdeltaTsqrtdeltaR_prmx1 = -1.0*sqrtdeltaT_prmx1/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmx1/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmx1/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmx2 = -1.0*sqrtdeltaT_prmx2/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmx2/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmx2/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmx3 = -1.0*sqrtdeltaT_prmx3/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmx3/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmx3/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmp1 = -1.0*sqrtdeltaT_prmp1/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmp1/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmp1/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmp2 = -1.0*sqrtdeltaT_prmp2/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmp2/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmp2/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmp3 = -1.0*sqrtdeltaT_prmp3/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmp3/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmp3/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmS1x = -1.0*sqrtdeltaT_prmS1x/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmS1x/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmS1x/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmS1y = -1.0*sqrtdeltaT_prmS1y/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmS1y/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmS1y/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmS1z = -1.0*sqrtdeltaT_prmS1z/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmS1z/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmS1z/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmS2x = -1.0*sqrtdeltaT_prmS2x/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmS2x/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmS2x/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmS2y = -1.0*sqrtdeltaT_prmS2y/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmS2y/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmS2y/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaTsqrtdeltaTsqrtdeltaR_prmS2z = -1.0*sqrtdeltaT_prmS2z/(deltaT*sqrtdeltaR*sqrtdeltaT**2) - 1.0*sqrtdeltaR_prmS2z/(deltaT*sqrtdeltaR**2*sqrtdeltaT) - 1.0*deltaT_prmS2z/(deltaT**2*sqrtdeltaR*sqrtdeltaT)
    invdeltaT_prmx1 = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmx1 + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmx1*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmx1*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmx2 = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmx2 + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmx2*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmx2*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmx3 = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmx3 + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmx3*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmx3*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmp1 = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmp1 + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmp1*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmp1*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmp2 = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmp2 + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmp2*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmp2*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmp3 = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmp3 + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmp3*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmp3*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmS1x = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmS1x + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS1x*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmS1x*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmS1y = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmS1y + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS1y*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmS1y*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmS1z = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmS1z + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS1z*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmS1z*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmS2x = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmS2x + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS2x*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmS2x*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmS2y = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmS2y + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS2y*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmS2y*sqrtdeltaR*sqrtdeltaT
    invdeltaT_prmS2z = invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR*sqrtdeltaT_prmS2z + invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS2z*sqrtdeltaT + invdeltaTsqrtdeltaTsqrtdeltaR_prmS2z*sqrtdeltaR*sqrtdeltaT
    invsqrtdeltaT_prmx1 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmx1 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmx1*sqrtdeltaR + deltaT_prmx1*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmx2 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmx2 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmx2*sqrtdeltaR + deltaT_prmx2*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmx3 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmx3 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmx3*sqrtdeltaR + deltaT_prmx3*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmp1 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmp1 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmp1*sqrtdeltaR + deltaT_prmp1*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmp2 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmp2 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmp2*sqrtdeltaR + deltaT_prmp2*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmp3 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmp3 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmp3*sqrtdeltaR + deltaT_prmp3*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmS1x = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS1x + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS1x*sqrtdeltaR + deltaT_prmS1x*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmS1y = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS1y + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS1y*sqrtdeltaR + deltaT_prmS1y*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmS1z = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS1z + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS1z*sqrtdeltaR + deltaT_prmS1z*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmS2x = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS2x + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS2x*sqrtdeltaR + deltaT_prmS2x*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmS2y = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS2y + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS2y*sqrtdeltaR + deltaT_prmS2y*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaT_prmS2z = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR_prmS2z + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS2z*sqrtdeltaR + deltaT_prmS2z*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaR
    invsqrtdeltaR_prmx1 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmx1 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmx1*sqrtdeltaT + deltaT_prmx1*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmx2 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmx2 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmx2*sqrtdeltaT + deltaT_prmx2*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmx3 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmx3 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmx3*sqrtdeltaT + deltaT_prmx3*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmp1 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmp1 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmp1*sqrtdeltaT + deltaT_prmp1*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmp2 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmp2 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmp2*sqrtdeltaT + deltaT_prmp2*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmp3 = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmp3 + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmp3*sqrtdeltaT + deltaT_prmp3*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmS1x = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmS1x + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS1x*sqrtdeltaT + deltaT_prmS1x*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmS1y = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmS1y + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS1y*sqrtdeltaT + deltaT_prmS1y*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmS1z = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmS1z + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS1z*sqrtdeltaT + deltaT_prmS1z*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmS2x = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmS2x + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS2x*sqrtdeltaT + deltaT_prmS2x*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmS2y = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmS2y + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS2y*sqrtdeltaT + deltaT_prmS2y*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    invsqrtdeltaR_prmS2z = deltaT*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT_prmS2z + deltaT*invdeltaTsqrtdeltaTsqrtdeltaR_prmS2z*sqrtdeltaT + deltaT_prmS2z*invdeltaTsqrtdeltaTsqrtdeltaR*sqrtdeltaT
    w_prmx1 = invLamb*ww_prmx1 + invLamb_prmx1*ww
    w_prmx2 = invLamb*ww_prmx2 + invLamb_prmx2*ww
    w_prmx3 = invLamb*ww_prmx3 + invLamb_prmx3*ww
    w_prmp1 = invLamb_prmp1*ww
    w_prmp2 = invLamb_prmp2*ww
    w_prmp3 = invLamb_prmp3*ww
    w_prmS1x = invLamb*ww_prmS1x + invLamb_prmS1x*ww
    w_prmS1y = invLamb*ww_prmS1y + invLamb_prmS1y*ww
    w_prmS1z = invLamb*ww_prmS1z + invLamb_prmS1z*ww
    w_prmS2x = invLamb*ww_prmS2x + invLamb_prmS2x*ww
    w_prmS2y = invLamb*ww_prmS2y + invLamb_prmS2y*ww
    w_prmS2z = invLamb*ww_prmS2z + invLamb_prmS2z*ww
    expnu_prmx1 = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmx1/2 + deltaT*invLamb_prmx1*rho2/2 + deltaT_prmx1*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmx2 = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmx2/2 + deltaT*invLamb_prmx2*rho2/2 + deltaT_prmx2*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmx3 = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmx3/2 + deltaT*invLamb_prmx3*rho2/2 + deltaT_prmx3*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmp1 = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb_prmp1*rho2/2 + deltaT_prmp1*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmp2 = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb_prmp2*rho2/2 + deltaT_prmp2*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmp3 = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb_prmp3*rho2/2 + deltaT_prmp3*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmS1x = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmS1x/2 + deltaT*invLamb_prmS1x*rho2/2 + deltaT_prmS1x*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmS1y = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmS1y/2 + deltaT*invLamb_prmS1y*rho2/2 + deltaT_prmS1y*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmS1z = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmS1z/2 + deltaT*invLamb_prmS1z*rho2/2 + deltaT_prmS1z*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmS2x = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmS2x/2 + deltaT*invLamb_prmS2x*rho2/2 + deltaT_prmS2x*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmS2y = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmS2y/2 + deltaT*invLamb_prmS2y*rho2/2 + deltaT_prmS2y*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expnu_prmS2z = np.sqrt(deltaT*invLamb*rho2)*(deltaT*invLamb*rho2_prmS2z/2 + deltaT*invLamb_prmS2z*rho2/2 + deltaT_prmS2z*invLamb*rho2/2)/(deltaT*invLamb*rho2)
    expMU_prmx1 = rho2_prmx1/(2*np.sqrt(rho2))
    expMU_prmx2 = rho2_prmx2/(2*np.sqrt(rho2))
    expMU_prmx3 = rho2_prmx3/(2*np.sqrt(rho2))
    expMU_prmS1x = rho2_prmS1x/(2*np.sqrt(rho2))
    expMU_prmS1y = rho2_prmS1y/(2*np.sqrt(rho2))
    expMU_prmS1z = rho2_prmS1z/(2*np.sqrt(rho2))
    expMU_prmS2x = rho2_prmS2x/(2*np.sqrt(rho2))
    expMU_prmS2y = rho2_prmS2y/(2*np.sqrt(rho2))
    expMU_prmS2z = rho2_prmS2z/(2*np.sqrt(rho2))
    invexpnuexpMU_prmx1 = -1.0*expnu_prmx1/(expMU*expnu**2) - 1.0*expMU_prmx1/(expMU**2*expnu)
    invexpnuexpMU_prmx2 = -1.0*expnu_prmx2/(expMU*expnu**2) - 1.0*expMU_prmx2/(expMU**2*expnu)
    invexpnuexpMU_prmx3 = -1.0*expnu_prmx3/(expMU*expnu**2) - 1.0*expMU_prmx3/(expMU**2*expnu)
    invexpnuexpMU_prmp1 = -1.0*expnu_prmp1/(expMU*expnu**2)
    invexpnuexpMU_prmp2 = -1.0*expnu_prmp2/(expMU*expnu**2)
    invexpnuexpMU_prmp3 = -1.0*expnu_prmp3/(expMU*expnu**2)
    invexpnuexpMU_prmS1x = -1.0*expnu_prmS1x/(expMU*expnu**2) - 1.0*expMU_prmS1x/(expMU**2*expnu)
    invexpnuexpMU_prmS1y = -1.0*expnu_prmS1y/(expMU*expnu**2) - 1.0*expMU_prmS1y/(expMU**2*expnu)
    invexpnuexpMU_prmS1z = -1.0*expnu_prmS1z/(expMU*expnu**2) - 1.0*expMU_prmS1z/(expMU**2*expnu)
    invexpnuexpMU_prmS2x = -1.0*expnu_prmS2x/(expMU*expnu**2) - 1.0*expMU_prmS2x/(expMU**2*expnu)
    invexpnuexpMU_prmS2y = -1.0*expnu_prmS2y/(expMU*expnu**2) - 1.0*expMU_prmS2y/(expMU**2*expnu)
    invexpnuexpMU_prmS2z = -1.0*expnu_prmS2z/(expMU*expnu**2) - 1.0*expMU_prmS2z/(expMU**2*expnu)
    invexpnu_prmx1 = expMU*invexpnuexpMU_prmx1 + expMU_prmx1*invexpnuexpMU
    invexpnu_prmx2 = expMU*invexpnuexpMU_prmx2 + expMU_prmx2*invexpnuexpMU
    invexpnu_prmx3 = expMU*invexpnuexpMU_prmx3 + expMU_prmx3*invexpnuexpMU
    invexpnu_prmp1 = expMU*invexpnuexpMU_prmp1
    invexpnu_prmp2 = expMU*invexpnuexpMU_prmp2
    invexpnu_prmp3 = expMU*invexpnuexpMU_prmp3
    invexpnu_prmS1x = expMU*invexpnuexpMU_prmS1x + expMU_prmS1x*invexpnuexpMU
    invexpnu_prmS1y = expMU*invexpnuexpMU_prmS1y + expMU_prmS1y*invexpnuexpMU
    invexpnu_prmS1z = expMU*invexpnuexpMU_prmS1z + expMU_prmS1z*invexpnuexpMU
    invexpnu_prmS2x = expMU*invexpnuexpMU_prmS2x + expMU_prmS2x*invexpnuexpMU
    invexpnu_prmS2y = expMU*invexpnuexpMU_prmS2y + expMU_prmS2y*invexpnuexpMU
    invexpnu_prmS2z = expMU*invexpnuexpMU_prmS2z + expMU_prmS2z*invexpnuexpMU
    invexpMU_prmx1 = expnu*invexpnuexpMU_prmx1 + expnu_prmx1*invexpnuexpMU
    invexpMU_prmx2 = expnu*invexpnuexpMU_prmx2 + expnu_prmx2*invexpnuexpMU
    invexpMU_prmx3 = expnu*invexpnuexpMU_prmx3 + expnu_prmx3*invexpnuexpMU
    invexpMU_prmp1 = expnu*invexpnuexpMU_prmp1 + expnu_prmp1*invexpnuexpMU
    invexpMU_prmp2 = expnu*invexpnuexpMU_prmp2 + expnu_prmp2*invexpnuexpMU
    invexpMU_prmp3 = expnu*invexpnuexpMU_prmp3 + expnu_prmp3*invexpnuexpMU
    invexpMU_prmS1x = expnu*invexpnuexpMU_prmS1x + expnu_prmS1x*invexpnuexpMU
    invexpMU_prmS1y = expnu*invexpnuexpMU_prmS1y + expnu_prmS1y*invexpnuexpMU
    invexpMU_prmS1z = expnu*invexpnuexpMU_prmS1z + expnu_prmS1z*invexpnuexpMU
    invexpMU_prmS2x = expnu*invexpnuexpMU_prmS2x + expnu_prmS2x*invexpnuexpMU
    invexpMU_prmS2y = expnu*invexpnuexpMU_prmS2y + expnu_prmS2y*invexpnuexpMU
    invexpMU_prmS2z = expnu*invexpnuexpMU_prmS2z + expnu_prmS2z*invexpnuexpMU
    Lamb_r_prmx1 = -a2*deltaT_r*xi2_prmx1 - a2*deltaT_r_prmx1*xi2 + 4.0*r*w2_prmx1 + 4.0*r_prmx1*w2
    Lamb_r_prmx2 = -a2*deltaT_r*xi2_prmx2 - a2*deltaT_r_prmx2*xi2 + 4.0*r*w2_prmx2 + 4.0*r_prmx2*w2
    Lamb_r_prmx3 = -a2*deltaT_r*xi2_prmx3 - a2*deltaT_r_prmx3*xi2 + 4.0*r*w2_prmx3 + 4.0*r_prmx3*w2
    Lamb_r_prmp1 = -a2*deltaT_r_prmp1*xi2
    Lamb_r_prmp2 = -a2*deltaT_r_prmp2*xi2
    Lamb_r_prmp3 = -a2*deltaT_r_prmp3*xi2
    Lamb_r_prmS1x = -a2*deltaT_r*xi2_prmS1x - a2*deltaT_r_prmS1x*xi2 - a2_prmS1x*deltaT_r*xi2 + 4.0*r*w2_prmS1x
    Lamb_r_prmS1y = -a2*deltaT_r*xi2_prmS1y - a2*deltaT_r_prmS1y*xi2 - a2_prmS1y*deltaT_r*xi2 + 4.0*r*w2_prmS1y
    Lamb_r_prmS1z = -a2*deltaT_r*xi2_prmS1z - a2*deltaT_r_prmS1z*xi2 - a2_prmS1z*deltaT_r*xi2 + 4.0*r*w2_prmS1z
    Lamb_r_prmS2x = -a2*deltaT_r*xi2_prmS2x - a2*deltaT_r_prmS2x*xi2 - a2_prmS2x*deltaT_r*xi2 + 4.0*r*w2_prmS2x
    Lamb_r_prmS2y = -a2*deltaT_r*xi2_prmS2y - a2*deltaT_r_prmS2y*xi2 - a2_prmS2y*deltaT_r*xi2 + 4.0*r*w2_prmS2y
    Lamb_r_prmS2z = -a2*deltaT_r*xi2_prmS2z - a2*deltaT_r_prmS2z*xi2 - a2_prmS2z*deltaT_r*xi2 + 4.0*r*w2_prmS2z
    ww_r_prmS1x = 2.0*a_prmS1x
    ww_r_prmS1y = 2.0*a_prmS1y
    ww_r_prmS1z = 2.0*a_prmS1z
    ww_r_prmS2x = 2.0*a_prmS2x
    ww_r_prmS2y = 2.0*a_prmS2y
    ww_r_prmS2z = 2.0*a_prmS2z
    BR_prmx1 = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmx1 + 0.5*deltaT_r_prmx1 - deltaT_prmx1*invsqrtdeltaR) + invsqrtdeltaT_prmx1*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmx2 = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmx2 + 0.5*deltaT_r_prmx2 - deltaT_prmx2*invsqrtdeltaR) + invsqrtdeltaT_prmx2*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmx3 = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmx3 + 0.5*deltaT_r_prmx3 - deltaT_prmx3*invsqrtdeltaR) + invsqrtdeltaT_prmx3*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmp1 = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmp1 + 0.5*deltaT_r_prmp1 - deltaT_prmp1*invsqrtdeltaR) + invsqrtdeltaT_prmp1*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmp2 = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmp2 + 0.5*deltaT_r_prmp2 - deltaT_prmp2*invsqrtdeltaR) + invsqrtdeltaT_prmp2*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmp3 = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmp3 + 0.5*deltaT_r_prmp3 - deltaT_prmp3*invsqrtdeltaR) + invsqrtdeltaT_prmp3*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmS1x = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmS1x + 0.5*deltaT_r_prmS1x - deltaT_prmS1x*invsqrtdeltaR) + invsqrtdeltaT_prmS1x*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmS1y = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmS1y + 0.5*deltaT_r_prmS1y - deltaT_prmS1y*invsqrtdeltaR) + invsqrtdeltaT_prmS1y*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmS1z = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmS1z + 0.5*deltaT_r_prmS1z - deltaT_prmS1z*invsqrtdeltaR) + invsqrtdeltaT_prmS1z*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmS2x = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmS2x + 0.5*deltaT_r_prmS2x - deltaT_prmS2x*invsqrtdeltaR) + invsqrtdeltaT_prmS2x*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmS2y = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmS2y + 0.5*deltaT_r_prmS2y - deltaT_prmS2y*invsqrtdeltaR) + invsqrtdeltaT_prmS2y*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    BR_prmS2z = invsqrtdeltaT*(-deltaT*invsqrtdeltaR_prmS2z + 0.5*deltaT_r_prmS2z - deltaT_prmS2z*invsqrtdeltaR) + invsqrtdeltaT_prmS2z*(-deltaT*invsqrtdeltaR + 0.5*deltaT_r)
    wr_prmx1 = invLamb**2*(-Lamb_r*ww_prmx1 - Lamb_r_prmx1*ww + Lamb_prmx1*ww_r) + invLamb*invLamb_prmx1*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmx2 = invLamb**2*(-Lamb_r*ww_prmx2 - Lamb_r_prmx2*ww + Lamb_prmx2*ww_r) + invLamb*invLamb_prmx2*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmx3 = invLamb**2*(-Lamb_r*ww_prmx3 - Lamb_r_prmx3*ww + Lamb_prmx3*ww_r) + invLamb*invLamb_prmx3*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmp1 = invLamb**2*(-Lamb_r_prmp1*ww + Lamb_prmp1*ww_r) + invLamb*invLamb_prmp1*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmp2 = invLamb**2*(-Lamb_r_prmp2*ww + Lamb_prmp2*ww_r) + invLamb*invLamb_prmp2*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmp3 = invLamb**2*(-Lamb_r_prmp3*ww + Lamb_prmp3*ww_r) + invLamb*invLamb_prmp3*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmS1x = invLamb**2*(Lamb*ww_r_prmS1x - Lamb_r*ww_prmS1x - Lamb_r_prmS1x*ww + Lamb_prmS1x*ww_r) + invLamb*invLamb_prmS1x*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmS1y = invLamb**2*(Lamb*ww_r_prmS1y - Lamb_r*ww_prmS1y - Lamb_r_prmS1y*ww + Lamb_prmS1y*ww_r) + invLamb*invLamb_prmS1y*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmS1z = invLamb**2*(Lamb*ww_r_prmS1z - Lamb_r*ww_prmS1z - Lamb_r_prmS1z*ww + Lamb_prmS1z*ww_r) + invLamb*invLamb_prmS1z*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmS2x = invLamb**2*(Lamb*ww_r_prmS2x - Lamb_r*ww_prmS2x - Lamb_r_prmS2x*ww + Lamb_prmS2x*ww_r) + invLamb*invLamb_prmS2x*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmS2y = invLamb**2*(Lamb*ww_r_prmS2y - Lamb_r*ww_prmS2y - Lamb_r_prmS2y*ww + Lamb_prmS2y*ww_r) + invLamb*invLamb_prmS2y*(2*Lamb*ww_r - 2*Lamb_r*ww)
    wr_prmS2z = invLamb**2*(Lamb*ww_r_prmS2z - Lamb_r*ww_prmS2z - Lamb_r_prmS2z*ww + Lamb_prmS2z*ww_r) + invLamb*invLamb_prmS2z*(2*Lamb*ww_r - 2*Lamb_r*ww)
    nur_prmx1 = invLamb*invdeltaT*w2*(-2.0*deltaT*r_prmx1 + 0.5*deltaT_r*w2_prmx1 + 0.5*deltaT_r_prmx1*w2 - 2.0*deltaT_prmx1*r) + invLamb*invdeltaT*w2_prmx1*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmx1*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmx1*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2*r_prmx1 + invrho2_prmx1*r
    nur_prmx2 = invLamb*invdeltaT*w2*(-2.0*deltaT*r_prmx2 + 0.5*deltaT_r*w2_prmx2 + 0.5*deltaT_r_prmx2*w2 - 2.0*deltaT_prmx2*r) + invLamb*invdeltaT*w2_prmx2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmx2*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmx2*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2*r_prmx2 + invrho2_prmx2*r
    nur_prmx3 = invLamb*invdeltaT*w2*(-2.0*deltaT*r_prmx3 + 0.5*deltaT_r*w2_prmx3 + 0.5*deltaT_r_prmx3*w2 - 2.0*deltaT_prmx3*r) + invLamb*invdeltaT*w2_prmx3*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmx3*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmx3*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2*r_prmx3 + invrho2_prmx3*r
    nur_prmp1 = invLamb*invdeltaT*w2*(0.5*deltaT_r_prmp1*w2 - 2.0*deltaT_prmp1*r) + invLamb*invdeltaT_prmp1*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmp1*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmp1*r
    nur_prmp2 = invLamb*invdeltaT*w2*(0.5*deltaT_r_prmp2*w2 - 2.0*deltaT_prmp2*r) + invLamb*invdeltaT_prmp2*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmp2*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmp2*r
    nur_prmp3 = invLamb*invdeltaT*w2*(0.5*deltaT_r_prmp3*w2 - 2.0*deltaT_prmp3*r) + invLamb*invdeltaT_prmp3*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmp3*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmp3*r
    nur_prmS1x = invLamb*invdeltaT*w2*(0.5*deltaT_r*w2_prmS1x + 0.5*deltaT_r_prmS1x*w2 - 2.0*deltaT_prmS1x*r) + invLamb*invdeltaT*w2_prmS1x*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmS1x*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmS1x*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmS1x*r
    nur_prmS1y = invLamb*invdeltaT*w2*(0.5*deltaT_r*w2_prmS1y + 0.5*deltaT_r_prmS1y*w2 - 2.0*deltaT_prmS1y*r) + invLamb*invdeltaT*w2_prmS1y*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmS1y*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmS1y*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmS1y*r
    nur_prmS1z = invLamb*invdeltaT*w2*(0.5*deltaT_r*w2_prmS1z + 0.5*deltaT_r_prmS1z*w2 - 2.0*deltaT_prmS1z*r) + invLamb*invdeltaT*w2_prmS1z*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmS1z*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmS1z*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmS1z*r
    nur_prmS2x = invLamb*invdeltaT*w2*(0.5*deltaT_r*w2_prmS2x + 0.5*deltaT_r_prmS2x*w2 - 2.0*deltaT_prmS2x*r) + invLamb*invdeltaT*w2_prmS2x*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmS2x*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmS2x*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmS2x*r
    nur_prmS2y = invLamb*invdeltaT*w2*(0.5*deltaT_r*w2_prmS2y + 0.5*deltaT_r_prmS2y*w2 - 2.0*deltaT_prmS2y*r) + invLamb*invdeltaT*w2_prmS2y*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmS2y*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmS2y*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmS2y*r
    nur_prmS2z = invLamb*invdeltaT*w2*(0.5*deltaT_r*w2_prmS2z + 0.5*deltaT_r_prmS2z*w2 - 2.0*deltaT_prmS2z*r) + invLamb*invdeltaT*w2_prmS2z*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb*invdeltaT_prmS2z*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invLamb_prmS2z*invdeltaT*w2*(-2.0*deltaT*r + 0.5*deltaT_r*w2) + invrho2_prmS2z*r
    mur_prmx1 = invrho2*r_prmx1 + invrho2_prmx1*r - invsqrtdeltaR_prmx1
    mur_prmx2 = invrho2*r_prmx2 + invrho2_prmx2*r - invsqrtdeltaR_prmx2
    mur_prmx3 = invrho2*r_prmx3 + invrho2_prmx3*r - invsqrtdeltaR_prmx3
    mur_prmp1 = invrho2_prmp1*r - invsqrtdeltaR_prmp1
    mur_prmp2 = invrho2_prmp2*r - invsqrtdeltaR_prmp2
    mur_prmp3 = invrho2_prmp3*r - invsqrtdeltaR_prmp3
    mur_prmS1x = invrho2_prmS1x*r - invsqrtdeltaR_prmS1x
    mur_prmS1y = invrho2_prmS1y*r - invsqrtdeltaR_prmS1y
    mur_prmS1z = invrho2_prmS1z*r - invsqrtdeltaR_prmS1z
    mur_prmS2x = invrho2_prmS2x*r - invsqrtdeltaR_prmS2x
    mur_prmS2y = invrho2_prmS2y*r - invsqrtdeltaR_prmS2y
    mur_prmS2z = invrho2_prmS2z*r - invsqrtdeltaR_prmS2z
    wcos_prmx1 = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmx1 - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmx1*ww - 2.0*a2*costheta*deltaT_prmx1*invLamb**2*ww - 2.0*a2*costheta_prmx1*deltaT*invLamb**2*ww
    wcos_prmx2 = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmx2 - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmx2*ww - 2.0*a2*costheta*deltaT_prmx2*invLamb**2*ww - 2.0*a2*costheta_prmx2*deltaT*invLamb**2*ww
    wcos_prmx3 = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmx3 - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmx3*ww - 2.0*a2*costheta*deltaT_prmx3*invLamb**2*ww - 2.0*a2*costheta_prmx3*deltaT*invLamb**2*ww
    wcos_prmp1 = -4.0*a2*costheta*deltaT*invLamb*invLamb_prmp1*ww - 2.0*a2*costheta*deltaT_prmp1*invLamb**2*ww
    wcos_prmp2 = -4.0*a2*costheta*deltaT*invLamb*invLamb_prmp2*ww - 2.0*a2*costheta*deltaT_prmp2*invLamb**2*ww
    wcos_prmp3 = -4.0*a2*costheta*deltaT*invLamb*invLamb_prmp3*ww - 2.0*a2*costheta*deltaT_prmp3*invLamb**2*ww
    wcos_prmS1x = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmS1x - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmS1x*ww - 2.0*a2*costheta*deltaT_prmS1x*invLamb**2*ww - 2.0*a2*costheta_prmS1x*deltaT*invLamb**2*ww - 2.0*a2_prmS1x*costheta*deltaT*invLamb**2*ww
    wcos_prmS1y = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmS1y - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmS1y*ww - 2.0*a2*costheta*deltaT_prmS1y*invLamb**2*ww - 2.0*a2*costheta_prmS1y*deltaT*invLamb**2*ww - 2.0*a2_prmS1y*costheta*deltaT*invLamb**2*ww
    wcos_prmS1z = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmS1z - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmS1z*ww - 2.0*a2*costheta*deltaT_prmS1z*invLamb**2*ww - 2.0*a2*costheta_prmS1z*deltaT*invLamb**2*ww - 2.0*a2_prmS1z*costheta*deltaT*invLamb**2*ww
    wcos_prmS2x = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmS2x - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmS2x*ww - 2.0*a2*costheta*deltaT_prmS2x*invLamb**2*ww - 2.0*a2*costheta_prmS2x*deltaT*invLamb**2*ww - 2.0*a2_prmS2x*costheta*deltaT*invLamb**2*ww
    wcos_prmS2y = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmS2y - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmS2y*ww - 2.0*a2*costheta*deltaT_prmS2y*invLamb**2*ww - 2.0*a2*costheta_prmS2y*deltaT*invLamb**2*ww - 2.0*a2_prmS2y*costheta*deltaT*invLamb**2*ww
    wcos_prmS2z = -2.0*a2*costheta*deltaT*invLamb**2*ww_prmS2z - 4.0*a2*costheta*deltaT*invLamb*invLamb_prmS2z*ww - 2.0*a2*costheta*deltaT_prmS2z*invLamb**2*ww - 2.0*a2*costheta_prmS2z*deltaT*invLamb**2*ww - 2.0*a2_prmS2z*costheta*deltaT*invLamb**2*ww
    nucos_prmx1 = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmx1 + w2_prmx1) + a2*costheta*invLamb*invrho2*w2_prmx1*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmx1*w2*(-deltaT + w2) + a2*costheta*invLamb_prmx1*invrho2*w2*(-deltaT + w2) + a2*costheta_prmx1*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmx2 = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmx2 + w2_prmx2) + a2*costheta*invLamb*invrho2*w2_prmx2*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmx2*w2*(-deltaT + w2) + a2*costheta*invLamb_prmx2*invrho2*w2*(-deltaT + w2) + a2*costheta_prmx2*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmx3 = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmx3 + w2_prmx3) + a2*costheta*invLamb*invrho2*w2_prmx3*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmx3*w2*(-deltaT + w2) + a2*costheta*invLamb_prmx3*invrho2*w2*(-deltaT + w2) + a2*costheta_prmx3*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmp1 = -a2*costheta*deltaT_prmp1*invLamb*invrho2*w2 + a2*costheta*invLamb*invrho2_prmp1*w2*(-deltaT + w2) + a2*costheta*invLamb_prmp1*invrho2*w2*(-deltaT + w2)
    nucos_prmp2 = -a2*costheta*deltaT_prmp2*invLamb*invrho2*w2 + a2*costheta*invLamb*invrho2_prmp2*w2*(-deltaT + w2) + a2*costheta*invLamb_prmp2*invrho2*w2*(-deltaT + w2)
    nucos_prmp3 = -a2*costheta*deltaT_prmp3*invLamb*invrho2*w2 + a2*costheta*invLamb*invrho2_prmp3*w2*(-deltaT + w2) + a2*costheta*invLamb_prmp3*invrho2*w2*(-deltaT + w2)
    nucos_prmS1x = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmS1x + w2_prmS1x) + a2*costheta*invLamb*invrho2*w2_prmS1x*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmS1x*w2*(-deltaT + w2) + a2*costheta*invLamb_prmS1x*invrho2*w2*(-deltaT + w2) + a2*costheta_prmS1x*invLamb*invrho2*w2*(-deltaT + w2) + a2_prmS1x*costheta*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmS1y = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmS1y + w2_prmS1y) + a2*costheta*invLamb*invrho2*w2_prmS1y*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmS1y*w2*(-deltaT + w2) + a2*costheta*invLamb_prmS1y*invrho2*w2*(-deltaT + w2) + a2*costheta_prmS1y*invLamb*invrho2*w2*(-deltaT + w2) + a2_prmS1y*costheta*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmS1z = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmS1z + w2_prmS1z) + a2*costheta*invLamb*invrho2*w2_prmS1z*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmS1z*w2*(-deltaT + w2) + a2*costheta*invLamb_prmS1z*invrho2*w2*(-deltaT + w2) + a2*costheta_prmS1z*invLamb*invrho2*w2*(-deltaT + w2) + a2_prmS1z*costheta*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmS2x = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmS2x + w2_prmS2x) + a2*costheta*invLamb*invrho2*w2_prmS2x*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmS2x*w2*(-deltaT + w2) + a2*costheta*invLamb_prmS2x*invrho2*w2*(-deltaT + w2) + a2*costheta_prmS2x*invLamb*invrho2*w2*(-deltaT + w2) + a2_prmS2x*costheta*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmS2y = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmS2y + w2_prmS2y) + a2*costheta*invLamb*invrho2*w2_prmS2y*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmS2y*w2*(-deltaT + w2) + a2*costheta*invLamb_prmS2y*invrho2*w2*(-deltaT + w2) + a2*costheta_prmS2y*invLamb*invrho2*w2*(-deltaT + w2) + a2_prmS2y*costheta*invLamb*invrho2*w2*(-deltaT + w2)
    nucos_prmS2z = a2*costheta*invLamb*invrho2*w2*(-deltaT_prmS2z + w2_prmS2z) + a2*costheta*invLamb*invrho2*w2_prmS2z*(-deltaT + w2) + a2*costheta*invLamb*invrho2_prmS2z*w2*(-deltaT + w2) + a2*costheta*invLamb_prmS2z*invrho2*w2*(-deltaT + w2) + a2*costheta_prmS2z*invLamb*invrho2*w2*(-deltaT + w2) + a2_prmS2z*costheta*invLamb*invrho2*w2*(-deltaT + w2)
    mucos_prmx1 = a2*costheta*invrho2_prmx1 + a2*costheta_prmx1*invrho2
    mucos_prmx2 = a2*costheta*invrho2_prmx2 + a2*costheta_prmx2*invrho2
    mucos_prmx3 = a2*costheta*invrho2_prmx3 + a2*costheta_prmx3*invrho2
    mucos_prmp1 = a2*costheta*invrho2_prmp1
    mucos_prmp2 = a2*costheta*invrho2_prmp2
    mucos_prmp3 = a2*costheta*invrho2_prmp3
    mucos_prmS1x = a2*costheta*invrho2_prmS1x + a2*costheta_prmS1x*invrho2 + a2_prmS1x*costheta*invrho2
    mucos_prmS1y = a2*costheta*invrho2_prmS1y + a2*costheta_prmS1y*invrho2 + a2_prmS1y*costheta*invrho2
    mucos_prmS1z = a2*costheta*invrho2_prmS1z + a2*costheta_prmS1z*invrho2 + a2_prmS1z*costheta*invrho2
    mucos_prmS2x = a2*costheta*invrho2_prmS2x + a2*costheta_prmS2x*invrho2 + a2_prmS2x*costheta*invrho2
    mucos_prmS2y = a2*costheta*invrho2_prmS2y + a2*costheta_prmS2y*invrho2 + a2_prmS2y*costheta*invrho2
    mucos_prmS2z = a2*costheta*invrho2_prmS2z + a2*costheta_prmS2z*invrho2 + a2_prmS2z*costheta*invrho2
    Q_prmx1 = 2*deltaR*invrho2*pn*pn_prmx1 + deltaR*invrho2_prmx1*pn**2 + deltaR_prmx1*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmx1 + 2*invLamb*invxi2*pxir*pxir_prmx1*rho2 + invLamb*invxi2_prmx1*pxir**2*rho2 + invLamb_prmx1*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmx1 + invrho2*invxi2_prmx1*pvr**2 + invrho2_prmx1*invxi2*pvr**2
    Q_prmx2 = 2*deltaR*invrho2*pn*pn_prmx2 + deltaR*invrho2_prmx2*pn**2 + deltaR_prmx2*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmx2 + 2*invLamb*invxi2*pxir*pxir_prmx2*rho2 + invLamb*invxi2_prmx2*pxir**2*rho2 + invLamb_prmx2*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmx2 + invrho2*invxi2_prmx2*pvr**2 + invrho2_prmx2*invxi2*pvr**2
    Q_prmx3 = 2*deltaR*invrho2*pn*pn_prmx3 + deltaR*invrho2_prmx3*pn**2 + deltaR_prmx3*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmx3 + 2*invLamb*invxi2*pxir*pxir_prmx3*rho2 + invLamb*invxi2_prmx3*pxir**2*rho2 + invLamb_prmx3*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmx3 + invrho2*invxi2_prmx3*pvr**2 + invrho2_prmx3*invxi2*pvr**2
    Q_prmp1 = 2*deltaR*invrho2*pn*pn_prmp1 + deltaR*invrho2_prmp1*pn**2 + deltaR_prmp1*invrho2*pn**2 + 2*invLamb*invxi2*pxir*pxir_prmp1*rho2 + invLamb*invxi2_prmp1*pxir**2*rho2 + invLamb_prmp1*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmp1 + invrho2*invxi2_prmp1*pvr**2 + invrho2_prmp1*invxi2*pvr**2
    Q_prmp2 = 2*deltaR*invrho2*pn*pn_prmp2 + deltaR*invrho2_prmp2*pn**2 + deltaR_prmp2*invrho2*pn**2 + 2*invLamb*invxi2*pxir*pxir_prmp2*rho2 + invLamb*invxi2_prmp2*pxir**2*rho2 + invLamb_prmp2*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmp2 + invrho2*invxi2_prmp2*pvr**2 + invrho2_prmp2*invxi2*pvr**2
    Q_prmp3 = 2*deltaR*invrho2*pn*pn_prmp3 + deltaR*invrho2_prmp3*pn**2 + deltaR_prmp3*invrho2*pn**2 + 2*invLamb*invxi2*pxir*pxir_prmp3*rho2 + invLamb*invxi2_prmp3*pxir**2*rho2 + invLamb_prmp3*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmp3 + invrho2*invxi2_prmp3*pvr**2 + invrho2_prmp3*invxi2*pvr**2
    Q_prmS1x = 2*deltaR*invrho2*pn*pn_prmS1x + deltaR*invrho2_prmS1x*pn**2 + deltaR_prmS1x*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmS1x + 2*invLamb*invxi2*pxir*pxir_prmS1x*rho2 + invLamb*invxi2_prmS1x*pxir**2*rho2 + invLamb_prmS1x*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmS1x + invrho2*invxi2_prmS1x*pvr**2 + invrho2_prmS1x*invxi2*pvr**2
    Q_prmS1y = 2*deltaR*invrho2*pn*pn_prmS1y + deltaR*invrho2_prmS1y*pn**2 + deltaR_prmS1y*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmS1y + 2*invLamb*invxi2*pxir*pxir_prmS1y*rho2 + invLamb*invxi2_prmS1y*pxir**2*rho2 + invLamb_prmS1y*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmS1y + invrho2*invxi2_prmS1y*pvr**2 + invrho2_prmS1y*invxi2*pvr**2
    Q_prmS1z = 2*deltaR*invrho2*pn*pn_prmS1z + deltaR*invrho2_prmS1z*pn**2 + deltaR_prmS1z*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmS1z + 2*invLamb*invxi2*pxir*pxir_prmS1z*rho2 + invLamb*invxi2_prmS1z*pxir**2*rho2 + invLamb_prmS1z*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmS1z + invrho2*invxi2_prmS1z*pvr**2 + invrho2_prmS1z*invxi2*pvr**2
    Q_prmS2x = 2*deltaR*invrho2*pn*pn_prmS2x + deltaR*invrho2_prmS2x*pn**2 + deltaR_prmS2x*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmS2x + 2*invLamb*invxi2*pxir*pxir_prmS2x*rho2 + invLamb*invxi2_prmS2x*pxir**2*rho2 + invLamb_prmS2x*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmS2x + invrho2*invxi2_prmS2x*pvr**2 + invrho2_prmS2x*invxi2*pvr**2
    Q_prmS2y = 2*deltaR*invrho2*pn*pn_prmS2y + deltaR*invrho2_prmS2y*pn**2 + deltaR_prmS2y*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmS2y + 2*invLamb*invxi2*pxir*pxir_prmS2y*rho2 + invLamb*invxi2_prmS2y*pxir**2*rho2 + invLamb_prmS2y*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmS2y + invrho2*invxi2_prmS2y*pvr**2 + invrho2_prmS2y*invxi2*pvr**2
    Q_prmS2z = 2*deltaR*invrho2*pn*pn_prmS2z + deltaR*invrho2_prmS2z*pn**2 + deltaR_prmS2z*invrho2*pn**2 + invLamb*invxi2*pxir**2*rho2_prmS2z + 2*invLamb*invxi2*pxir*pxir_prmS2z*rho2 + invLamb*invxi2_prmS2z*pxir**2*rho2 + invLamb_prmS2z*invxi2*pxir**2*rho2 + 2*invrho2*invxi2*pvr*pvr_prmS2z + invrho2*invxi2_prmS2z*pvr**2 + invrho2_prmS2z*invxi2*pvr**2
    pn2_prmx1 = 2*deltaR*invrho2*pr*pr_prmx1 + deltaR*invrho2_prmx1*pr**2 + deltaR_prmx1*invrho2*pr**2
    pn2_prmx2 = 2*deltaR*invrho2*pr*pr_prmx2 + deltaR*invrho2_prmx2*pr**2 + deltaR_prmx2*invrho2*pr**2
    pn2_prmx3 = 2*deltaR*invrho2*pr*pr_prmx3 + deltaR*invrho2_prmx3*pr**2 + deltaR_prmx3*invrho2*pr**2
    pn2_prmp1 = 2*deltaR*invrho2*pr*pr_prmp1 + deltaR*invrho2_prmp1*pr**2 + deltaR_prmp1*invrho2*pr**2
    pn2_prmp2 = 2*deltaR*invrho2*pr*pr_prmp2 + deltaR*invrho2_prmp2*pr**2 + deltaR_prmp2*invrho2*pr**2
    pn2_prmp3 = 2*deltaR*invrho2*pr*pr_prmp3 + deltaR*invrho2_prmp3*pr**2 + deltaR_prmp3*invrho2*pr**2
    pn2_prmS1x = 2*deltaR*invrho2*pr*pr_prmS1x + deltaR*invrho2_prmS1x*pr**2 + deltaR_prmS1x*invrho2*pr**2
    pn2_prmS1y = 2*deltaR*invrho2*pr*pr_prmS1y + deltaR*invrho2_prmS1y*pr**2 + deltaR_prmS1y*invrho2*pr**2
    pn2_prmS1z = 2*deltaR*invrho2*pr*pr_prmS1z + deltaR*invrho2_prmS1z*pr**2 + deltaR_prmS1z*invrho2*pr**2
    pn2_prmS2x = 2*deltaR*invrho2*pr*pr_prmS2x + deltaR*invrho2_prmS2x*pr**2 + deltaR_prmS2x*invrho2*pr**2
    pn2_prmS2y = 2*deltaR*invrho2*pr*pr_prmS2y + deltaR*invrho2_prmS2y*pr**2 + deltaR_prmS2y*invrho2*pr**2
    pn2_prmS2z = 2*deltaR*invrho2*pr*pr_prmS2z + deltaR*invrho2_prmS2z*pr**2 + deltaR_prmS2z*invrho2*pr**2
    pp_prmx1 = Q_prmx1
    pp_prmx2 = Q_prmx2
    pp_prmx3 = Q_prmx3
    pp_prmp1 = Q_prmp1
    pp_prmp2 = Q_prmp2
    pp_prmp3 = Q_prmp3
    pp_prmS1x = Q_prmS1x
    pp_prmS1y = Q_prmS1y
    pp_prmS1z = Q_prmS1z
    pp_prmS2x = Q_prmS2x
    pp_prmS2y = Q_prmS2y
    pp_prmS2z = Q_prmS2z
    sMultiplier1_prmx1 = eta*u2*(-eta*(0.0138888888888889*r*(324.0*pn2_prmx1 - 120.0*pp_prmx1 + r*(-720.0*pn2*pn2_prmx1 + 126.0*pn2*pp_prmx1 + 126.0*pn2_prmx1*pp + 6.0*pp*pp_prmx1) + r_prmx1*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2)) + 0.0138888888888889*r_prmx1*(324.0*pn2 - 120.0*pp + r*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2))) - r*(-3.91666666666667*pn2_prmx1 + 2.86111111111111*pp_prmx1 + 0.0138888888888889*r*(-96.0*pn2*pp_prmx1 - 96.0*pn2_prmx1*pp + 46.0*pp*pp_prmx1) + 0.0138888888888889*r_prmx1*(-96.0*pn2*pp + 23.0*pp**2)) - r_prmx1*(-3.91666666666667*pn2 + 2.86111111111111*pp + 0.0138888888888889*r*(-96.0*pn2*pp + 23.0*pp**2))) + eta*u2_prmx1*(eta*(-0.0138888888888889*r*(324.0*pn2 - 120.0*pp + r*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2)) - 0.750000000000001) - r*(-3.91666666666667*pn2 + 2.86111111111111*pp + 0.0138888888888889*r*(-96.0*pn2*pp + 23.0*pp**2)) + 9.80555555555556)
    sMultiplier1_prmx2 = eta*u2*(-eta*(0.0138888888888889*r*(324.0*pn2_prmx2 - 120.0*pp_prmx2 + r*(-720.0*pn2*pn2_prmx2 + 126.0*pn2*pp_prmx2 + 126.0*pn2_prmx2*pp + 6.0*pp*pp_prmx2) + r_prmx2*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2)) + 0.0138888888888889*r_prmx2*(324.0*pn2 - 120.0*pp + r*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2))) - r*(-3.91666666666667*pn2_prmx2 + 2.86111111111111*pp_prmx2 + 0.0138888888888889*r*(-96.0*pn2*pp_prmx2 - 96.0*pn2_prmx2*pp + 46.0*pp*pp_prmx2) + 0.0138888888888889*r_prmx2*(-96.0*pn2*pp + 23.0*pp**2)) - r_prmx2*(-3.91666666666667*pn2 + 2.86111111111111*pp + 0.0138888888888889*r*(-96.0*pn2*pp + 23.0*pp**2))) + eta*u2_prmx2*(eta*(-0.0138888888888889*r*(324.0*pn2 - 120.0*pp + r*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2)) - 0.750000000000001) - r*(-3.91666666666667*pn2 + 2.86111111111111*pp + 0.0138888888888889*r*(-96.0*pn2*pp + 23.0*pp**2)) + 9.80555555555556)
    sMultiplier1_prmx3 = eta*u2*(-eta*(0.0138888888888889*r*(324.0*pn2_prmx3 - 120.0*pp_prmx3 + r*(-720.0*pn2*pn2_prmx3 + 126.0*pn2*pp_prmx3 + 126.0*pn2_prmx3*pp + 6.0*pp*pp_prmx3) + r_prmx3*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2)) + 0.0138888888888889*r_prmx3*(324.0*pn2 - 120.0*pp + r*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2))) - r*(-3.91666666666667*pn2_prmx3 + 2.86111111111111*pp_prmx3 + 0.0138888888888889*r*(-96.0*pn2*pp_prmx3 - 96.0*pn2_prmx3*pp + 46.0*pp*pp_prmx3) + 0.0138888888888889*r_prmx3*(-96.0*pn2*pp + 23.0*pp**2)) - r_prmx3*(-3.91666666666667*pn2 + 2.86111111111111*pp + 0.0138888888888889*r*(-96.0*pn2*pp + 23.0*pp**2))) + eta*u2_prmx3*(eta*(-0.0138888888888889*r*(324.0*pn2 - 120.0*pp + r*(-360.0*pn2**2 + 126.0*pn2*pp + 3.0*pp**2)) - 0.750000000000001) - r*(-3.91666666666667*pn2 + 2.86111111111111*pp + 0.0138888888888889*r*(-96.0*pn2*pp + 23.0*pp**2)) + 9.80555555555556)
    sMultiplier1_prmp1 = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmp1 - 120.0*pp_prmp1 + r*(-720.0*pn2*pn2_prmp1 + 126.0*pn2*pp_prmp1 + 126.0*pn2_prmp1*pp + 6.0*pp*pp_prmp1)) - r*(-3.91666666666667*pn2_prmp1 + 2.86111111111111*pp_prmp1 + 0.0138888888888889*r*(-96.0*pn2*pp_prmp1 - 96.0*pn2_prmp1*pp + 46.0*pp*pp_prmp1)))
    sMultiplier1_prmp2 = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmp2 - 120.0*pp_prmp2 + r*(-720.0*pn2*pn2_prmp2 + 126.0*pn2*pp_prmp2 + 126.0*pn2_prmp2*pp + 6.0*pp*pp_prmp2)) - r*(-3.91666666666667*pn2_prmp2 + 2.86111111111111*pp_prmp2 + 0.0138888888888889*r*(-96.0*pn2*pp_prmp2 - 96.0*pn2_prmp2*pp + 46.0*pp*pp_prmp2)))
    sMultiplier1_prmp3 = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmp3 - 120.0*pp_prmp3 + r*(-720.0*pn2*pn2_prmp3 + 126.0*pn2*pp_prmp3 + 126.0*pn2_prmp3*pp + 6.0*pp*pp_prmp3)) - r*(-3.91666666666667*pn2_prmp3 + 2.86111111111111*pp_prmp3 + 0.0138888888888889*r*(-96.0*pn2*pp_prmp3 - 96.0*pn2_prmp3*pp + 46.0*pp*pp_prmp3)))
    sMultiplier1_prmS1x = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmS1x - 120.0*pp_prmS1x + r*(-720.0*pn2*pn2_prmS1x + 126.0*pn2*pp_prmS1x + 126.0*pn2_prmS1x*pp + 6.0*pp*pp_prmS1x)) - r*(-3.91666666666667*pn2_prmS1x + 2.86111111111111*pp_prmS1x + 0.0138888888888889*r*(-96.0*pn2*pp_prmS1x - 96.0*pn2_prmS1x*pp + 46.0*pp*pp_prmS1x)))
    sMultiplier1_prmS1y = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmS1y - 120.0*pp_prmS1y + r*(-720.0*pn2*pn2_prmS1y + 126.0*pn2*pp_prmS1y + 126.0*pn2_prmS1y*pp + 6.0*pp*pp_prmS1y)) - r*(-3.91666666666667*pn2_prmS1y + 2.86111111111111*pp_prmS1y + 0.0138888888888889*r*(-96.0*pn2*pp_prmS1y - 96.0*pn2_prmS1y*pp + 46.0*pp*pp_prmS1y)))
    sMultiplier1_prmS1z = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmS1z - 120.0*pp_prmS1z + r*(-720.0*pn2*pn2_prmS1z + 126.0*pn2*pp_prmS1z + 126.0*pn2_prmS1z*pp + 6.0*pp*pp_prmS1z)) - r*(-3.91666666666667*pn2_prmS1z + 2.86111111111111*pp_prmS1z + 0.0138888888888889*r*(-96.0*pn2*pp_prmS1z - 96.0*pn2_prmS1z*pp + 46.0*pp*pp_prmS1z)))
    sMultiplier1_prmS2x = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmS2x - 120.0*pp_prmS2x + r*(-720.0*pn2*pn2_prmS2x + 126.0*pn2*pp_prmS2x + 126.0*pn2_prmS2x*pp + 6.0*pp*pp_prmS2x)) - r*(-3.91666666666667*pn2_prmS2x + 2.86111111111111*pp_prmS2x + 0.0138888888888889*r*(-96.0*pn2*pp_prmS2x - 96.0*pn2_prmS2x*pp + 46.0*pp*pp_prmS2x)))
    sMultiplier1_prmS2y = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmS2y - 120.0*pp_prmS2y + r*(-720.0*pn2*pn2_prmS2y + 126.0*pn2*pp_prmS2y + 126.0*pn2_prmS2y*pp + 6.0*pp*pp_prmS2y)) - r*(-3.91666666666667*pn2_prmS2y + 2.86111111111111*pp_prmS2y + 0.0138888888888889*r*(-96.0*pn2*pp_prmS2y - 96.0*pn2_prmS2y*pp + 46.0*pp*pp_prmS2y)))
    sMultiplier1_prmS2z = eta*u2*(-0.0138888888888889*eta*r*(324.0*pn2_prmS2z - 120.0*pp_prmS2z + r*(-720.0*pn2*pn2_prmS2z + 126.0*pn2*pp_prmS2z + 126.0*pn2_prmS2z*pp + 6.0*pp*pp_prmS2z)) - r*(-3.91666666666667*pn2_prmS2z + 2.86111111111111*pp_prmS2z + 0.0138888888888889*r*(-96.0*pn2*pp_prmS2z - 96.0*pn2_prmS2z*pp + 46.0*pp*pp_prmS2z)))
    sMultiplier2_prmx1 = eta*(eta*(r*(-6.125*pn2*u2_prmx1 - 6.125*pn2_prmx1*u2 + 1.41666666666667*pp*u2_prmx1 + 1.41666666666667*pp_prmx1*u2 + r*(5.625*pn2**2*u2_prmx1 + 11.25*pn2*pn2_prmx1*u2 - 1.625*pn2*pp*u2_prmx1 - 1.625*pn2*pp_prmx1*u2 - 1.625*pn2_prmx1*pp*u2) + r_prmx1*(5.625*pn2**2*u2 - 1.625*pn2*pp*u2)) + r_prmx1*(-6.125*pn2*u2 + 1.41666666666667*pp*u2 + r*(5.625*pn2**2*u2 - 1.625*pn2*pp*u2)) - 2.33333333333333*u2_prmx1) + r*(-0.666666666666667*pn2*u2_prmx1 - 0.666666666666667*pn2_prmx1*u2 - 3.02777777777778*pp*u2_prmx1 - 3.02777777777778*pp_prmx1*u2 + r*(0.25*pn2*pp*u2_prmx1 + 0.25*pn2*pp_prmx1*u2 + 0.25*pn2_prmx1*pp*u2 - 0.3125*pp**2*u2_prmx1 - 0.625*pp*pp_prmx1*u2) + r_prmx1*(0.25*pn2*pp*u2 - 0.3125*pp**2*u2)) + r_prmx1*(-0.666666666666667*pn2*u2 - 3.02777777777778*pp*u2 + r*(0.25*pn2*pp*u2 - 0.3125*pp**2*u2)) - 6.22222222222222*u2_prmx1)
    sMultiplier2_prmx2 = eta*(eta*(r*(-6.125*pn2*u2_prmx2 - 6.125*pn2_prmx2*u2 + 1.41666666666667*pp*u2_prmx2 + 1.41666666666667*pp_prmx2*u2 + r*(5.625*pn2**2*u2_prmx2 + 11.25*pn2*pn2_prmx2*u2 - 1.625*pn2*pp*u2_prmx2 - 1.625*pn2*pp_prmx2*u2 - 1.625*pn2_prmx2*pp*u2) + r_prmx2*(5.625*pn2**2*u2 - 1.625*pn2*pp*u2)) + r_prmx2*(-6.125*pn2*u2 + 1.41666666666667*pp*u2 + r*(5.625*pn2**2*u2 - 1.625*pn2*pp*u2)) - 2.33333333333333*u2_prmx2) + r*(-0.666666666666667*pn2*u2_prmx2 - 0.666666666666667*pn2_prmx2*u2 - 3.02777777777778*pp*u2_prmx2 - 3.02777777777778*pp_prmx2*u2 + r*(0.25*pn2*pp*u2_prmx2 + 0.25*pn2*pp_prmx2*u2 + 0.25*pn2_prmx2*pp*u2 - 0.3125*pp**2*u2_prmx2 - 0.625*pp*pp_prmx2*u2) + r_prmx2*(0.25*pn2*pp*u2 - 0.3125*pp**2*u2)) + r_prmx2*(-0.666666666666667*pn2*u2 - 3.02777777777778*pp*u2 + r*(0.25*pn2*pp*u2 - 0.3125*pp**2*u2)) - 6.22222222222222*u2_prmx2)
    sMultiplier2_prmx3 = eta*(eta*(r*(-6.125*pn2*u2_prmx3 - 6.125*pn2_prmx3*u2 + 1.41666666666667*pp*u2_prmx3 + 1.41666666666667*pp_prmx3*u2 + r*(5.625*pn2**2*u2_prmx3 + 11.25*pn2*pn2_prmx3*u2 - 1.625*pn2*pp*u2_prmx3 - 1.625*pn2*pp_prmx3*u2 - 1.625*pn2_prmx3*pp*u2) + r_prmx3*(5.625*pn2**2*u2 - 1.625*pn2*pp*u2)) + r_prmx3*(-6.125*pn2*u2 + 1.41666666666667*pp*u2 + r*(5.625*pn2**2*u2 - 1.625*pn2*pp*u2)) - 2.33333333333333*u2_prmx3) + r*(-0.666666666666667*pn2*u2_prmx3 - 0.666666666666667*pn2_prmx3*u2 - 3.02777777777778*pp*u2_prmx3 - 3.02777777777778*pp_prmx3*u2 + r*(0.25*pn2*pp*u2_prmx3 + 0.25*pn2*pp_prmx3*u2 + 0.25*pn2_prmx3*pp*u2 - 0.3125*pp**2*u2_prmx3 - 0.625*pp*pp_prmx3*u2) + r_prmx3*(0.25*pn2*pp*u2 - 0.3125*pp**2*u2)) + r_prmx3*(-0.666666666666667*pn2*u2 - 3.02777777777778*pp*u2 + r*(0.25*pn2*pp*u2 - 0.3125*pp**2*u2)) - 6.22222222222222*u2_prmx3)
    sMultiplier2_prmp1 = eta*(eta*r*(-6.125*pn2_prmp1*u2 + 1.41666666666667*pp_prmp1*u2 + r*(11.25*pn2*pn2_prmp1*u2 - 1.625*pn2*pp_prmp1*u2 - 1.625*pn2_prmp1*pp*u2)) + r*(-0.666666666666667*pn2_prmp1*u2 - 3.02777777777778*pp_prmp1*u2 + r*(0.25*pn2*pp_prmp1*u2 + 0.25*pn2_prmp1*pp*u2 - 0.625*pp*pp_prmp1*u2)))
    sMultiplier2_prmp2 = eta*(eta*r*(-6.125*pn2_prmp2*u2 + 1.41666666666667*pp_prmp2*u2 + r*(11.25*pn2*pn2_prmp2*u2 - 1.625*pn2*pp_prmp2*u2 - 1.625*pn2_prmp2*pp*u2)) + r*(-0.666666666666667*pn2_prmp2*u2 - 3.02777777777778*pp_prmp2*u2 + r*(0.25*pn2*pp_prmp2*u2 + 0.25*pn2_prmp2*pp*u2 - 0.625*pp*pp_prmp2*u2)))
    sMultiplier2_prmp3 = eta*(eta*r*(-6.125*pn2_prmp3*u2 + 1.41666666666667*pp_prmp3*u2 + r*(11.25*pn2*pn2_prmp3*u2 - 1.625*pn2*pp_prmp3*u2 - 1.625*pn2_prmp3*pp*u2)) + r*(-0.666666666666667*pn2_prmp3*u2 - 3.02777777777778*pp_prmp3*u2 + r*(0.25*pn2*pp_prmp3*u2 + 0.25*pn2_prmp3*pp*u2 - 0.625*pp*pp_prmp3*u2)))
    sMultiplier2_prmS1x = eta*(eta*r*(-6.125*pn2_prmS1x*u2 + 1.41666666666667*pp_prmS1x*u2 + r*(11.25*pn2*pn2_prmS1x*u2 - 1.625*pn2*pp_prmS1x*u2 - 1.625*pn2_prmS1x*pp*u2)) + r*(-0.666666666666667*pn2_prmS1x*u2 - 3.02777777777778*pp_prmS1x*u2 + r*(0.25*pn2*pp_prmS1x*u2 + 0.25*pn2_prmS1x*pp*u2 - 0.625*pp*pp_prmS1x*u2)))
    sMultiplier2_prmS1y = eta*(eta*r*(-6.125*pn2_prmS1y*u2 + 1.41666666666667*pp_prmS1y*u2 + r*(11.25*pn2*pn2_prmS1y*u2 - 1.625*pn2*pp_prmS1y*u2 - 1.625*pn2_prmS1y*pp*u2)) + r*(-0.666666666666667*pn2_prmS1y*u2 - 3.02777777777778*pp_prmS1y*u2 + r*(0.25*pn2*pp_prmS1y*u2 + 0.25*pn2_prmS1y*pp*u2 - 0.625*pp*pp_prmS1y*u2)))
    sMultiplier2_prmS1z = eta*(eta*r*(-6.125*pn2_prmS1z*u2 + 1.41666666666667*pp_prmS1z*u2 + r*(11.25*pn2*pn2_prmS1z*u2 - 1.625*pn2*pp_prmS1z*u2 - 1.625*pn2_prmS1z*pp*u2)) + r*(-0.666666666666667*pn2_prmS1z*u2 - 3.02777777777778*pp_prmS1z*u2 + r*(0.25*pn2*pp_prmS1z*u2 + 0.25*pn2_prmS1z*pp*u2 - 0.625*pp*pp_prmS1z*u2)))
    sMultiplier2_prmS2x = eta*(eta*r*(-6.125*pn2_prmS2x*u2 + 1.41666666666667*pp_prmS2x*u2 + r*(11.25*pn2*pn2_prmS2x*u2 - 1.625*pn2*pp_prmS2x*u2 - 1.625*pn2_prmS2x*pp*u2)) + r*(-0.666666666666667*pn2_prmS2x*u2 - 3.02777777777778*pp_prmS2x*u2 + r*(0.25*pn2*pp_prmS2x*u2 + 0.25*pn2_prmS2x*pp*u2 - 0.625*pp*pp_prmS2x*u2)))
    sMultiplier2_prmS2y = eta*(eta*r*(-6.125*pn2_prmS2y*u2 + 1.41666666666667*pp_prmS2y*u2 + r*(11.25*pn2*pn2_prmS2y*u2 - 1.625*pn2*pp_prmS2y*u2 - 1.625*pn2_prmS2y*pp*u2)) + r*(-0.666666666666667*pn2_prmS2y*u2 - 3.02777777777778*pp_prmS2y*u2 + r*(0.25*pn2*pp_prmS2y*u2 + 0.25*pn2_prmS2y*pp*u2 - 0.625*pp*pp_prmS2y*u2)))
    sMultiplier2_prmS2z = eta*(eta*r*(-6.125*pn2_prmS2z*u2 + 1.41666666666667*pp_prmS2z*u2 + r*(11.25*pn2*pn2_prmS2z*u2 - 1.625*pn2*pp_prmS2z*u2 - 1.625*pn2_prmS2z*pp*u2)) + r*(-0.666666666666667*pn2_prmS2z*u2 - 3.02777777777778*pp_prmS2z*u2 + r*(0.25*pn2*pp_prmS2z*u2 + 0.25*pn2_prmS2z*pp*u2 - 0.625*pp*pp_prmS2z*u2)))
    chi2_prmx1 = 2*chi*chi_prmx1
    chi2_prmx2 = 2*chi*chi_prmx2
    chi2_prmx3 = 2*chi*chi_prmx3
    chi2_prmp1 = 2*chi*chi_prmp1
    chi2_prmp2 = 2*chi*chi_prmp2
    chi2_prmp3 = 2*chi*chi_prmp3
    chi2_prmS1x = 2*chi*chi_prmS1x
    chi2_prmS1y = 2*chi*chi_prmS1y
    chi2_prmS1z = 2*chi*chi_prmS1z
    chi2_prmS2x = 2*chi*chi_prmS2x
    chi2_prmS2y = 2*chi*chi_prmS2y
    chi2_prmS2z = 2*chi*chi_prmS2z
    chi3_prmx1 = chi*chi2_prmx1 + chi2*chi_prmx1
    chi3_prmx2 = chi*chi2_prmx2 + chi2*chi_prmx2
    chi3_prmx3 = chi*chi2_prmx3 + chi2*chi_prmx3
    chi3_prmp1 = chi*chi2_prmp1 + chi2*chi_prmp1
    chi3_prmp2 = chi*chi2_prmp2 + chi2*chi_prmp2
    chi3_prmp3 = chi*chi2_prmp3 + chi2*chi_prmp3
    chi3_prmS1x = chi*chi2_prmS1x + chi2*chi_prmS1x
    chi3_prmS1y = chi*chi2_prmS1y + chi2*chi_prmS1y
    chi3_prmS1z = chi*chi2_prmS1z + chi2*chi_prmS1z
    chi3_prmS2x = chi*chi2_prmS2x + chi2*chi_prmS2x
    chi3_prmS2y = chi*chi2_prmS2y + chi2*chi_prmS2y
    chi3_prmS2z = chi*chi2_prmS2z + chi2*chi_prmS2z
    d1v2_prmx1 = chi2_prmx1*coeff02dSO + chi2_prmx1*coeff12dSO*eta + chi2_prmx1*coeff22dSO*eta2 + chi2_prmx1*coeff32dSO*eta3 + chi3_prmx1*coeff03dSO + chi3_prmx1*coeff13dSO*eta + chi3_prmx1*coeff23dSO*eta2 + chi3_prmx1*coeff33dSO*eta3 + chi_prmx1*coeff01dSO + chi_prmx1*coeff11dSO*eta + chi_prmx1*coeff21dSO*eta2 + chi_prmx1*coeff31dSO*eta3
    d1v2_prmx2 = chi2_prmx2*coeff02dSO + chi2_prmx2*coeff12dSO*eta + chi2_prmx2*coeff22dSO*eta2 + chi2_prmx2*coeff32dSO*eta3 + chi3_prmx2*coeff03dSO + chi3_prmx2*coeff13dSO*eta + chi3_prmx2*coeff23dSO*eta2 + chi3_prmx2*coeff33dSO*eta3 + chi_prmx2*coeff01dSO + chi_prmx2*coeff11dSO*eta + chi_prmx2*coeff21dSO*eta2 + chi_prmx2*coeff31dSO*eta3
    d1v2_prmx3 = chi2_prmx3*coeff02dSO + chi2_prmx3*coeff12dSO*eta + chi2_prmx3*coeff22dSO*eta2 + chi2_prmx3*coeff32dSO*eta3 + chi3_prmx3*coeff03dSO + chi3_prmx3*coeff13dSO*eta + chi3_prmx3*coeff23dSO*eta2 + chi3_prmx3*coeff33dSO*eta3 + chi_prmx3*coeff01dSO + chi_prmx3*coeff11dSO*eta + chi_prmx3*coeff21dSO*eta2 + chi_prmx3*coeff31dSO*eta3
    d1v2_prmp1 = chi2_prmp1*coeff02dSO + chi2_prmp1*coeff12dSO*eta + chi2_prmp1*coeff22dSO*eta2 + chi2_prmp1*coeff32dSO*eta3 + chi3_prmp1*coeff03dSO + chi3_prmp1*coeff13dSO*eta + chi3_prmp1*coeff23dSO*eta2 + chi3_prmp1*coeff33dSO*eta3 + chi_prmp1*coeff01dSO + chi_prmp1*coeff11dSO*eta + chi_prmp1*coeff21dSO*eta2 + chi_prmp1*coeff31dSO*eta3
    d1v2_prmp2 = chi2_prmp2*coeff02dSO + chi2_prmp2*coeff12dSO*eta + chi2_prmp2*coeff22dSO*eta2 + chi2_prmp2*coeff32dSO*eta3 + chi3_prmp2*coeff03dSO + chi3_prmp2*coeff13dSO*eta + chi3_prmp2*coeff23dSO*eta2 + chi3_prmp2*coeff33dSO*eta3 + chi_prmp2*coeff01dSO + chi_prmp2*coeff11dSO*eta + chi_prmp2*coeff21dSO*eta2 + chi_prmp2*coeff31dSO*eta3
    d1v2_prmp3 = chi2_prmp3*coeff02dSO + chi2_prmp3*coeff12dSO*eta + chi2_prmp3*coeff22dSO*eta2 + chi2_prmp3*coeff32dSO*eta3 + chi3_prmp3*coeff03dSO + chi3_prmp3*coeff13dSO*eta + chi3_prmp3*coeff23dSO*eta2 + chi3_prmp3*coeff33dSO*eta3 + chi_prmp3*coeff01dSO + chi_prmp3*coeff11dSO*eta + chi_prmp3*coeff21dSO*eta2 + chi_prmp3*coeff31dSO*eta3
    d1v2_prmS1x = chi2_prmS1x*coeff02dSO + chi2_prmS1x*coeff12dSO*eta + chi2_prmS1x*coeff22dSO*eta2 + chi2_prmS1x*coeff32dSO*eta3 + chi3_prmS1x*coeff03dSO + chi3_prmS1x*coeff13dSO*eta + chi3_prmS1x*coeff23dSO*eta2 + chi3_prmS1x*coeff33dSO*eta3 + chi_prmS1x*coeff01dSO + chi_prmS1x*coeff11dSO*eta + chi_prmS1x*coeff21dSO*eta2 + chi_prmS1x*coeff31dSO*eta3
    d1v2_prmS1y = chi2_prmS1y*coeff02dSO + chi2_prmS1y*coeff12dSO*eta + chi2_prmS1y*coeff22dSO*eta2 + chi2_prmS1y*coeff32dSO*eta3 + chi3_prmS1y*coeff03dSO + chi3_prmS1y*coeff13dSO*eta + chi3_prmS1y*coeff23dSO*eta2 + chi3_prmS1y*coeff33dSO*eta3 + chi_prmS1y*coeff01dSO + chi_prmS1y*coeff11dSO*eta + chi_prmS1y*coeff21dSO*eta2 + chi_prmS1y*coeff31dSO*eta3
    d1v2_prmS1z = chi2_prmS1z*coeff02dSO + chi2_prmS1z*coeff12dSO*eta + chi2_prmS1z*coeff22dSO*eta2 + chi2_prmS1z*coeff32dSO*eta3 + chi3_prmS1z*coeff03dSO + chi3_prmS1z*coeff13dSO*eta + chi3_prmS1z*coeff23dSO*eta2 + chi3_prmS1z*coeff33dSO*eta3 + chi_prmS1z*coeff01dSO + chi_prmS1z*coeff11dSO*eta + chi_prmS1z*coeff21dSO*eta2 + chi_prmS1z*coeff31dSO*eta3
    d1v2_prmS2x = chi2_prmS2x*coeff02dSO + chi2_prmS2x*coeff12dSO*eta + chi2_prmS2x*coeff22dSO*eta2 + chi2_prmS2x*coeff32dSO*eta3 + chi3_prmS2x*coeff03dSO + chi3_prmS2x*coeff13dSO*eta + chi3_prmS2x*coeff23dSO*eta2 + chi3_prmS2x*coeff33dSO*eta3 + chi_prmS2x*coeff01dSO + chi_prmS2x*coeff11dSO*eta + chi_prmS2x*coeff21dSO*eta2 + chi_prmS2x*coeff31dSO*eta3
    d1v2_prmS2y = chi2_prmS2y*coeff02dSO + chi2_prmS2y*coeff12dSO*eta + chi2_prmS2y*coeff22dSO*eta2 + chi2_prmS2y*coeff32dSO*eta3 + chi3_prmS2y*coeff03dSO + chi3_prmS2y*coeff13dSO*eta + chi3_prmS2y*coeff23dSO*eta2 + chi3_prmS2y*coeff33dSO*eta3 + chi_prmS2y*coeff01dSO + chi_prmS2y*coeff11dSO*eta + chi_prmS2y*coeff21dSO*eta2 + chi_prmS2y*coeff31dSO*eta3
    d1v2_prmS2z = chi2_prmS2z*coeff02dSO + chi2_prmS2z*coeff12dSO*eta + chi2_prmS2z*coeff22dSO*eta2 + chi2_prmS2z*coeff32dSO*eta3 + chi3_prmS2z*coeff03dSO + chi3_prmS2z*coeff13dSO*eta + chi3_prmS2z*coeff23dSO*eta2 + chi3_prmS2z*coeff33dSO*eta3 + chi_prmS2z*coeff01dSO + chi_prmS2z*coeff11dSO*eta + chi_prmS2z*coeff21dSO*eta2 + chi_prmS2z*coeff31dSO*eta3
    deltaSigmaStar_x_prmx1 = d1v2*eta*sKerr_x*u3_prmx1 + d1v2_prmx1*eta*sKerr_x*u3 + eta*u*(sKerr_x*(0.0833333333333333*r*(-36.0*pn2_prmx1 + 3.0*pp_prmx1) + 0.0833333333333333*r_prmx1*(-36.0*pn2 + 3.0*pp)) + sStar_x*(0.0833333333333333*r*(-30.0*pn2_prmx1 + 4.0*pp_prmx1) + 0.0833333333333333*r_prmx1*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx1*(sKerr_x*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_x*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_x*sMultiplier2_prmx1 + sMultiplier1_prmx1*sStar_x
    deltaSigmaStar_x_prmx2 = d1v2*eta*sKerr_x*u3_prmx2 + d1v2_prmx2*eta*sKerr_x*u3 + eta*u*(sKerr_x*(0.0833333333333333*r*(-36.0*pn2_prmx2 + 3.0*pp_prmx2) + 0.0833333333333333*r_prmx2*(-36.0*pn2 + 3.0*pp)) + sStar_x*(0.0833333333333333*r*(-30.0*pn2_prmx2 + 4.0*pp_prmx2) + 0.0833333333333333*r_prmx2*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx2*(sKerr_x*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_x*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_x*sMultiplier2_prmx2 + sMultiplier1_prmx2*sStar_x
    deltaSigmaStar_x_prmx3 = d1v2*eta*sKerr_x*u3_prmx3 + d1v2_prmx3*eta*sKerr_x*u3 + eta*u*(sKerr_x*(0.0833333333333333*r*(-36.0*pn2_prmx3 + 3.0*pp_prmx3) + 0.0833333333333333*r_prmx3*(-36.0*pn2 + 3.0*pp)) + sStar_x*(0.0833333333333333*r*(-30.0*pn2_prmx3 + 4.0*pp_prmx3) + 0.0833333333333333*r_prmx3*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx3*(sKerr_x*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_x*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_x*sMultiplier2_prmx3 + sMultiplier1_prmx3*sStar_x
    deltaSigmaStar_x_prmp1 = d1v2_prmp1*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmp1 + 3.0*pp_prmp1) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmp1 + 4.0*pp_prmp1)) + sKerr_x*sMultiplier2_prmp1 + sMultiplier1_prmp1*sStar_x
    deltaSigmaStar_x_prmp2 = d1v2_prmp2*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmp2 + 3.0*pp_prmp2) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmp2 + 4.0*pp_prmp2)) + sKerr_x*sMultiplier2_prmp2 + sMultiplier1_prmp2*sStar_x
    deltaSigmaStar_x_prmp3 = d1v2_prmp3*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmp3 + 3.0*pp_prmp3) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmp3 + 4.0*pp_prmp3)) + sKerr_x*sMultiplier2_prmp3 + sMultiplier1_prmp3*sStar_x
    deltaSigmaStar_x_prmS1x = d1v2*eta*sKerr_x_prmS1x*u3 + d1v2_prmS1x*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmS1x + 3.0*pp_prmS1x) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmS1x + 4.0*pp_prmS1x) + sKerr_x_prmS1x*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_x_prmS1x*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_x*sMultiplier2_prmS1x + sKerr_x_prmS1x*sMultiplier2 + sMultiplier1*sStar_x_prmS1x + sMultiplier1_prmS1x*sStar_x
    deltaSigmaStar_x_prmS1y = d1v2_prmS1y*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmS1y + 3.0*pp_prmS1y) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmS1y + 4.0*pp_prmS1y)) + sKerr_x*sMultiplier2_prmS1y + sMultiplier1_prmS1y*sStar_x
    deltaSigmaStar_x_prmS1z = d1v2_prmS1z*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmS1z + 3.0*pp_prmS1z) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmS1z + 4.0*pp_prmS1z)) + sKerr_x*sMultiplier2_prmS1z + sMultiplier1_prmS1z*sStar_x
    deltaSigmaStar_x_prmS2x = d1v2*eta*sKerr_x_prmS2x*u3 + d1v2_prmS2x*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmS2x + 3.0*pp_prmS2x) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmS2x + 4.0*pp_prmS2x) + sKerr_x_prmS2x*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_x_prmS2x*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_x*sMultiplier2_prmS2x + sKerr_x_prmS2x*sMultiplier2 + sMultiplier1*sStar_x_prmS2x + sMultiplier1_prmS2x*sStar_x
    deltaSigmaStar_x_prmS2y = d1v2_prmS2y*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmS2y + 3.0*pp_prmS2y) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmS2y + 4.0*pp_prmS2y)) + sKerr_x*sMultiplier2_prmS2y + sMultiplier1_prmS2y*sStar_x
    deltaSigmaStar_x_prmS2z = d1v2_prmS2z*eta*sKerr_x*u3 + eta*u*(0.0833333333333333*r*sKerr_x*(-36.0*pn2_prmS2z + 3.0*pp_prmS2z) + 0.0833333333333333*r*sStar_x*(-30.0*pn2_prmS2z + 4.0*pp_prmS2z)) + sKerr_x*sMultiplier2_prmS2z + sMultiplier1_prmS2z*sStar_x
    deltaSigmaStar_y_prmx1 = d1v2*eta*sKerr_y*u3_prmx1 + d1v2_prmx1*eta*sKerr_y*u3 + eta*u*(sKerr_y*(0.0833333333333333*r*(-36.0*pn2_prmx1 + 3.0*pp_prmx1) + 0.0833333333333333*r_prmx1*(-36.0*pn2 + 3.0*pp)) + sStar_y*(0.0833333333333333*r*(-30.0*pn2_prmx1 + 4.0*pp_prmx1) + 0.0833333333333333*r_prmx1*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx1*(sKerr_y*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_y*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_y*sMultiplier2_prmx1 + sMultiplier1_prmx1*sStar_y
    deltaSigmaStar_y_prmx2 = d1v2*eta*sKerr_y*u3_prmx2 + d1v2_prmx2*eta*sKerr_y*u3 + eta*u*(sKerr_y*(0.0833333333333333*r*(-36.0*pn2_prmx2 + 3.0*pp_prmx2) + 0.0833333333333333*r_prmx2*(-36.0*pn2 + 3.0*pp)) + sStar_y*(0.0833333333333333*r*(-30.0*pn2_prmx2 + 4.0*pp_prmx2) + 0.0833333333333333*r_prmx2*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx2*(sKerr_y*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_y*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_y*sMultiplier2_prmx2 + sMultiplier1_prmx2*sStar_y
    deltaSigmaStar_y_prmx3 = d1v2*eta*sKerr_y*u3_prmx3 + d1v2_prmx3*eta*sKerr_y*u3 + eta*u*(sKerr_y*(0.0833333333333333*r*(-36.0*pn2_prmx3 + 3.0*pp_prmx3) + 0.0833333333333333*r_prmx3*(-36.0*pn2 + 3.0*pp)) + sStar_y*(0.0833333333333333*r*(-30.0*pn2_prmx3 + 4.0*pp_prmx3) + 0.0833333333333333*r_prmx3*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx3*(sKerr_y*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_y*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_y*sMultiplier2_prmx3 + sMultiplier1_prmx3*sStar_y
    deltaSigmaStar_y_prmp1 = d1v2_prmp1*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmp1 + 3.0*pp_prmp1) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmp1 + 4.0*pp_prmp1)) + sKerr_y*sMultiplier2_prmp1 + sMultiplier1_prmp1*sStar_y
    deltaSigmaStar_y_prmp2 = d1v2_prmp2*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmp2 + 3.0*pp_prmp2) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmp2 + 4.0*pp_prmp2)) + sKerr_y*sMultiplier2_prmp2 + sMultiplier1_prmp2*sStar_y
    deltaSigmaStar_y_prmp3 = d1v2_prmp3*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmp3 + 3.0*pp_prmp3) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmp3 + 4.0*pp_prmp3)) + sKerr_y*sMultiplier2_prmp3 + sMultiplier1_prmp3*sStar_y
    deltaSigmaStar_y_prmS1x = d1v2_prmS1x*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmS1x + 3.0*pp_prmS1x) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmS1x + 4.0*pp_prmS1x)) + sKerr_y*sMultiplier2_prmS1x + sMultiplier1_prmS1x*sStar_y
    deltaSigmaStar_y_prmS1y = d1v2*eta*sKerr_y_prmS1y*u3 + d1v2_prmS1y*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmS1y + 3.0*pp_prmS1y) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmS1y + 4.0*pp_prmS1y) + sKerr_y_prmS1y*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_y_prmS1y*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_y*sMultiplier2_prmS1y + sKerr_y_prmS1y*sMultiplier2 + sMultiplier1*sStar_y_prmS1y + sMultiplier1_prmS1y*sStar_y
    deltaSigmaStar_y_prmS1z = d1v2_prmS1z*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmS1z + 3.0*pp_prmS1z) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmS1z + 4.0*pp_prmS1z)) + sKerr_y*sMultiplier2_prmS1z + sMultiplier1_prmS1z*sStar_y
    deltaSigmaStar_y_prmS2x = d1v2_prmS2x*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmS2x + 3.0*pp_prmS2x) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmS2x + 4.0*pp_prmS2x)) + sKerr_y*sMultiplier2_prmS2x + sMultiplier1_prmS2x*sStar_y
    deltaSigmaStar_y_prmS2y = d1v2*eta*sKerr_y_prmS2y*u3 + d1v2_prmS2y*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmS2y + 3.0*pp_prmS2y) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmS2y + 4.0*pp_prmS2y) + sKerr_y_prmS2y*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_y_prmS2y*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_y*sMultiplier2_prmS2y + sKerr_y_prmS2y*sMultiplier2 + sMultiplier1*sStar_y_prmS2y + sMultiplier1_prmS2y*sStar_y
    deltaSigmaStar_y_prmS2z = d1v2_prmS2z*eta*sKerr_y*u3 + eta*u*(0.0833333333333333*r*sKerr_y*(-36.0*pn2_prmS2z + 3.0*pp_prmS2z) + 0.0833333333333333*r*sStar_y*(-30.0*pn2_prmS2z + 4.0*pp_prmS2z)) + sKerr_y*sMultiplier2_prmS2z + sMultiplier1_prmS2z*sStar_y
    deltaSigmaStar_z_prmx1 = d1v2*eta*sKerr_z*u3_prmx1 + d1v2_prmx1*eta*sKerr_z*u3 + eta*u*(sKerr_z*(0.0833333333333333*r*(-36.0*pn2_prmx1 + 3.0*pp_prmx1) + 0.0833333333333333*r_prmx1*(-36.0*pn2 + 3.0*pp)) + sStar_z*(0.0833333333333333*r*(-30.0*pn2_prmx1 + 4.0*pp_prmx1) + 0.0833333333333333*r_prmx1*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx1*(sKerr_z*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_z*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_z*sMultiplier2_prmx1 + sMultiplier1_prmx1*sStar_z
    deltaSigmaStar_z_prmx2 = d1v2*eta*sKerr_z*u3_prmx2 + d1v2_prmx2*eta*sKerr_z*u3 + eta*u*(sKerr_z*(0.0833333333333333*r*(-36.0*pn2_prmx2 + 3.0*pp_prmx2) + 0.0833333333333333*r_prmx2*(-36.0*pn2 + 3.0*pp)) + sStar_z*(0.0833333333333333*r*(-30.0*pn2_prmx2 + 4.0*pp_prmx2) + 0.0833333333333333*r_prmx2*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx2*(sKerr_z*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_z*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_z*sMultiplier2_prmx2 + sMultiplier1_prmx2*sStar_z
    deltaSigmaStar_z_prmx3 = d1v2*eta*sKerr_z*u3_prmx3 + d1v2_prmx3*eta*sKerr_z*u3 + eta*u*(sKerr_z*(0.0833333333333333*r*(-36.0*pn2_prmx3 + 3.0*pp_prmx3) + 0.0833333333333333*r_prmx3*(-36.0*pn2 + 3.0*pp)) + sStar_z*(0.0833333333333333*r*(-30.0*pn2_prmx3 + 4.0*pp_prmx3) + 0.0833333333333333*r_prmx3*(-30.0*pn2 + 4.0*pp))) + eta*u_prmx3*(sKerr_z*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_z*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_z*sMultiplier2_prmx3 + sMultiplier1_prmx3*sStar_z
    deltaSigmaStar_z_prmp1 = d1v2_prmp1*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmp1 + 3.0*pp_prmp1) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmp1 + 4.0*pp_prmp1)) + sKerr_z*sMultiplier2_prmp1 + sMultiplier1_prmp1*sStar_z
    deltaSigmaStar_z_prmp2 = d1v2_prmp2*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmp2 + 3.0*pp_prmp2) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmp2 + 4.0*pp_prmp2)) + sKerr_z*sMultiplier2_prmp2 + sMultiplier1_prmp2*sStar_z
    deltaSigmaStar_z_prmp3 = d1v2_prmp3*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmp3 + 3.0*pp_prmp3) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmp3 + 4.0*pp_prmp3)) + sKerr_z*sMultiplier2_prmp3 + sMultiplier1_prmp3*sStar_z
    deltaSigmaStar_z_prmS1x = d1v2_prmS1x*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmS1x + 3.0*pp_prmS1x) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmS1x + 4.0*pp_prmS1x)) + sKerr_z*sMultiplier2_prmS1x + sMultiplier1_prmS1x*sStar_z
    deltaSigmaStar_z_prmS1y = d1v2_prmS1y*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmS1y + 3.0*pp_prmS1y) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmS1y + 4.0*pp_prmS1y)) + sKerr_z*sMultiplier2_prmS1y + sMultiplier1_prmS1y*sStar_z
    deltaSigmaStar_z_prmS1z = d1v2*eta*sKerr_z_prmS1z*u3 + d1v2_prmS1z*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmS1z + 3.0*pp_prmS1z) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmS1z + 4.0*pp_prmS1z) + sKerr_z_prmS1z*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_z_prmS1z*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_z*sMultiplier2_prmS1z + sKerr_z_prmS1z*sMultiplier2 + sMultiplier1*sStar_z_prmS1z + sMultiplier1_prmS1z*sStar_z
    deltaSigmaStar_z_prmS2x = d1v2_prmS2x*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmS2x + 3.0*pp_prmS2x) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmS2x + 4.0*pp_prmS2x)) + sKerr_z*sMultiplier2_prmS2x + sMultiplier1_prmS2x*sStar_z
    deltaSigmaStar_z_prmS2y = d1v2_prmS2y*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmS2y + 3.0*pp_prmS2y) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmS2y + 4.0*pp_prmS2y)) + sKerr_z*sMultiplier2_prmS2y + sMultiplier1_prmS2y*sStar_z
    deltaSigmaStar_z_prmS2z = d1v2*eta*sKerr_z_prmS2z*u3 + d1v2_prmS2z*eta*sKerr_z*u3 + eta*u*(0.0833333333333333*r*sKerr_z*(-36.0*pn2_prmS2z + 3.0*pp_prmS2z) + 0.0833333333333333*r*sStar_z*(-30.0*pn2_prmS2z + 4.0*pp_prmS2z) + sKerr_z_prmS2z*(0.0833333333333333*r*(-36.0*pn2 + 3.0*pp) - 0.666666666666666) + sStar_z_prmS2z*(0.0833333333333333*r*(-30.0*pn2 + 4.0*pp) + 1.16666666666667)) + sKerr_z*sMultiplier2_prmS2z + sKerr_z_prmS2z*sMultiplier2 + sMultiplier1*sStar_z_prmS2z + sMultiplier1_prmS2z*sStar_z
    sx_prmx1 = deltaSigmaStar_x_prmx1
    sx_prmx2 = deltaSigmaStar_x_prmx2
    sx_prmx3 = deltaSigmaStar_x_prmx3
    sx_prmp1 = deltaSigmaStar_x_prmp1
    sx_prmp2 = deltaSigmaStar_x_prmp2
    sx_prmp3 = deltaSigmaStar_x_prmp3
    sx_prmS1x = deltaSigmaStar_x_prmS1x + sStar_x_prmS1x
    sx_prmS1y = deltaSigmaStar_x_prmS1y
    sx_prmS1z = deltaSigmaStar_x_prmS1z
    sx_prmS2x = deltaSigmaStar_x_prmS2x + sStar_x_prmS2x
    sx_prmS2y = deltaSigmaStar_x_prmS2y
    sx_prmS2z = deltaSigmaStar_x_prmS2z
    sy_prmx1 = deltaSigmaStar_y_prmx1
    sy_prmx2 = deltaSigmaStar_y_prmx2
    sy_prmx3 = deltaSigmaStar_y_prmx3
    sy_prmp1 = deltaSigmaStar_y_prmp1
    sy_prmp2 = deltaSigmaStar_y_prmp2
    sy_prmp3 = deltaSigmaStar_y_prmp3
    sy_prmS1x = deltaSigmaStar_y_prmS1x
    sy_prmS1y = deltaSigmaStar_y_prmS1y + sStar_y_prmS1y
    sy_prmS1z = deltaSigmaStar_y_prmS1z
    sy_prmS2x = deltaSigmaStar_y_prmS2x
    sy_prmS2y = deltaSigmaStar_y_prmS2y + sStar_y_prmS2y
    sy_prmS2z = deltaSigmaStar_y_prmS2z
    sz_prmx1 = deltaSigmaStar_z_prmx1
    sz_prmx2 = deltaSigmaStar_z_prmx2
    sz_prmx3 = deltaSigmaStar_z_prmx3
    sz_prmp1 = deltaSigmaStar_z_prmp1
    sz_prmp2 = deltaSigmaStar_z_prmp2
    sz_prmp3 = deltaSigmaStar_z_prmp3
    sz_prmS1x = deltaSigmaStar_z_prmS1x
    sz_prmS1y = deltaSigmaStar_z_prmS1y
    sz_prmS1z = deltaSigmaStar_z_prmS1z + sStar_z_prmS1z
    sz_prmS2x = deltaSigmaStar_z_prmS2x
    sz_prmS2y = deltaSigmaStar_z_prmS2y
    sz_prmS2z = deltaSigmaStar_z_prmS2z + sStar_z_prmS2z
    sxi_prmx1 = sx*xi_x_prmx1 + sx_prmx1*xi_x + sy*xi_y_prmx1 + sy_prmx1*xi_y + sz*xi_z_prmx1 + sz_prmx1*xi_z
    sxi_prmx2 = sx*xi_x_prmx2 + sx_prmx2*xi_x + sy*xi_y_prmx2 + sy_prmx2*xi_y + sz*xi_z_prmx2 + sz_prmx2*xi_z
    sxi_prmx3 = sx*xi_x_prmx3 + sx_prmx3*xi_x + sy*xi_y_prmx3 + sy_prmx3*xi_y + sz*xi_z_prmx3 + sz_prmx3*xi_z
    sxi_prmp1 = sx_prmp1*xi_x + sy_prmp1*xi_y + sz_prmp1*xi_z
    sxi_prmp2 = sx_prmp2*xi_x + sy_prmp2*xi_y + sz_prmp2*xi_z
    sxi_prmp3 = sx_prmp3*xi_x + sy_prmp3*xi_y + sz_prmp3*xi_z
    sxi_prmS1x = sx*xi_x_prmS1x + sx_prmS1x*xi_x + sy*xi_y_prmS1x + sy_prmS1x*xi_y + sz*xi_z_prmS1x + sz_prmS1x*xi_z
    sxi_prmS1y = sx*xi_x_prmS1y + sx_prmS1y*xi_x + sy*xi_y_prmS1y + sy_prmS1y*xi_y + sz*xi_z_prmS1y + sz_prmS1y*xi_z
    sxi_prmS1z = sx*xi_x_prmS1z + sx_prmS1z*xi_x + sy*xi_y_prmS1z + sy_prmS1z*xi_y + sz*xi_z_prmS1z + sz_prmS1z*xi_z
    sxi_prmS2x = sx*xi_x_prmS2x + sx_prmS2x*xi_x + sy*xi_y_prmS2x + sy_prmS2x*xi_y + sz*xi_z_prmS2x + sz_prmS2x*xi_z
    sxi_prmS2y = sx*xi_x_prmS2y + sx_prmS2y*xi_x + sy*xi_y_prmS2y + sy_prmS2y*xi_y + sz*xi_z_prmS2y + sz_prmS2y*xi_z
    sxi_prmS2z = sx*xi_x_prmS2z + sx_prmS2z*xi_x + sy*xi_y_prmS2z + sy_prmS2z*xi_y + sz*xi_z_prmS2z + sz_prmS2z*xi_z
    sv_prmx1 = sx*vx_prmx1 + sx_prmx1*vx + sy*vy_prmx1 + sy_prmx1*vy + sz*vz_prmx1 + sz_prmx1*vz
    sv_prmx2 = sx*vx_prmx2 + sx_prmx2*vx + sy*vy_prmx2 + sy_prmx2*vy + sz*vz_prmx2 + sz_prmx2*vz
    sv_prmx3 = sx*vx_prmx3 + sx_prmx3*vx + sy*vy_prmx3 + sy_prmx3*vy + sz*vz_prmx3 + sz_prmx3*vz
    sv_prmp1 = sx_prmp1*vx + sy_prmp1*vy + sz_prmp1*vz
    sv_prmp2 = sx_prmp2*vx + sy_prmp2*vy + sz_prmp2*vz
    sv_prmp3 = sx_prmp3*vx + sy_prmp3*vy + sz_prmp3*vz
    sv_prmS1x = sx*vx_prmS1x + sx_prmS1x*vx + sy*vy_prmS1x + sy_prmS1x*vy + sz*vz_prmS1x + sz_prmS1x*vz
    sv_prmS1y = sx*vx_prmS1y + sx_prmS1y*vx + sy*vy_prmS1y + sy_prmS1y*vy + sz*vz_prmS1y + sz_prmS1y*vz
    sv_prmS1z = sx*vx_prmS1z + sx_prmS1z*vx + sy*vy_prmS1z + sy_prmS1z*vy + sz*vz_prmS1z + sz_prmS1z*vz
    sv_prmS2x = sx*vx_prmS2x + sx_prmS2x*vx + sy*vy_prmS2x + sy_prmS2x*vy + sz*vz_prmS2x + sz_prmS2x*vz
    sv_prmS2y = sx*vx_prmS2y + sx_prmS2y*vx + sy*vy_prmS2y + sy_prmS2y*vy + sz*vz_prmS2y + sz_prmS2y*vz
    sv_prmS2z = sx*vx_prmS2z + sx_prmS2z*vx + sy*vy_prmS2z + sy_prmS2z*vy + sz*vz_prmS2z + sz_prmS2z*vz
    sn_prmx1 = nx*sx_prmx1 + nx_prmx1*sx + ny*sy_prmx1 + ny_prmx1*sy + nz*sz_prmx1 + nz_prmx1*sz
    sn_prmx2 = nx*sx_prmx2 + nx_prmx2*sx + ny*sy_prmx2 + ny_prmx2*sy + nz*sz_prmx2 + nz_prmx2*sz
    sn_prmx3 = nx*sx_prmx3 + nx_prmx3*sx + ny*sy_prmx3 + ny_prmx3*sy + nz*sz_prmx3 + nz_prmx3*sz
    sn_prmp1 = nx*sx_prmp1 + ny*sy_prmp1 + nz*sz_prmp1
    sn_prmp2 = nx*sx_prmp2 + ny*sy_prmp2 + nz*sz_prmp2
    sn_prmp3 = nx*sx_prmp3 + ny*sy_prmp3 + nz*sz_prmp3
    sn_prmS1x = nx*sx_prmS1x + ny*sy_prmS1x + nz*sz_prmS1x
    sn_prmS1y = nx*sx_prmS1y + ny*sy_prmS1y + nz*sz_prmS1y
    sn_prmS1z = nx*sx_prmS1z + ny*sy_prmS1z + nz*sz_prmS1z
    sn_prmS2x = nx*sx_prmS2x + ny*sy_prmS2x + nz*sz_prmS2x
    sn_prmS2y = nx*sx_prmS2y + ny*sy_prmS2y + nz*sz_prmS2y
    sn_prmS2z = nx*sx_prmS2z + ny*sy_prmS2z + nz*sz_prmS2z
    s3_prmx1 = e3_x*sx_prmx1 + e3_y*sy_prmx1 + e3_z*sz_prmx1
    s3_prmx2 = e3_x*sx_prmx2 + e3_y*sy_prmx2 + e3_z*sz_prmx2
    s3_prmx3 = e3_x*sx_prmx3 + e3_y*sy_prmx3 + e3_z*sz_prmx3
    s3_prmp1 = e3_x*sx_prmp1 + e3_y*sy_prmp1 + e3_z*sz_prmp1
    s3_prmp2 = e3_x*sx_prmp2 + e3_y*sy_prmp2 + e3_z*sz_prmp2
    s3_prmp3 = e3_x*sx_prmp3 + e3_y*sy_prmp3 + e3_z*sz_prmp3
    s3_prmS1x = e3_x*sx_prmS1x + e3_x_prmS1x*sx + e3_y*sy_prmS1x + e3_y_prmS1x*sy + e3_z*sz_prmS1x + e3_z_prmS1x*sz
    s3_prmS1y = e3_x*sx_prmS1y + e3_x_prmS1y*sx + e3_y*sy_prmS1y + e3_y_prmS1y*sy + e3_z*sz_prmS1y + e3_z_prmS1y*sz
    s3_prmS1z = e3_x*sx_prmS1z + e3_x_prmS1z*sx + e3_y*sy_prmS1z + e3_y_prmS1z*sy + e3_z*sz_prmS1z + e3_z_prmS1z*sz
    s3_prmS2x = e3_x*sx_prmS2x + e3_x_prmS2x*sx + e3_y*sy_prmS2x + e3_y_prmS2x*sy + e3_z*sz_prmS2x + e3_z_prmS2x*sz
    s3_prmS2y = e3_x*sx_prmS2y + e3_x_prmS2y*sx + e3_y*sy_prmS2y + e3_y_prmS2y*sy + e3_z*sz_prmS2y + e3_z_prmS2y*sz
    s3_prmS2z = e3_x*sx_prmS2z + e3_x_prmS2z*sx + e3_y*sy_prmS2z + e3_y_prmS2z*sy + e3_z*sz_prmS2z + e3_z_prmS2z*sz
    sqrtQ_prmx1 = Q_prmx1/(2*np.sqrt(Q))
    sqrtQ_prmx2 = Q_prmx2/(2*np.sqrt(Q))
    sqrtQ_prmx3 = Q_prmx3/(2*np.sqrt(Q))
    sqrtQ_prmp1 = Q_prmp1/(2*np.sqrt(Q))
    sqrtQ_prmp2 = Q_prmp2/(2*np.sqrt(Q))
    sqrtQ_prmp3 = Q_prmp3/(2*np.sqrt(Q))
    sqrtQ_prmS1x = Q_prmS1x/(2*np.sqrt(Q))
    sqrtQ_prmS1y = Q_prmS1y/(2*np.sqrt(Q))
    sqrtQ_prmS1z = Q_prmS1z/(2*np.sqrt(Q))
    sqrtQ_prmS2x = Q_prmS2x/(2*np.sqrt(Q))
    sqrtQ_prmS2y = Q_prmS2y/(2*np.sqrt(Q))
    sqrtQ_prmS2z = Q_prmS2z/(2*np.sqrt(Q))
    inv2B1psqrtQsqrtQ_prmx1 = -0.5*sqrtQ_prmx1/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmx1/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmx1/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmx2 = -0.5*sqrtQ_prmx2/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmx2/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmx2/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmx3 = -0.5*sqrtQ_prmx3/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmx3/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmx3/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmp1 = -0.5*sqrtQ_prmp1/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmp1/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmp1/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmp2 = -0.5*sqrtQ_prmp2/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmp2/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmp2/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmp3 = -0.5*sqrtQ_prmp3/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmp3/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmp3/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmS1x = -0.5*sqrtQ_prmS1x/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmS1x/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmS1x/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmS1y = -0.5*sqrtQ_prmS1y/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmS1y/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmS1y/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmS1z = -0.5*sqrtQ_prmS1z/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmS1z/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmS1z/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmS2x = -0.5*sqrtQ_prmS2x/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmS2x/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmS2x/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmS2y = -0.5*sqrtQ_prmS2y/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmS2y/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmS2y/(B**2*sqrtQ*(sqrtQ + 1.0))
    inv2B1psqrtQsqrtQ_prmS2z = -0.5*sqrtQ_prmS2z/(B*sqrtQ*(sqrtQ + 1.0)**2) - 0.5*sqrtQ_prmS2z/(B*sqrtQ**2*(sqrtQ + 1.0)) - 0.5*B_prmS2z/(B**2*sqrtQ*(sqrtQ + 1.0))
    Hwr_prmx1 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmx1 - 2*deltaR*pn*pn_prmx1*sv - deltaR_prmx1*pn**2*sv + expMU**2*sv*(Q_prmx1 + sqrtQ_prmx1) + expMU**2*sv_prmx1*(Q + sqrtQ) + expMU*expMU_prmx1*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmx1 + pn*pvr*sn_prmx1*sqrtdeltaR + pn*pvr_prmx1*sn*sqrtdeltaR + pn_prmx1*pvr*sn*sqrtdeltaR) + B**2*xi2_prmx1*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmx1*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmx1 - B*expMU*expnu*pvr*pxir_prmx1*sxi - B*expMU*expnu*pvr_prmx1*pxir*sxi - B*expMU*expnu_prmx1*pvr*pxir*sxi - B*expMU_prmx1*expnu*pvr*pxir*sxi - B_prmx1*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmx1 + 2*expMU**2*expnu**2*pxir*pxir_prmx1*sv + 2*expMU**2*expnu*expnu_prmx1*pxir**2*sv + 2*expMU*expMU_prmx1*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmx1*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmx1*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmx1*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmx1*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmx1*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmx2 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmx2 - 2*deltaR*pn*pn_prmx2*sv - deltaR_prmx2*pn**2*sv + expMU**2*sv*(Q_prmx2 + sqrtQ_prmx2) + expMU**2*sv_prmx2*(Q + sqrtQ) + expMU*expMU_prmx2*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmx2 + pn*pvr*sn_prmx2*sqrtdeltaR + pn*pvr_prmx2*sn*sqrtdeltaR + pn_prmx2*pvr*sn*sqrtdeltaR) + B**2*xi2_prmx2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmx2*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmx2 - B*expMU*expnu*pvr*pxir_prmx2*sxi - B*expMU*expnu*pvr_prmx2*pxir*sxi - B*expMU*expnu_prmx2*pvr*pxir*sxi - B*expMU_prmx2*expnu*pvr*pxir*sxi - B_prmx2*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmx2 + 2*expMU**2*expnu**2*pxir*pxir_prmx2*sv + 2*expMU**2*expnu*expnu_prmx2*pxir**2*sv + 2*expMU*expMU_prmx2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmx2*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmx2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmx2*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmx2*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmx2*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmx3 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmx3 - 2*deltaR*pn*pn_prmx3*sv - deltaR_prmx3*pn**2*sv + expMU**2*sv*(Q_prmx3 + sqrtQ_prmx3) + expMU**2*sv_prmx3*(Q + sqrtQ) + expMU*expMU_prmx3*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmx3 + pn*pvr*sn_prmx3*sqrtdeltaR + pn*pvr_prmx3*sn*sqrtdeltaR + pn_prmx3*pvr*sn*sqrtdeltaR) + B**2*xi2_prmx3*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmx3*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmx3 - B*expMU*expnu*pvr*pxir_prmx3*sxi - B*expMU*expnu*pvr_prmx3*pxir*sxi - B*expMU*expnu_prmx3*pvr*pxir*sxi - B*expMU_prmx3*expnu*pvr*pxir*sxi - B_prmx3*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmx3 + 2*expMU**2*expnu**2*pxir*pxir_prmx3*sv + 2*expMU**2*expnu*expnu_prmx3*pxir**2*sv + 2*expMU*expMU_prmx3*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmx3*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmx3*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmx3*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmx3*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmx3*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmp1 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmp1 - 2*deltaR*pn*pn_prmp1*sv - deltaR_prmp1*pn**2*sv + expMU**2*sv*(Q_prmp1 + sqrtQ_prmp1) + expMU**2*sv_prmp1*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmp1 + pn*pvr*sn_prmp1*sqrtdeltaR + pn*pvr_prmp1*sn*sqrtdeltaR + pn_prmp1*pvr*sn*sqrtdeltaR) + B*B_prmp1*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmp1 - B*expMU*expnu*pvr*pxir_prmp1*sxi - B*expMU*expnu*pvr_prmp1*pxir*sxi - B*expMU*expnu_prmp1*pvr*pxir*sxi - B_prmp1*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmp1 + 2*expMU**2*expnu**2*pxir*pxir_prmp1*sv + 2*expMU**2*expnu*expnu_prmp1*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmp1*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmp1*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmp1*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmp1*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmp1*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmp2 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmp2 - 2*deltaR*pn*pn_prmp2*sv - deltaR_prmp2*pn**2*sv + expMU**2*sv*(Q_prmp2 + sqrtQ_prmp2) + expMU**2*sv_prmp2*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmp2 + pn*pvr*sn_prmp2*sqrtdeltaR + pn*pvr_prmp2*sn*sqrtdeltaR + pn_prmp2*pvr*sn*sqrtdeltaR) + B*B_prmp2*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmp2 - B*expMU*expnu*pvr*pxir_prmp2*sxi - B*expMU*expnu*pvr_prmp2*pxir*sxi - B*expMU*expnu_prmp2*pvr*pxir*sxi - B_prmp2*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmp2 + 2*expMU**2*expnu**2*pxir*pxir_prmp2*sv + 2*expMU**2*expnu*expnu_prmp2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmp2*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmp2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmp2*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmp2*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmp2*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmp3 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmp3 - 2*deltaR*pn*pn_prmp3*sv - deltaR_prmp3*pn**2*sv + expMU**2*sv*(Q_prmp3 + sqrtQ_prmp3) + expMU**2*sv_prmp3*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmp3 + pn*pvr*sn_prmp3*sqrtdeltaR + pn*pvr_prmp3*sn*sqrtdeltaR + pn_prmp3*pvr*sn*sqrtdeltaR) + B*B_prmp3*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmp3 - B*expMU*expnu*pvr*pxir_prmp3*sxi - B*expMU*expnu*pvr_prmp3*pxir*sxi - B*expMU*expnu_prmp3*pvr*pxir*sxi - B_prmp3*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmp3 + 2*expMU**2*expnu**2*pxir*pxir_prmp3*sv + 2*expMU**2*expnu*expnu_prmp3*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmp3*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmp3*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmp3*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmp3*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmp3*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmS1x = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmS1x - 2*deltaR*pn*pn_prmS1x*sv - deltaR_prmS1x*pn**2*sv + expMU**2*sv*(Q_prmS1x + sqrtQ_prmS1x) + expMU**2*sv_prmS1x*(Q + sqrtQ) + expMU*expMU_prmS1x*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmS1x + pn*pvr*sn_prmS1x*sqrtdeltaR + pn*pvr_prmS1x*sn*sqrtdeltaR + pn_prmS1x*pvr*sn*sqrtdeltaR) + B**2*xi2_prmS1x*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmS1x*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmS1x - B*expMU*expnu*pvr*pxir_prmS1x*sxi - B*expMU*expnu*pvr_prmS1x*pxir*sxi - B*expMU*expnu_prmS1x*pvr*pxir*sxi - B*expMU_prmS1x*expnu*pvr*pxir*sxi - B_prmS1x*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmS1x + 2*expMU**2*expnu**2*pxir*pxir_prmS1x*sv + 2*expMU**2*expnu*expnu_prmS1x*pxir**2*sv + 2*expMU*expMU_prmS1x*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmS1x*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmS1x*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS1x*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS1x*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmS1x*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmS1y = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmS1y - 2*deltaR*pn*pn_prmS1y*sv - deltaR_prmS1y*pn**2*sv + expMU**2*sv*(Q_prmS1y + sqrtQ_prmS1y) + expMU**2*sv_prmS1y*(Q + sqrtQ) + expMU*expMU_prmS1y*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmS1y + pn*pvr*sn_prmS1y*sqrtdeltaR + pn*pvr_prmS1y*sn*sqrtdeltaR + pn_prmS1y*pvr*sn*sqrtdeltaR) + B**2*xi2_prmS1y*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmS1y*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmS1y - B*expMU*expnu*pvr*pxir_prmS1y*sxi - B*expMU*expnu*pvr_prmS1y*pxir*sxi - B*expMU*expnu_prmS1y*pvr*pxir*sxi - B*expMU_prmS1y*expnu*pvr*pxir*sxi - B_prmS1y*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmS1y + 2*expMU**2*expnu**2*pxir*pxir_prmS1y*sv + 2*expMU**2*expnu*expnu_prmS1y*pxir**2*sv + 2*expMU*expMU_prmS1y*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmS1y*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmS1y*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS1y*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS1y*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmS1y*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmS1z = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmS1z - 2*deltaR*pn*pn_prmS1z*sv - deltaR_prmS1z*pn**2*sv + expMU**2*sv*(Q_prmS1z + sqrtQ_prmS1z) + expMU**2*sv_prmS1z*(Q + sqrtQ) + expMU*expMU_prmS1z*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmS1z + pn*pvr*sn_prmS1z*sqrtdeltaR + pn*pvr_prmS1z*sn*sqrtdeltaR + pn_prmS1z*pvr*sn*sqrtdeltaR) + B**2*xi2_prmS1z*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmS1z*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmS1z - B*expMU*expnu*pvr*pxir_prmS1z*sxi - B*expMU*expnu*pvr_prmS1z*pxir*sxi - B*expMU*expnu_prmS1z*pvr*pxir*sxi - B*expMU_prmS1z*expnu*pvr*pxir*sxi - B_prmS1z*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmS1z + 2*expMU**2*expnu**2*pxir*pxir_prmS1z*sv + 2*expMU**2*expnu*expnu_prmS1z*pxir**2*sv + 2*expMU*expMU_prmS1z*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmS1z*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmS1z*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS1z*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS1z*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmS1z*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmS2x = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmS2x - 2*deltaR*pn*pn_prmS2x*sv - deltaR_prmS2x*pn**2*sv + expMU**2*sv*(Q_prmS2x + sqrtQ_prmS2x) + expMU**2*sv_prmS2x*(Q + sqrtQ) + expMU*expMU_prmS2x*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmS2x + pn*pvr*sn_prmS2x*sqrtdeltaR + pn*pvr_prmS2x*sn*sqrtdeltaR + pn_prmS2x*pvr*sn*sqrtdeltaR) + B**2*xi2_prmS2x*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmS2x*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmS2x - B*expMU*expnu*pvr*pxir_prmS2x*sxi - B*expMU*expnu*pvr_prmS2x*pxir*sxi - B*expMU*expnu_prmS2x*pvr*pxir*sxi - B*expMU_prmS2x*expnu*pvr*pxir*sxi - B_prmS2x*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmS2x + 2*expMU**2*expnu**2*pxir*pxir_prmS2x*sv + 2*expMU**2*expnu*expnu_prmS2x*pxir**2*sv + 2*expMU*expMU_prmS2x*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmS2x*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmS2x*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS2x*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS2x*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmS2x*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmS2y = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmS2y - 2*deltaR*pn*pn_prmS2y*sv - deltaR_prmS2y*pn**2*sv + expMU**2*sv*(Q_prmS2y + sqrtQ_prmS2y) + expMU**2*sv_prmS2y*(Q + sqrtQ) + expMU*expMU_prmS2y*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmS2y + pn*pvr*sn_prmS2y*sqrtdeltaR + pn*pvr_prmS2y*sn*sqrtdeltaR + pn_prmS2y*pvr*sn*sqrtdeltaR) + B**2*xi2_prmS2y*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmS2y*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmS2y - B*expMU*expnu*pvr*pxir_prmS2y*sxi - B*expMU*expnu*pvr_prmS2y*pxir*sxi - B*expMU*expnu_prmS2y*pvr*pxir*sxi - B*expMU_prmS2y*expnu*pvr*pxir*sxi - B_prmS2y*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmS2y + 2*expMU**2*expnu**2*pxir*pxir_prmS2y*sv + 2*expMU**2*expnu*expnu_prmS2y*pxir**2*sv + 2*expMU*expMU_prmS2y*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmS2y*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmS2y*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS2y*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS2y*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmS2y*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwr_prmS2z = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv_prmS2z - 2*deltaR*pn*pn_prmS2z*sv - deltaR_prmS2z*pn**2*sv + expMU**2*sv*(Q_prmS2z + sqrtQ_prmS2z) + expMU**2*sv_prmS2z*(Q + sqrtQ) + expMU*expMU_prmS2z*sv*(2*Q + 2*sqrtQ) + pn*pvr*sn*sqrtdeltaR_prmS2z + pn*pvr*sn_prmS2z*sqrtdeltaR + pn*pvr_prmS2z*sn*sqrtdeltaR + pn_prmS2z*pvr*sn*sqrtdeltaR) + B**2*xi2_prmS2z*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) + B*B_prmS2z*xi2*(-2*deltaR*pn**2*sv + 2*expMU**2*sv*(Q + sqrtQ) + 2*pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi_prmS2z - B*expMU*expnu*pvr*pxir_prmS2z*sxi - B*expMU*expnu*pvr_prmS2z*pxir*sxi - B*expMU*expnu_prmS2z*pvr*pxir*sxi - B*expMU_prmS2z*expnu*pvr*pxir*sxi - B_prmS2z*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv_prmS2z + 2*expMU**2*expnu**2*pxir*pxir_prmS2z*sv + 2*expMU**2*expnu*expnu_prmS2z*pxir**2*sv + 2*expMU*expMU_prmS2z*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2*sqrtdeltaR_prmS2z*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*invxi2_prmS2z*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS2z*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS2z*invexpnu*invxi2*sqrtdeltaR*(3*B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - 3*B*expMU*expnu*pvr*pxir*sxi + 3*expMU**2*expnu**2*pxir**2*sv) + inv2B1psqrtQsqrtQ_prmS2z*invexpMU**3*invexpnu*invxi2*sqrtdeltaR*(B**2*xi2*(-deltaR*pn**2*sv + expMU**2*sv*(Q + sqrtQ) + pn*pvr*sn*sqrtdeltaR) - B*expMU*expnu*pvr*pxir*sxi + expMU**2*expnu**2*pxir**2*sv)
    Hwcos_prmx1 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmx1 - B*pvr_prmx1*sv - B_prmx1*pvr*sv + expMU*expnu*pxir*sxi_prmx1 + expMU*expnu*pxir_prmx1*sxi + expMU*expnu_prmx1*pxir*sxi + expMU_prmx1*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmx1*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmx1*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmx1*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmx1 + sqrtQ_prmx1) + expMU**2*xi2_prmx1*(-Q - sqrtQ) - expMU*expMU_prmx1*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmx1) + B*B_prmx1*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmx1 - 2*expMU**2*expnu*expnu_prmx1*pxir**2 - 2*expMU*expMU_prmx1*expnu**2*pxir**2) + sn_prmx1*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmx1*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmx1*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmx1*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmx2 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmx2 - B*pvr_prmx2*sv - B_prmx2*pvr*sv + expMU*expnu*pxir*sxi_prmx2 + expMU*expnu*pxir_prmx2*sxi + expMU*expnu_prmx2*pxir*sxi + expMU_prmx2*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmx2*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmx2*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmx2*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmx2 + sqrtQ_prmx2) + expMU**2*xi2_prmx2*(-Q - sqrtQ) - expMU*expMU_prmx2*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmx2) + B*B_prmx2*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmx2 - 2*expMU**2*expnu*expnu_prmx2*pxir**2 - 2*expMU*expMU_prmx2*expnu**2*pxir**2) + sn_prmx2*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmx2*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmx2*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmx2*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmx3 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmx3 - B*pvr_prmx3*sv - B_prmx3*pvr*sv + expMU*expnu*pxir*sxi_prmx3 + expMU*expnu*pxir_prmx3*sxi + expMU*expnu_prmx3*pxir*sxi + expMU_prmx3*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmx3*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmx3*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmx3*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmx3 + sqrtQ_prmx3) + expMU**2*xi2_prmx3*(-Q - sqrtQ) - expMU*expMU_prmx3*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmx3) + B*B_prmx3*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmx3 - 2*expMU**2*expnu*expnu_prmx3*pxir**2 - 2*expMU*expMU_prmx3*expnu**2*pxir**2) + sn_prmx3*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmx3*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmx3*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmx3*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmp1 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmp1 - B*pvr_prmp1*sv - B_prmp1*pvr*sv + expMU*expnu*pxir*sxi_prmp1 + expMU*expnu*pxir_prmp1*sxi + expMU*expnu_prmp1*pxir*sxi) + B*pn*sqrtdeltaR_prmp1*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmp1*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmp1*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmp1 + sqrtQ_prmp1) + 2*pvr*pvr_prmp1) + B*B_prmp1*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmp1 - 2*expMU**2*expnu*expnu_prmp1*pxir**2) + sn_prmp1*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmp1*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmp1*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmp1*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmp2 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmp2 - B*pvr_prmp2*sv - B_prmp2*pvr*sv + expMU*expnu*pxir*sxi_prmp2 + expMU*expnu*pxir_prmp2*sxi + expMU*expnu_prmp2*pxir*sxi) + B*pn*sqrtdeltaR_prmp2*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmp2*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmp2*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmp2 + sqrtQ_prmp2) + 2*pvr*pvr_prmp2) + B*B_prmp2*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmp2 - 2*expMU**2*expnu*expnu_prmp2*pxir**2) + sn_prmp2*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmp2*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmp2*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmp2*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmp3 = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmp3 - B*pvr_prmp3*sv - B_prmp3*pvr*sv + expMU*expnu*pxir*sxi_prmp3 + expMU*expnu*pxir_prmp3*sxi + expMU*expnu_prmp3*pxir*sxi) + B*pn*sqrtdeltaR_prmp3*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmp3*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmp3*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmp3 + sqrtQ_prmp3) + 2*pvr*pvr_prmp3) + B*B_prmp3*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmp3 - 2*expMU**2*expnu*expnu_prmp3*pxir**2) + sn_prmp3*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmp3*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmp3*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmp3*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmS1x = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmS1x - B*pvr_prmS1x*sv - B_prmS1x*pvr*sv + expMU*expnu*pxir*sxi_prmS1x + expMU*expnu*pxir_prmS1x*sxi + expMU*expnu_prmS1x*pxir*sxi + expMU_prmS1x*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmS1x*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmS1x*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmS1x*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmS1x + sqrtQ_prmS1x) + expMU**2*xi2_prmS1x*(-Q - sqrtQ) - expMU*expMU_prmS1x*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmS1x) + B*B_prmS1x*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmS1x - 2*expMU**2*expnu*expnu_prmS1x*pxir**2 - 2*expMU*expMU_prmS1x*expnu**2*pxir**2) + sn_prmS1x*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS1x*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS1x*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmS1x*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmS1y = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmS1y - B*pvr_prmS1y*sv - B_prmS1y*pvr*sv + expMU*expnu*pxir*sxi_prmS1y + expMU*expnu*pxir_prmS1y*sxi + expMU*expnu_prmS1y*pxir*sxi + expMU_prmS1y*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmS1y*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmS1y*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmS1y*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmS1y + sqrtQ_prmS1y) + expMU**2*xi2_prmS1y*(-Q - sqrtQ) - expMU*expMU_prmS1y*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmS1y) + B*B_prmS1y*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmS1y - 2*expMU**2*expnu*expnu_prmS1y*pxir**2 - 2*expMU*expMU_prmS1y*expnu**2*pxir**2) + sn_prmS1y*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS1y*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS1y*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmS1y*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmS1z = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmS1z - B*pvr_prmS1z*sv - B_prmS1z*pvr*sv + expMU*expnu*pxir*sxi_prmS1z + expMU*expnu*pxir_prmS1z*sxi + expMU*expnu_prmS1z*pxir*sxi + expMU_prmS1z*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmS1z*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmS1z*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmS1z*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmS1z + sqrtQ_prmS1z) + expMU**2*xi2_prmS1z*(-Q - sqrtQ) - expMU*expMU_prmS1z*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmS1z) + B*B_prmS1z*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmS1z - 2*expMU**2*expnu*expnu_prmS1z*pxir**2 - 2*expMU*expMU_prmS1z*expnu**2*pxir**2) + sn_prmS1z*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS1z*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS1z*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmS1z*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmS2x = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmS2x - B*pvr_prmS2x*sv - B_prmS2x*pvr*sv + expMU*expnu*pxir*sxi_prmS2x + expMU*expnu*pxir_prmS2x*sxi + expMU*expnu_prmS2x*pxir*sxi + expMU_prmS2x*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmS2x*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmS2x*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmS2x*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmS2x + sqrtQ_prmS2x) + expMU**2*xi2_prmS2x*(-Q - sqrtQ) - expMU*expMU_prmS2x*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmS2x) + B*B_prmS2x*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmS2x - 2*expMU**2*expnu*expnu_prmS2x*pxir**2 - 2*expMU*expMU_prmS2x*expnu**2*pxir**2) + sn_prmS2x*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS2x*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS2x*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmS2x*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmS2y = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmS2y - B*pvr_prmS2y*sv - B_prmS2y*pvr*sv + expMU*expnu*pxir*sxi_prmS2y + expMU*expnu*pxir_prmS2y*sxi + expMU*expnu_prmS2y*pxir*sxi + expMU_prmS2y*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmS2y*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmS2y*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmS2y*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmS2y + sqrtQ_prmS2y) + expMU**2*xi2_prmS2y*(-Q - sqrtQ) - expMU*expMU_prmS2y*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmS2y) + B*B_prmS2y*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmS2y - 2*expMU**2*expnu*expnu_prmS2y*pxir**2 - 2*expMU*expMU_prmS2y*expnu**2*pxir**2) + sn_prmS2y*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS2y*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS2y*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmS2y*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    Hwcos_prmS2z = inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu*(B*pn*sqrtdeltaR*(-B*pvr*sv_prmS2z - B*pvr_prmS2z*sv - B_prmS2z*pvr*sv + expMU*expnu*pxir*sxi_prmS2z + expMU*expnu*pxir_prmS2z*sxi + expMU*expnu_prmS2z*pxir*sxi + expMU_prmS2z*expnu*pxir*sxi) + B*pn*sqrtdeltaR_prmS2z*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B*pn_prmS2z*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + B_prmS2z*pn*sqrtdeltaR*(-B*pvr*sv + expMU*expnu*pxir*sxi) + sn*(B**2*(-expMU**2*xi2*(Q_prmS2z + sqrtQ_prmS2z) + expMU**2*xi2_prmS2z*(-Q - sqrtQ) - expMU*expMU_prmS2z*xi2*(2*Q + 2*sqrtQ) + 2*pvr*pvr_prmS2z) + B*B_prmS2z*(2*expMU**2*xi2*(-Q - sqrtQ) + 2*pvr**2) - 2*expMU**2*expnu**2*pxir*pxir_prmS2z - 2*expMU**2*expnu*expnu_prmS2z*pxir**2 - 2*expMU*expMU_prmS2z*expnu**2*pxir**2) + sn_prmS2z*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**3*invexpnu_prmS2z*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ*invexpMU**2*invexpMU_prmS2z*invexpnu*(-3*B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + 3*sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2)) + inv2B1psqrtQsqrtQ_prmS2z*invexpMU**3*invexpnu*(-B*pn*sqrtdeltaR*(B*pvr*sv - expMU*expnu*pxir*sxi) + sn*(B**2*(expMU**2*xi2*(-Q - sqrtQ) + pvr**2) - expMU**2*expnu**2*pxir**2))
    HSOL_prmx1 = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmx1 + expMU*expnu_prmx1 + expMU_prmx1*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmx1*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmx1*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmx1*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmx1*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmx1*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmx1*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmx1*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmx2 = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmx2 + expMU*expnu_prmx2 + expMU_prmx2*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmx2*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmx2*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmx2*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmx2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmx2*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmx2*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmx2*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmx3 = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmx3 + expMU*expnu_prmx3 + expMU_prmx3*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmx3*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmx3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmx3*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmx3*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmx3*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmx3*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmx3*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmp1 = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmp1 + expMU*expnu_prmp1)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmp1*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmp1*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmp1*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmp1*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmp1*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmp1*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmp1*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmp2 = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmp2 + expMU*expnu_prmp2)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmp2*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmp2*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmp2*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmp2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmp2*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmp2*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmp2*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmp3 = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmp3 + expMU*expnu_prmp3)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmp3*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmp3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmp3*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmp3*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmp3*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmp3*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmp3*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmS1x = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmS1x + expMU*expnu_prmS1x + expMU_prmS1x*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmS1x*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmS1x*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmS1x*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmS1x*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmS1x*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmS1x*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmS1x*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmS1y = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmS1y + expMU*expnu_prmS1y + expMU_prmS1y*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmS1y*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmS1y*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmS1y*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmS1y*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmS1y*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmS1y*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmS1y*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmS1z = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmS1z + expMU*expnu_prmS1z + expMU_prmS1z*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmS1z*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmS1z*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmS1z*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmS1z*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmS1z*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmS1z*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmS1z*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmS2x = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmS2x + expMU*expnu_prmS2x + expMU_prmS2x*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmS2x*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmS2x*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmS2x*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmS2x*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmS2x*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmS2x*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmS2x*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmS2y = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmS2y + expMU*expnu_prmS2y + expMU_prmS2y*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmS2y*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmS2y*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmS2y*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmS2y*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmS2y*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmS2y*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmS2y*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSOL_prmS2z = expnu**2*invexpMU*invxi2*pxir*s3*(-B_prmS2z + expMU*expnu_prmS2z + expMU_prmS2z*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir*s3*sqrtQ_prmS2z*(B - expMU*expnu)/(deltaT*sqrtQ**2) + expnu**2*invexpMU*invxi2*pxir*s3_prmS2z*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2*pxir_prmS2z*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU*invxi2_prmS2z*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu**2*invexpMU_prmS2z*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT*sqrtQ) + expnu*expnu_prmS2z*invexpMU*invxi2*pxir*s3*(-2*B + 2*expMU*expnu)/(deltaT*sqrtQ) - deltaT_prmS2z*expnu**2*invexpMU*invxi2*pxir*s3*(-B + expMU*expnu)/(deltaT**2*sqrtQ)
    HSONL_prmx1 = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmx1*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmx1*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmx1*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmx1*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmx1*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmx1*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmx1*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmx1*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmx1 + B*mur*pvr_prmx1*sxi + B*mur_prmx1*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmx1 - mucos*pn_prmx1*xi2 - mucos_prmx1*pn*xi2 + sqrtQ*(mur*pvr_prmx1 + mur_prmx1*pvr - nur*pvr_prmx1 - nur_prmx1*pvr + pn*xi2*(-mucos_prmx1 + nucos_prmx1) + pn*xi2_prmx1*(-mucos + nucos) + pn_prmx1*xi2*(-mucos + nucos)) + sqrtQ_prmx1*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmx1*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmx1*mur*pvr*sxi + B_prmx1*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmx1*sv + expMU*expnu*nur*pxir*sv_prmx1*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmx1*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmx1*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmx1*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmx1*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmx1*sv + BR*expMU*expnu*pxir*sv_prmx1*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmx1*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmx1*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmx1*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmx1*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmx1*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmx1*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmx1 - sqrtQ_prmx1)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmx1*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmx1*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmx1*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmx1*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmx2 = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmx2*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmx2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmx2*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmx2*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmx2*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmx2*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmx2*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmx2*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmx2 + B*mur*pvr_prmx2*sxi + B*mur_prmx2*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmx2 - mucos*pn_prmx2*xi2 - mucos_prmx2*pn*xi2 + sqrtQ*(mur*pvr_prmx2 + mur_prmx2*pvr - nur*pvr_prmx2 - nur_prmx2*pvr + pn*xi2*(-mucos_prmx2 + nucos_prmx2) + pn*xi2_prmx2*(-mucos + nucos) + pn_prmx2*xi2*(-mucos + nucos)) + sqrtQ_prmx2*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmx2*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmx2*mur*pvr*sxi + B_prmx2*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmx2*sv + expMU*expnu*nur*pxir*sv_prmx2*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmx2*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmx2*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmx2*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmx2*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmx2*sv + BR*expMU*expnu*pxir*sv_prmx2*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmx2*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmx2*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmx2*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmx2*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmx2*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmx2*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmx2 - sqrtQ_prmx2)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmx2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmx2*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmx2*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmx2*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmx3 = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmx3*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmx3*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmx3*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmx3*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmx3*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmx3*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmx3*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmx3*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmx3 + B*mur*pvr_prmx3*sxi + B*mur_prmx3*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmx3 - mucos*pn_prmx3*xi2 - mucos_prmx3*pn*xi2 + sqrtQ*(mur*pvr_prmx3 + mur_prmx3*pvr - nur*pvr_prmx3 - nur_prmx3*pvr + pn*xi2*(-mucos_prmx3 + nucos_prmx3) + pn*xi2_prmx3*(-mucos + nucos) + pn_prmx3*xi2*(-mucos + nucos)) + sqrtQ_prmx3*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmx3*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmx3*mur*pvr*sxi + B_prmx3*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmx3*sv + expMU*expnu*nur*pxir*sv_prmx3*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmx3*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmx3*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmx3*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmx3*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmx3*sv + BR*expMU*expnu*pxir*sv_prmx3*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmx3*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmx3*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmx3*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmx3*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmx3*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmx3*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmx3 - sqrtQ_prmx3)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmx3*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmx3*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmx3*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmx3*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmp1 = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmp1*xi2 + B*expMU*expnu*nucos*pxir*sn_prmp1*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmp1*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmp1*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmp1*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmp1*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmp1 + B*mur*pvr_prmp1*sxi + B*mur_prmp1*pvr*sxi + B*sxi*(-mucos*pn_prmp1*xi2 - mucos_prmp1*pn*xi2 + sqrtQ*(mur*pvr_prmp1 + mur_prmp1*pvr - nur*pvr_prmp1 - nur_prmp1*pvr + pn*xi2*(-mucos_prmp1 + nucos_prmp1) + pn_prmp1*xi2*(-mucos + nucos)) + sqrtQ_prmp1*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmp1*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmp1*mur*pvr*sxi + B_prmp1*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmp1*sv + expMU*expnu*nur*pxir*sv_prmp1*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmp1*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmp1*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmp1*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmp1*sv + BR*expMU*expnu*pxir*sv_prmp1*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmp1*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmp1*pxir*sv*(-sqrtQ - 1.0) + BR_prmp1*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmp1*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmp1*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmp1 - sqrtQ_prmp1)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmp1*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmp1*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmp1*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmp1*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmp2 = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmp2*xi2 + B*expMU*expnu*nucos*pxir*sn_prmp2*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmp2*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmp2*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmp2*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmp2*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmp2 + B*mur*pvr_prmp2*sxi + B*mur_prmp2*pvr*sxi + B*sxi*(-mucos*pn_prmp2*xi2 - mucos_prmp2*pn*xi2 + sqrtQ*(mur*pvr_prmp2 + mur_prmp2*pvr - nur*pvr_prmp2 - nur_prmp2*pvr + pn*xi2*(-mucos_prmp2 + nucos_prmp2) + pn_prmp2*xi2*(-mucos + nucos)) + sqrtQ_prmp2*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmp2*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmp2*mur*pvr*sxi + B_prmp2*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmp2*sv + expMU*expnu*nur*pxir*sv_prmp2*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmp2*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmp2*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmp2*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmp2*sv + BR*expMU*expnu*pxir*sv_prmp2*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmp2*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmp2*pxir*sv*(-sqrtQ - 1.0) + BR_prmp2*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmp2*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmp2*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmp2 - sqrtQ_prmp2)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmp2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmp2*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmp2*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmp2*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmp3 = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmp3*xi2 + B*expMU*expnu*nucos*pxir*sn_prmp3*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmp3*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmp3*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmp3*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmp3*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmp3 + B*mur*pvr_prmp3*sxi + B*mur_prmp3*pvr*sxi + B*sxi*(-mucos*pn_prmp3*xi2 - mucos_prmp3*pn*xi2 + sqrtQ*(mur*pvr_prmp3 + mur_prmp3*pvr - nur*pvr_prmp3 - nur_prmp3*pvr + pn*xi2*(-mucos_prmp3 + nucos_prmp3) + pn_prmp3*xi2*(-mucos + nucos)) + sqrtQ_prmp3*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmp3*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmp3*mur*pvr*sxi + B_prmp3*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmp3*sv + expMU*expnu*nur*pxir*sv_prmp3*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmp3*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmp3*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmp3*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmp3*sv + BR*expMU*expnu*pxir*sv_prmp3*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmp3*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmp3*pxir*sv*(-sqrtQ - 1.0) + BR_prmp3*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmp3*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmp3*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmp3 - sqrtQ_prmp3)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmp3*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmp3*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmp3*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmp3*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmS1x = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmS1x*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmS1x*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmS1x*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmS1x*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmS1x*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmS1x*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmS1x*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmS1x*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmS1x + B*mur*pvr_prmS1x*sxi + B*mur_prmS1x*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmS1x - mucos*pn_prmS1x*xi2 - mucos_prmS1x*pn*xi2 + sqrtQ*(mur*pvr_prmS1x + mur_prmS1x*pvr - nur*pvr_prmS1x - nur_prmS1x*pvr + pn*xi2*(-mucos_prmS1x + nucos_prmS1x) + pn*xi2_prmS1x*(-mucos + nucos) + pn_prmS1x*xi2*(-mucos + nucos)) + sqrtQ_prmS1x*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmS1x*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmS1x*mur*pvr*sxi + B_prmS1x*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmS1x*sv + expMU*expnu*nur*pxir*sv_prmS1x*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmS1x*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmS1x*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmS1x*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmS1x*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmS1x*sv + BR*expMU*expnu*pxir*sv_prmS1x*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmS1x*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmS1x*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmS1x*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmS1x*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmS1x*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmS1x*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmS1x - sqrtQ_prmS1x)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmS1x*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmS1x*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmS1x*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmS1x*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmS1y = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmS1y*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmS1y*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmS1y*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmS1y*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmS1y*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmS1y*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmS1y*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmS1y*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmS1y + B*mur*pvr_prmS1y*sxi + B*mur_prmS1y*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmS1y - mucos*pn_prmS1y*xi2 - mucos_prmS1y*pn*xi2 + sqrtQ*(mur*pvr_prmS1y + mur_prmS1y*pvr - nur*pvr_prmS1y - nur_prmS1y*pvr + pn*xi2*(-mucos_prmS1y + nucos_prmS1y) + pn*xi2_prmS1y*(-mucos + nucos) + pn_prmS1y*xi2*(-mucos + nucos)) + sqrtQ_prmS1y*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmS1y*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmS1y*mur*pvr*sxi + B_prmS1y*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmS1y*sv + expMU*expnu*nur*pxir*sv_prmS1y*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmS1y*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmS1y*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmS1y*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmS1y*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmS1y*sv + BR*expMU*expnu*pxir*sv_prmS1y*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmS1y*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmS1y*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmS1y*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmS1y*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmS1y*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmS1y*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmS1y - sqrtQ_prmS1y)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmS1y*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmS1y*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmS1y*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmS1y*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmS1z = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmS1z*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmS1z*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmS1z*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmS1z*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmS1z*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmS1z*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmS1z*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmS1z*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmS1z + B*mur*pvr_prmS1z*sxi + B*mur_prmS1z*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmS1z - mucos*pn_prmS1z*xi2 - mucos_prmS1z*pn*xi2 + sqrtQ*(mur*pvr_prmS1z + mur_prmS1z*pvr - nur*pvr_prmS1z - nur_prmS1z*pvr + pn*xi2*(-mucos_prmS1z + nucos_prmS1z) + pn*xi2_prmS1z*(-mucos + nucos) + pn_prmS1z*xi2*(-mucos + nucos)) + sqrtQ_prmS1z*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmS1z*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmS1z*mur*pvr*sxi + B_prmS1z*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmS1z*sv + expMU*expnu*nur*pxir*sv_prmS1z*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmS1z*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmS1z*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmS1z*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmS1z*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmS1z*sv + BR*expMU*expnu*pxir*sv_prmS1z*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmS1z*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmS1z*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmS1z*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmS1z*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmS1z*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmS1z*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmS1z - sqrtQ_prmS1z)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmS1z*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmS1z*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmS1z*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmS1z*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmS2x = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmS2x*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmS2x*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmS2x*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmS2x*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmS2x*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmS2x*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmS2x*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmS2x*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmS2x + B*mur*pvr_prmS2x*sxi + B*mur_prmS2x*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmS2x - mucos*pn_prmS2x*xi2 - mucos_prmS2x*pn*xi2 + sqrtQ*(mur*pvr_prmS2x + mur_prmS2x*pvr - nur*pvr_prmS2x - nur_prmS2x*pvr + pn*xi2*(-mucos_prmS2x + nucos_prmS2x) + pn*xi2_prmS2x*(-mucos + nucos) + pn_prmS2x*xi2*(-mucos + nucos)) + sqrtQ_prmS2x*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmS2x*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmS2x*mur*pvr*sxi + B_prmS2x*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmS2x*sv + expMU*expnu*nur*pxir*sv_prmS2x*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmS2x*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmS2x*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmS2x*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmS2x*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmS2x*sv + BR*expMU*expnu*pxir*sv_prmS2x*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmS2x*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmS2x*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmS2x*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmS2x*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmS2x*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmS2x*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmS2x - sqrtQ_prmS2x)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmS2x*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmS2x*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmS2x*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmS2x*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmS2y = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmS2y*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmS2y*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmS2y*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmS2y*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmS2y*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmS2y*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmS2y*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmS2y*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmS2y + B*mur*pvr_prmS2y*sxi + B*mur_prmS2y*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmS2y - mucos*pn_prmS2y*xi2 - mucos_prmS2y*pn*xi2 + sqrtQ*(mur*pvr_prmS2y + mur_prmS2y*pvr - nur*pvr_prmS2y - nur_prmS2y*pvr + pn*xi2*(-mucos_prmS2y + nucos_prmS2y) + pn*xi2_prmS2y*(-mucos + nucos) + pn_prmS2y*xi2*(-mucos + nucos)) + sqrtQ_prmS2y*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmS2y*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmS2y*mur*pvr*sxi + B_prmS2y*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmS2y*sv + expMU*expnu*nur*pxir*sv_prmS2y*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmS2y*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmS2y*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmS2y*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmS2y*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmS2y*sv + BR*expMU*expnu*pxir*sv_prmS2y*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmS2y*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmS2y*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmS2y*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmS2y*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmS2y*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmS2y*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmS2y - sqrtQ_prmS2y)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmS2y*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmS2y*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmS2y*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmS2y*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    HSONL_prmS2z = expnu*invexpMU**2*invxi2*(-2.0*B*expMU*expnu*nucos*pxir*sn*sqrtQ_prmS2z*xi2 + B*expMU*expnu*nucos*pxir*sn*xi2_prmS2z*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir*sn_prmS2z*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos*pxir_prmS2z*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu*nucos_prmS2z*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU*expnu_prmS2z*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B*expMU_prmS2z*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + B_prmS2z*expMU*expnu*nucos*pxir*sn*xi2*(-2.0*sqrtQ - 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi_prmS2z + B*mur*pvr_prmS2z*sxi + B*mur_prmS2z*pvr*sxi + B*sxi*(-mucos*pn*xi2_prmS2z - mucos*pn_prmS2z*xi2 - mucos_prmS2z*pn*xi2 + sqrtQ*(mur*pvr_prmS2z + mur_prmS2z*pvr - nur*pvr_prmS2z - nur_prmS2z*pvr + pn*xi2*(-mucos_prmS2z + nucos_prmS2z) + pn*xi2_prmS2z*(-mucos + nucos) + pn_prmS2z*xi2*(-mucos + nucos)) + sqrtQ_prmS2z*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B*sxi_prmS2z*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + B_prmS2z*mur*pvr*sxi + B_prmS2z*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + 2.0*expMU*expnu*nur*pxir*sqrtQ_prmS2z*sv + expMU*expnu*nur*pxir*sv_prmS2z*(2.0*sqrtQ + 1.0) + expMU*expnu*nur*pxir_prmS2z*sv*(2.0*sqrtQ + 1.0) + expMU*expnu*nur_prmS2z*pxir*sv*(2.0*sqrtQ + 1.0) + expMU*expnu_prmS2z*nur*pxir*sv*(2.0*sqrtQ + 1.0) + expMU_prmS2z*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) - BR*expMU*expnu*pxir*sqrtQ_prmS2z*sv + BR*expMU*expnu*pxir*sv_prmS2z*(-sqrtQ - 1.0) + BR*expMU*expnu*pxir_prmS2z*sv*(-sqrtQ - 1.0) + BR*expMU*expnu_prmS2z*pxir*sv*(-sqrtQ - 1.0) + BR*expMU_prmS2z*expnu*pxir*sv*(-sqrtQ - 1.0) + BR_prmS2z*expMU*expnu*pxir*sv*(-sqrtQ - 1.0) + B_prmS2z*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0))) + sqrtdeltaR_prmS2z*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU**2*invxi2*(-Q_prmS2z - sqrtQ_prmS2z)*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)**2) + expnu*invexpMU**2*invxi2_prmS2z*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu*invexpMU*invexpMU_prmS2z*invxi2*(-2*B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + 2*sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) + expnu_prmS2z*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT*(Q + sqrtQ)) - deltaT_prmS2z*expnu*invexpMU**2*invxi2*(-B*expMU*expnu*nucos*pxir*sn*xi2*(2.0*sqrtQ + 1.0) + sqrtdeltaR*(B*(B*mur*pvr*sxi + B*sxi*(-mucos*pn*xi2 + sqrtQ*(mur*pvr - nur*pvr + pn*xi2*(-mucos + nucos))) + expMU*expnu*nur*pxir*sv*(2.0*sqrtQ + 1.0)) + BR*expMU*expnu*pxir*sv*(-sqrtQ - 1.0)))/(deltaT**2*(Q + sqrtQ))
    Hs_prmx1 = HSOL_prmx1 + HSONL_prmx1 + Hwcos*wcos_prmx1 + Hwcos_prmx1*wcos + Hwr*wr_prmx1 + Hwr_prmx1*wr + s3*w_prmx1 + s3_prmx1*w
    Hs_prmx2 = HSOL_prmx2 + HSONL_prmx2 + Hwcos*wcos_prmx2 + Hwcos_prmx2*wcos + Hwr*wr_prmx2 + Hwr_prmx2*wr + s3*w_prmx2 + s3_prmx2*w
    Hs_prmx3 = HSOL_prmx3 + HSONL_prmx3 + Hwcos*wcos_prmx3 + Hwcos_prmx3*wcos + Hwr*wr_prmx3 + Hwr_prmx3*wr + s3*w_prmx3 + s3_prmx3*w
    Hs_prmp1 = HSOL_prmp1 + HSONL_prmp1 + Hwcos*wcos_prmp1 + Hwcos_prmp1*wcos + Hwr*wr_prmp1 + Hwr_prmp1*wr + s3*w_prmp1 + s3_prmp1*w
    Hs_prmp2 = HSOL_prmp2 + HSONL_prmp2 + Hwcos*wcos_prmp2 + Hwcos_prmp2*wcos + Hwr*wr_prmp2 + Hwr_prmp2*wr + s3*w_prmp2 + s3_prmp2*w
    Hs_prmp3 = HSOL_prmp3 + HSONL_prmp3 + Hwcos*wcos_prmp3 + Hwcos_prmp3*wcos + Hwr*wr_prmp3 + Hwr_prmp3*wr + s3*w_prmp3 + s3_prmp3*w
    Hs_prmS1x = HSOL_prmS1x + HSONL_prmS1x + Hwcos*wcos_prmS1x + Hwcos_prmS1x*wcos + Hwr*wr_prmS1x + Hwr_prmS1x*wr + s3*w_prmS1x + s3_prmS1x*w
    Hs_prmS1y = HSOL_prmS1y + HSONL_prmS1y + Hwcos*wcos_prmS1y + Hwcos_prmS1y*wcos + Hwr*wr_prmS1y + Hwr_prmS1y*wr + s3*w_prmS1y + s3_prmS1y*w
    Hs_prmS1z = HSOL_prmS1z + HSONL_prmS1z + Hwcos*wcos_prmS1z + Hwcos_prmS1z*wcos + Hwr*wr_prmS1z + Hwr_prmS1z*wr + s3*w_prmS1z + s3_prmS1z*w
    Hs_prmS2x = HSOL_prmS2x + HSONL_prmS2x + Hwcos*wcos_prmS2x + Hwcos_prmS2x*wcos + Hwr*wr_prmS2x + Hwr_prmS2x*wr + s3*w_prmS2x + s3_prmS2x*w
    Hs_prmS2y = HSOL_prmS2y + HSONL_prmS2y + Hwcos*wcos_prmS2y + Hwcos_prmS2y*wcos + Hwr*wr_prmS2y + Hwr_prmS2y*wr + s3*w_prmS2y + s3_prmS2y*w
    Hs_prmS2z = HSOL_prmS2z + HSONL_prmS2z + Hwcos*wcos_prmS2z + Hwcos_prmS2z*wcos + Hwr*wr_prmS2z + Hwr_prmS2z*wr + s3*w_prmS2z + s3_prmS2z*w
    Hss_prmx1 = u3*(3.0*sn*sn_prmx1 - 1.0*sx*sx_prmx1 - 1.0*sy*sy_prmx1 - 1.0*sz*sz_prmx1) + u3_prmx1*(1.5*sn**2 - 0.5*sx**2 - 0.5*sy**2 - 0.5*sz**2)
    Hss_prmx2 = u3*(3.0*sn*sn_prmx2 - 1.0*sx*sx_prmx2 - 1.0*sy*sy_prmx2 - 1.0*sz*sz_prmx2) + u3_prmx2*(1.5*sn**2 - 0.5*sx**2 - 0.5*sy**2 - 0.5*sz**2)
    Hss_prmx3 = u3*(3.0*sn*sn_prmx3 - 1.0*sx*sx_prmx3 - 1.0*sy*sy_prmx3 - 1.0*sz*sz_prmx3) + u3_prmx3*(1.5*sn**2 - 0.5*sx**2 - 0.5*sy**2 - 0.5*sz**2)
    Hss_prmp1 = u3*(3.0*sn*sn_prmp1 - 1.0*sx*sx_prmp1 - 1.0*sy*sy_prmp1 - 1.0*sz*sz_prmp1)
    Hss_prmp2 = u3*(3.0*sn*sn_prmp2 - 1.0*sx*sx_prmp2 - 1.0*sy*sy_prmp2 - 1.0*sz*sz_prmp2)
    Hss_prmp3 = u3*(3.0*sn*sn_prmp3 - 1.0*sx*sx_prmp3 - 1.0*sy*sy_prmp3 - 1.0*sz*sz_prmp3)
    Hss_prmS1x = u3*(3.0*sn*sn_prmS1x - 1.0*sx*sx_prmS1x - 1.0*sy*sy_prmS1x - 1.0*sz*sz_prmS1x)
    Hss_prmS1y = u3*(3.0*sn*sn_prmS1y - 1.0*sx*sx_prmS1y - 1.0*sy*sy_prmS1y - 1.0*sz*sz_prmS1y)
    Hss_prmS1z = u3*(3.0*sn*sn_prmS1z - 1.0*sx*sx_prmS1z - 1.0*sy*sy_prmS1z - 1.0*sz*sz_prmS1z)
    Hss_prmS2x = u3*(3.0*sn*sn_prmS2x - 1.0*sx*sx_prmS2x - 1.0*sy*sy_prmS2x - 1.0*sz*sz_prmS2x)
    Hss_prmS2y = u3*(3.0*sn*sn_prmS2y - 1.0*sx*sx_prmS2y - 1.0*sy*sy_prmS2y - 1.0*sz*sz_prmS2y)
    Hss_prmS2z = u3*(3.0*sn*sn_prmS2z - 1.0*sx*sx_prmS2z - 1.0*sy*sy_prmS2z - 1.0*sz*sz_prmS2z)
    dheffSSv2_prmx1 = chi2_prmx1*coeff02dSS + chi2_prmx1*coeff12dSS*eta + chi2_prmx1*coeff22dSS*eta2 + chi2_prmx1*coeff32dSS*eta3 + chi3_prmx1*coeff03dSS + chi3_prmx1*coeff13dSS*eta + chi3_prmx1*coeff23dSS*eta2 + chi3_prmx1*coeff33dSS*eta3 + chi_prmx1*coeff01dSS + chi_prmx1*coeff11dSS*eta + chi_prmx1*coeff21dSS*eta2 + chi_prmx1*coeff31dSS*eta3
    dheffSSv2_prmx2 = chi2_prmx2*coeff02dSS + chi2_prmx2*coeff12dSS*eta + chi2_prmx2*coeff22dSS*eta2 + chi2_prmx2*coeff32dSS*eta3 + chi3_prmx2*coeff03dSS + chi3_prmx2*coeff13dSS*eta + chi3_prmx2*coeff23dSS*eta2 + chi3_prmx2*coeff33dSS*eta3 + chi_prmx2*coeff01dSS + chi_prmx2*coeff11dSS*eta + chi_prmx2*coeff21dSS*eta2 + chi_prmx2*coeff31dSS*eta3
    dheffSSv2_prmx3 = chi2_prmx3*coeff02dSS + chi2_prmx3*coeff12dSS*eta + chi2_prmx3*coeff22dSS*eta2 + chi2_prmx3*coeff32dSS*eta3 + chi3_prmx3*coeff03dSS + chi3_prmx3*coeff13dSS*eta + chi3_prmx3*coeff23dSS*eta2 + chi3_prmx3*coeff33dSS*eta3 + chi_prmx3*coeff01dSS + chi_prmx3*coeff11dSS*eta + chi_prmx3*coeff21dSS*eta2 + chi_prmx3*coeff31dSS*eta3
    dheffSSv2_prmp1 = chi2_prmp1*coeff02dSS + chi2_prmp1*coeff12dSS*eta + chi2_prmp1*coeff22dSS*eta2 + chi2_prmp1*coeff32dSS*eta3 + chi3_prmp1*coeff03dSS + chi3_prmp1*coeff13dSS*eta + chi3_prmp1*coeff23dSS*eta2 + chi3_prmp1*coeff33dSS*eta3 + chi_prmp1*coeff01dSS + chi_prmp1*coeff11dSS*eta + chi_prmp1*coeff21dSS*eta2 + chi_prmp1*coeff31dSS*eta3
    dheffSSv2_prmp2 = chi2_prmp2*coeff02dSS + chi2_prmp2*coeff12dSS*eta + chi2_prmp2*coeff22dSS*eta2 + chi2_prmp2*coeff32dSS*eta3 + chi3_prmp2*coeff03dSS + chi3_prmp2*coeff13dSS*eta + chi3_prmp2*coeff23dSS*eta2 + chi3_prmp2*coeff33dSS*eta3 + chi_prmp2*coeff01dSS + chi_prmp2*coeff11dSS*eta + chi_prmp2*coeff21dSS*eta2 + chi_prmp2*coeff31dSS*eta3
    dheffSSv2_prmp3 = chi2_prmp3*coeff02dSS + chi2_prmp3*coeff12dSS*eta + chi2_prmp3*coeff22dSS*eta2 + chi2_prmp3*coeff32dSS*eta3 + chi3_prmp3*coeff03dSS + chi3_prmp3*coeff13dSS*eta + chi3_prmp3*coeff23dSS*eta2 + chi3_prmp3*coeff33dSS*eta3 + chi_prmp3*coeff01dSS + chi_prmp3*coeff11dSS*eta + chi_prmp3*coeff21dSS*eta2 + chi_prmp3*coeff31dSS*eta3
    dheffSSv2_prmS1x = chi2_prmS1x*coeff02dSS + chi2_prmS1x*coeff12dSS*eta + chi2_prmS1x*coeff22dSS*eta2 + chi2_prmS1x*coeff32dSS*eta3 + chi3_prmS1x*coeff03dSS + chi3_prmS1x*coeff13dSS*eta + chi3_prmS1x*coeff23dSS*eta2 + chi3_prmS1x*coeff33dSS*eta3 + chi_prmS1x*coeff01dSS + chi_prmS1x*coeff11dSS*eta + chi_prmS1x*coeff21dSS*eta2 + chi_prmS1x*coeff31dSS*eta3
    dheffSSv2_prmS1y = chi2_prmS1y*coeff02dSS + chi2_prmS1y*coeff12dSS*eta + chi2_prmS1y*coeff22dSS*eta2 + chi2_prmS1y*coeff32dSS*eta3 + chi3_prmS1y*coeff03dSS + chi3_prmS1y*coeff13dSS*eta + chi3_prmS1y*coeff23dSS*eta2 + chi3_prmS1y*coeff33dSS*eta3 + chi_prmS1y*coeff01dSS + chi_prmS1y*coeff11dSS*eta + chi_prmS1y*coeff21dSS*eta2 + chi_prmS1y*coeff31dSS*eta3
    dheffSSv2_prmS1z = chi2_prmS1z*coeff02dSS + chi2_prmS1z*coeff12dSS*eta + chi2_prmS1z*coeff22dSS*eta2 + chi2_prmS1z*coeff32dSS*eta3 + chi3_prmS1z*coeff03dSS + chi3_prmS1z*coeff13dSS*eta + chi3_prmS1z*coeff23dSS*eta2 + chi3_prmS1z*coeff33dSS*eta3 + chi_prmS1z*coeff01dSS + chi_prmS1z*coeff11dSS*eta + chi_prmS1z*coeff21dSS*eta2 + chi_prmS1z*coeff31dSS*eta3
    dheffSSv2_prmS2x = chi2_prmS2x*coeff02dSS + chi2_prmS2x*coeff12dSS*eta + chi2_prmS2x*coeff22dSS*eta2 + chi2_prmS2x*coeff32dSS*eta3 + chi3_prmS2x*coeff03dSS + chi3_prmS2x*coeff13dSS*eta + chi3_prmS2x*coeff23dSS*eta2 + chi3_prmS2x*coeff33dSS*eta3 + chi_prmS2x*coeff01dSS + chi_prmS2x*coeff11dSS*eta + chi_prmS2x*coeff21dSS*eta2 + chi_prmS2x*coeff31dSS*eta3
    dheffSSv2_prmS2y = chi2_prmS2y*coeff02dSS + chi2_prmS2y*coeff12dSS*eta + chi2_prmS2y*coeff22dSS*eta2 + chi2_prmS2y*coeff32dSS*eta3 + chi3_prmS2y*coeff03dSS + chi3_prmS2y*coeff13dSS*eta + chi3_prmS2y*coeff23dSS*eta2 + chi3_prmS2y*coeff33dSS*eta3 + chi_prmS2y*coeff01dSS + chi_prmS2y*coeff11dSS*eta + chi_prmS2y*coeff21dSS*eta2 + chi_prmS2y*coeff31dSS*eta3
    dheffSSv2_prmS2z = chi2_prmS2z*coeff02dSS + chi2_prmS2z*coeff12dSS*eta + chi2_prmS2z*coeff22dSS*eta2 + chi2_prmS2z*coeff32dSS*eta3 + chi3_prmS2z*coeff03dSS + chi3_prmS2z*coeff13dSS*eta + chi3_prmS2z*coeff23dSS*eta2 + chi3_prmS2z*coeff33dSS*eta3 + chi_prmS2z*coeff01dSS + chi_prmS2z*coeff11dSS*eta + chi_prmS2z*coeff21dSS*eta2 + chi_prmS2z*coeff31dSS*eta3
    H_prmx1 = Hns_prmx1 + Hs_prmx1 + Hss_prmx1 + dheffSSv2*eta*u4_prmx1*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2) + dheffSSv2_prmx1*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmx2 = Hns_prmx2 + Hs_prmx2 + Hss_prmx2 + dheffSSv2*eta*u4_prmx2*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2) + dheffSSv2_prmx2*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmx3 = Hns_prmx3 + Hs_prmx3 + Hss_prmx3 + dheffSSv2*eta*u4_prmx3*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2) + dheffSSv2_prmx3*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmp1 = Hns_prmp1 + Hs_prmp1 + Hss_prmp1 + dheffSSv2_prmp1*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmp2 = Hns_prmp2 + Hs_prmp2 + Hss_prmp2 + dheffSSv2_prmp2*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmp3 = Hns_prmp3 + Hs_prmp3 + Hss_prmp3 + dheffSSv2_prmp3*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmS1x = Hns_prmS1x + Hs_prmS1x + Hss_prmS1x + 2*S1x*dheffSSv2*eta*u4 + dheffSSv2_prmS1x*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmS1y = Hns_prmS1y + Hs_prmS1y + Hss_prmS1y + 2*S1y*dheffSSv2*eta*u4 + dheffSSv2_prmS1y*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmS1z = Hns_prmS1z + Hs_prmS1z + Hss_prmS1z + 2*S1z*dheffSSv2*eta*u4 + dheffSSv2_prmS1z*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmS2x = Hns_prmS2x + Hs_prmS2x + Hss_prmS2x + 2*S2x*dheffSSv2*eta*u4 + dheffSSv2_prmS2x*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmS2y = Hns_prmS2y + Hs_prmS2y + Hss_prmS2y + 2*S2y*dheffSSv2*eta*u4 + dheffSSv2_prmS2y*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    H_prmS2z = Hns_prmS2z + Hs_prmS2z + Hss_prmS2z + 2*S2z*dheffSSv2*eta*u4 + dheffSSv2_prmS2z*eta*u4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmx1 = 0.70710678118655*H_prmx1*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmx2 = 0.70710678118655*H_prmx2*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmx3 = 0.70710678118655*H_prmx3*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmp1 = 0.70710678118655*H_prmp1*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmp2 = 0.70710678118655*H_prmp2*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmp3 = 0.70710678118655*H_prmp3*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmS1x = 0.70710678118655*H_prmS1x*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmS1y = 0.70710678118655*H_prmS1y*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmS1z = 0.70710678118655*H_prmS1z*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmS2x = 0.70710678118655*H_prmS2x*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmS2y = 0.70710678118655*H_prmS2y*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    Hreal_prmS2z = 0.70710678118655*H_prmS2z*eta/np.sqrt(eta*(H - 1.0) + 0.5)
    return np.array([Hreal_prmx, Hreal_prmy, Hreal_prmz, Hreal_prmp1, Hreal_prmp2, Hreal_prmp3, Hreal_prmS1x, Hreal_prmS1y, Hreal_prmS1z, Hreal_prmS2x, Hreal_prmS2y, Hreal_prmS2z])
