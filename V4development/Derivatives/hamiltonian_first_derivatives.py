from __future__ import division
import numpy as np
def v4P_compute_ham_x_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    r_prmx = x/np.sqrt(x**2 + y**2 + z**2)
    u_prmx = -r_prmx/r**2
    L3_prmx = p2
    L2_prmx = -p3
    Lnorm_prmx = (L2*L2_prmx + L3*L3_prmx)/np.sqrt(L1**2 + L2**2 + L3**2)
    Lhat3_prmx = -L3*Lnorm_prmx/Lnorm**2 + L3_prmx/Lnorm
    Lhat2_prmx = -L2*Lnorm_prmx/Lnorm**2 + L2_prmx/Lnorm
    Lhat1_prmx = -L1*Lnorm_prmx/Lnorm**2
    S2dotLhat_prmx = Lhat1_prmx*S2x + Lhat2_prmx*S2y + Lhat3_prmx*S2z
    S1dotLhat_prmx = Lhat1_prmx*S1x + Lhat2_prmx*S1y + Lhat3_prmx*S1z
    S1perp3_prmx = -Lhat3*S1dotLhat_prmx - Lhat3_prmx*S1dotLhat
    S1perp2_prmx = -Lhat2*S1dotLhat_prmx - Lhat2_prmx*S1dotLhat
    S1perp1_prmx = -Lhat1*S1dotLhat_prmx - Lhat1_prmx*S1dotLhat
    S2perp3_prmx = -Lhat3*S2dotLhat_prmx - Lhat3_prmx*S2dotLhat
    S2perp2_prmx = -Lhat2*S2dotLhat_prmx - Lhat2_prmx*S2dotLhat
    S2perp1_prmx = -Lhat1*S2dotLhat_prmx - Lhat1_prmx*S2dotLhat
    Sperp3_prmx = S1perp3_prmx + S2perp3_prmx
    Sperp2_prmx = S1perp2_prmx + S2perp2_prmx
    Sperp1_prmx = S1perp1_prmx + S2perp1_prmx
    n3_prmx = -r_prmx*z/r**2
    n2_prmx = -r_prmx*y/r**2
    n1_prmx = 1/r - r_prmx*x/r**2
    lambdavec3_prmx = Lhat1*n2_prmx + Lhat1_prmx*n2 - Lhat2*n3_prmx - Lhat2_prmx*n3
    lambdavec2_prmx = -Lhat1*n3_prmx - Lhat1_prmx*n3 + Lhat3*n1_prmx + Lhat3_prmx*n1
    lambdavec1_prmx = Lhat2*n3_prmx + Lhat2_prmx*n3 - Lhat3*n2_prmx - Lhat3_prmx*n2
    lambdavecnorm_prmx = (lambdavec1*lambdavec1_prmx + lambdavec2*lambdavec2_prmx + lambdavec3*lambdavec3_prmx)/np.sqrt(lambdavec1**2 + lambdavec2**2 + lambdavec3**2)
    lambdahat3_prmx = -lambdavec3*lambdavecnorm_prmx/lambdavecnorm**2 + lambdavec3_prmx/lambdavecnorm
    lambdahat2_prmx = -lambdavec2*lambdavecnorm_prmx/lambdavecnorm**2 + lambdavec2_prmx/lambdavecnorm
    lambdahat1_prmx = -lambdavec1*lambdavecnorm_prmx/lambdavecnorm**2 + lambdavec1_prmx/lambdavecnorm
    lambdahat_dot_e3prov_prmx = e3prov1*lambdahat1_prmx + e3prov2*lambdahat2_prmx + e3prov3*lambdahat3_prmx
    lambdahat_cross_e3prov3_prmx = -e3prov1*lambdahat2_prmx + e3prov2*lambdahat1_prmx
    lambdahat_cross_e3prov2_prmx = e3prov1*lambdahat3_prmx - e3prov3*lambdahat1_prmx
    lambdahat_cross_e3prov1_prmx = -e3prov2*lambdahat3_prmx + e3prov3*lambdahat2_prmx
    e3prov_dot_n_prmx = e3prov1*n1_prmx + e3prov2*n2_prmx + e3prov3*n3_prmx
    condition_e3_lhs_prmx = -e3prov_dot_n_prmx*np.sign(e3prov_dot_n)
    e3_gt_bound_prmx = -condition_e3_lhs_prmx*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmx*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmx/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmx = -condition_e3_lhs_prmx*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmx*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmx/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmx = e3_gt_bound_prmx*e3prov1 + e3_leq_bound*(lambdahat1*lambdahat_dot_e3prov_prmx*(1 - cos_0_1_deg) + lambdahat1_prmx*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmx*sin_0_1_deg) + e3_leq_bound_prmx*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmx = e3_gt_bound_prmx*e3prov2 + e3_leq_bound*(lambdahat2*lambdahat_dot_e3prov_prmx*(1 - cos_0_1_deg) + lambdahat2_prmx*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmx*sin_0_1_deg) + e3_leq_bound_prmx*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmx = e3_gt_bound_prmx*e3prov3 + e3_leq_bound*(lambdahat3*lambdahat_dot_e3prov_prmx*(1 - cos_0_1_deg) + lambdahat3_prmx*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmx*sin_0_1_deg) + e3_leq_bound_prmx*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmx = e31*n2_prmx + e31_prmx*n2 - e32*n1_prmx - e32_prmx*n1
    xi2_prmx = -e31*n3_prmx - e31_prmx*n3 + e33*n1_prmx + e33_prmx*n1
    xi1_prmx = e32*n3_prmx + e32_prmx*n3 - e33*n2_prmx - e33_prmx*n2
    v3_prmx = n1*xi2_prmx + n1_prmx*xi2 - n2*xi1_prmx - n2_prmx*xi1
    v2_prmx = -n1*xi3_prmx - n1_prmx*xi3 + n3*xi1_prmx + n3_prmx*xi1
    v1_prmx = n2*xi3_prmx + n2_prmx*xi3 - n3*xi2_prmx - n3_prmx*xi2
    costheta_prmx = e31*n1_prmx + e31_prmx*n1 + e32*n2_prmx + e32_prmx*n2 + e33*n3_prmx + e33_prmx*n3
    sin2theta_prmx = -2*costheta*costheta_prmx
    xisq_prmx = sin2theta_prmx
    w2_prmx = 2*r*r_prmx
    Sigma_prmx = 2*a**2*costheta*costheta_prmx + 2*r*r_prmx
    Dinv_prmx = (eta*u**2*u_prmx*(156 - 18*eta) + 12*eta*u*u_prmx)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)
    Dinvprime_prmx = -u**2*(eta*u**2*(156 - 18*eta) + 12*eta*u)*(eta*u**2*u_prmx*(18*eta - 156) - 12*eta*u*u_prmx)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)**2 - u**2*(eta*u*u_prmx*(312 - 36*eta) + 12*eta*u_prmx)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1) + u*u_prmx*(-2*eta*u**2*(156 - 18*eta) - 24*eta*u)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)
    omegatilde_prmx = 2*a*r_prmx
    chi_prmx = (Lhat1_prmx*Skerr1 + Lhat2_prmx*Skerr2 + Lhat3_prmx*Skerr3)/(1 - 2*eta) + (Skerr1*Sperp1_prmx/2 + Skerr2*Sperp2_prmx/2 + Skerr3*Sperp3_prmx/2)/(Skerrmag*(1.0 - 2.0*eta))
    K_prmx = -177.4974*chi**2*chi_prmx*eta**3 - 1.280874*chi**2*chi_prmx*eta + 4.30977*chi**2*chi_prmx + 62.3492*chi*chi_prmx*eta**3 + 12.32932*chi*chi_prmx*eta**2 - 2.76172*chi*chi_prmx - 27.5201*chi_prmx*eta**3 + 17.3736*chi_prmx*eta**2 + 2.26831*chi_prmx*eta - 1.62045*chi_prmx
    etaKminus1_prmx = K_prmx*eta
    Delta0_prmx = K*K_prmx*eta + K_prmx*(K*eta - 2)
    Delta1_prmx = etaKminus1*(-2*Delta0_prmx - 2*K_prmx) + etaKminus1_prmx*(-2*Delta0 - 2*K)
    Delta2_prmx = -2*Delta0*a**2*etaKminus1*etaKminus1_prmx - Delta0_prmx*a**2*etaKminus1**2 + Delta1*(Delta1_prmx/2 - 2*etaKminus1_prmx) + Delta1_prmx*(Delta1/2 - 2*etaKminus1)
    Delta3_prmx = -Delta1**2*Delta1_prmx + Delta1**2*etaKminus1_prmx + 2*Delta1*Delta1_prmx*etaKminus1 + Delta1*Delta2_prmx - 2*Delta1*a**2*etaKminus1*etaKminus1_prmx + Delta1_prmx*Delta2 - Delta1_prmx*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmx + 2*etaKminus1_prmx) + etaKminus1_prmx*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmx = Delta1**3*Delta1_prmx - 2*Delta1**3*etaKminus1_prmx/3 - 2*Delta1**2*Delta1_prmx*etaKminus1 - Delta1**2*Delta2_prmx - 2*Delta1*Delta1_prmx*Delta2 + Delta1*(2*Delta2*etaKminus1_prmx + 2*Delta2_prmx*etaKminus1 + Delta3_prmx) + Delta1_prmx*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmx - 2*Delta3*etaKminus1_prmx - 2*Delta3_prmx*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmx - 2*Delta2_prmx)/2 + a**2*etaKminus1*etaKminus1_prmx*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmx*(376 - 123*np.pi**2/8)/6
    Delta5_prmx = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmx - 3*Delta1*Delta2_prmx - 3*Delta1_prmx*Delta2 + 3*Delta3_prmx)/3 + (4*Delta1**3*Delta1_prmx - 4*Delta1**2*Delta2_prmx - 8*Delta1*Delta1_prmx*Delta2 + 4*Delta1*Delta3_prmx + 4*Delta1_prmx*Delta3 + 4*Delta2*Delta2_prmx - 4*Delta4_prmx)/(2*etaKminus1) - etaKminus1_prmx*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmx - 5*Delta1**3*Delta2_prmx - 15*Delta1**2*Delta1_prmx*Delta2 + 5*Delta1**2*Delta3_prmx + 10*Delta1*Delta1_prmx*Delta3 + 10*Delta1*Delta2*Delta2_prmx - 5*Delta1*Delta4_prmx + 5*Delta1_prmx*Delta2**2 - 5*Delta1_prmx*Delta4 - 5*Delta2*Delta3_prmx - 5*Delta2_prmx*Delta3)/(5*etaKminus1**2) + etaKminus1_prmx*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmx*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmx = 128*etaKminus1*etaKminus1_prmx/5
    logarg_prmx = u*(Delta1_prmx + u*(Delta2_prmx + u*(Delta3_prmx + u*(Delta4_prmx + u*(Delta5l*u_prmx/u + Delta5l_prmx*np.log(u) + Delta5_prmx) + u_prmx*(Delta5 + Delta5l*np.log(u))) + u_prmx*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))) + u_prmx*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))) + u_prmx*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))))) + u_prmx*(Delta1 + u*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))))
    Deltaucalib_prmx = eta*(Delta0_prmx + logarg_prmx*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmx = eta*logarg_prmx*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmx + u*(2*Delta2_prmx + u*(3*Delta3_prmx + u*(4*Delta4_prmx + u*(5*Delta5l*u_prmx/u + 5*Delta5l_prmx*np.log(u) + 5*Delta5_prmx) + u_prmx*(5*Delta5 + 5*Delta5l*np.log(u))) + u_prmx*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u)))) + u_prmx*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))) + u_prmx*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1) + eta*u*u_prmx*(-2*Delta1 - 2*u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)
    Deltaubar_prmx = 2*a**2*u*u_prmx + (2*u_prmx - etaKminus1_prmx/etaKminus1**2)/etaKminus1 + etaKminus1_prmx*(-2*u - 1/etaKminus1)/etaKminus1**2
    Deltaubarprime_prmx = -6*a**2*u**2*u_prmx - 4*u*u_prmx/etaKminus1 + 2*etaKminus1_prmx*u**2/etaKminus1**2
    Deltau_prmx = (Deltaubar*Deltaucalib_prmx + Deltaubar_prmx*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmx = Deltaubar*Deltaucalibprime_prmx + Deltaubarprime*Deltaucalib_prmx + Deltaubarprime_prmx*Deltaucalib + Deltaubar_prmx*Deltaucalibprime
    Deltatprime_prmx = 2*Deltau*r_prmx + 2*Deltauprime*r*r_prmx + Deltauprime_prmx*r**2 + 2*Deltau_prmx*r
    Deltat_prmx = 2*Deltau*r*r_prmx + Deltau_prmx*r**2
    Deltar_prmx = Deltat*Dinv_prmx + Deltat_prmx*Dinv
    Deltarprime_prmx = Deltat*Dinvprime_prmx + Deltatprime*Dinv_prmx + Deltatprime_prmx*Dinv + Deltat_prmx*Dinvprime
    Lambt_prmx = (Deltat*a**2*sin2theta_prmx + Deltat_prmx*a**2*sin2theta - 2*w2*w2_prmx)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmx = (Deltar*Deltat_prmx + Deltar_prmx*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmx*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmx = 4.0*r*w2_prmx*np.sqrt(Deltar*Deltat)/w2**3 - 2.0*r_prmx*np.sqrt(Deltar*Deltat)/w2**2 + (Deltar*Deltatprime_prmx + Deltarprime*Deltat_prmx + Deltarprime_prmx*Deltat + Deltar_prmx*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmx*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmx/2 + Deltar_prmx*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmx/2 - Deltar_prmx*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmx = csi_prmx*(1 - np.abs(tortoise - 1))
    csi2_prmx = csi_prmx*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmx = csi2*(n1_prmx*p1 + n2_prmx*p2 + n3_prmx*p3) + csi2_prmx*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmx = n3*prT_prmx*(-1 + 1/csi1) + n3_prmx*prT*(-1 + 1/csi1) - csi1_prmx*n3*prT/csi1**2
    phat2_prmx = n2*prT_prmx*(-1 + 1/csi1) + n2_prmx*prT*(-1 + 1/csi1) - csi1_prmx*n2*prT/csi1**2
    phat1_prmx = n1*prT_prmx*(-1 + 1/csi1) + n1_prmx*prT*(-1 + 1/csi1) - csi1_prmx*n1*prT/csi1**2
    pdotxir_prmx = r*(phat1*xi1_prmx + phat1_prmx*xi1 + phat2*xi2_prmx + phat2_prmx*xi2 + phat3*xi3_prmx + phat3_prmx*xi3) + r_prmx*(phat1*xi1 + phat2*xi2 + phat3*xi3)
    pdotn_prmx = n1*phat1_prmx + n1_prmx*phat1 + n2*phat2_prmx + n2_prmx*phat2 + n3*phat3_prmx + n3_prmx*phat3
    pdotvr_prmx = r*(phat1*v1_prmx + phat1_prmx*v1 + phat2*v2_prmx + phat2_prmx*v2 + phat3*v3_prmx + phat3_prmx*v3) + r_prmx*(phat1*v1 + phat2*v2 + phat3*v3)
    pphi_prmx = pdotxir_prmx
    Qcoeff2_prmx = -sin2theta_prmx/(Sigma*sin2theta**2) - Sigma_prmx/(Sigma**2*sin2theta)
    Qcoeff1_prmx = -Sigma*sin2theta_prmx/(Lambt*sin2theta**2) + Sigma_prmx/(Lambt*sin2theta) - Lambt_prmx*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmx = 2*Deltar*pdotn*pdotn_prmx/Sigma - Deltar*Sigma_prmx*pdotn**2/Sigma**2 + Deltar_prmx*pdotn**2/Sigma
    Q_prmx = DrSipn2_prmx + 2*Qcoeff1*pdotxir*pdotxir_prmx + Qcoeff1_prmx*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmx + Qcoeff2_prmx*pdotvr**2
    Qminus1_prmx = Q_prmx
    Jtilde_prmx = Deltar_prmx/(2*np.sqrt(Deltar))
    exp2mu_prmx = Sigma_prmx
    expmu_prmx = exp2mu_prmx/(2*np.sqrt(exp2mu))
    Brtilde_prmx = (np.sqrt(Deltar)*Deltatprime_prmx - 2*Deltat_prmx + Deltar_prmx*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmx/2 - Deltar_prmx*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmx = Deltat_prmx/(2*np.sqrt(Deltat))
    exp2nu_prmx = Deltat*Sigma_prmx/Lambt - Deltat*Lambt_prmx*Sigma/Lambt**2 + Deltat_prmx*Sigma/Lambt
    expnu_prmx = exp2nu_prmx/(2*np.sqrt(exp2nu))
    omega_prmx = omegatilde_prmx/Lambt - Lambt_prmx*omegatilde/Lambt**2
    Lambtprime_prmx = -Deltatprime*a**2*sin2theta_prmx - Deltatprime_prmx*a**2*sin2theta + 8*r**2*r_prmx + r_prmx*(4*a**2 + 4*r**2)
    mucostheta_prmx = a**2*costheta_prmx/Sigma - Sigma_prmx*a**2*costheta/Sigma**2
    nucostheta_prmx = a**2*costheta*w2*(-Deltat_prmx + w2_prmx)/(Lambt*Sigma) + a**2*costheta*w2_prmx*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmx*w2*(-Deltat + w2)/(Lambt*Sigma) - Sigma_prmx*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmx*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmx = -2*Deltat*a**2*costheta*omegatilde_prmx/Lambt**2 - 2*Deltat*a**2*costheta_prmx*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmx*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmx*a**2*costheta*omegatilde/Lambt**2
    mur_prmx = r_prmx/Sigma - Sigma_prmx*r/Sigma**2 + Deltar_prmx/(2*Deltar**(3/2))
    nur_prmx = r_prmx/Sigma - Sigma_prmx*r/Sigma**2 + w2*(-4*Deltat*r_prmx + Deltatprime*w2_prmx + Deltatprime_prmx*w2 - 4*Deltat_prmx*r)/(2*Deltat*Lambt) + w2_prmx*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmx*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmx*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmx = (-Lambtprime*omegatilde_prmx - Lambtprime_prmx*omegatilde + Lambt_prmx*omegatildeprime)/Lambt**2 + Lambt_prmx*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmx = 442.443*chi**2*chi_prmx*eta**2 - 1705.953*chi**2*chi_prmx*eta + 198.5961*chi**2*chi_prmx - 686.626*chi*chi_prmx*eta + 2495.29*chi_prmx*eta**2
    sigmacoeffTerm3_prmx = 3*dSO*eta*u**2*u_prmx + dSO_prmx*eta*u**3
    sigmacoeffTerm2_prmx = eta*(eta*(r*(-12.25*DrSipn2*u*u_prmx - 6.125*DrSipn2_prmx*u**2 + 2.83333333333333*Qminus1*u*u_prmx + 1.41666666666667*Qminus1_prmx*u**2 + r*(11.25*DrSipn2**2*u*u_prmx + 11.25*DrSipn2*DrSipn2_prmx*u**2 - 3.25*DrSipn2*Qminus1*u*u_prmx - 1.625*DrSipn2*Qminus1_prmx*u**2 - 1.625*DrSipn2_prmx*Qminus1*u**2) + r_prmx*(5.625*DrSipn2**2*u**2 - 1.625*DrSipn2*Qminus1*u**2)) + r_prmx*(-6.125*DrSipn2*u**2 + 1.41666666666667*Qminus1*u**2 + r*(5.625*DrSipn2**2*u**2 - 1.625*DrSipn2*Qminus1*u**2)) - 4.66666666666667*u*u_prmx) + r*(-1.33333333333333*DrSipn2*u*u_prmx - 0.666666666666667*DrSipn2_prmx*u**2 - 6.05555555555556*Qminus1*u*u_prmx - 3.02777777777778*Qminus1_prmx*u**2 + r*(0.5*DrSipn2*Qminus1*u*u_prmx + 0.25*DrSipn2*Qminus1_prmx*u**2 + 0.25*DrSipn2_prmx*Qminus1*u**2 - 0.625*Qminus1**2*u*u_prmx - 0.625*Qminus1*Qminus1_prmx*u**2) + r_prmx*(0.25*DrSipn2*Qminus1*u**2 - 0.3125*Qminus1**2*u**2)) + r_prmx*(-0.666666666666667*DrSipn2*u**2 - 3.02777777777778*Qminus1*u**2 + r*(0.25*DrSipn2*Qminus1*u**2 - 0.3125*Qminus1**2*u**2)) - 12.4444444444444*u*u_prmx)
    sigmacoeffTerm1_prmx = eta*(-3*DrSipn2_prmx + Qminus1_prmx/4 + 2*r_prmx/(3*r**2))
    sigmacoeff_prmx = sigmacoeffTerm1_prmx + sigmacoeffTerm2_prmx + sigmacoeffTerm3_prmx
    sigmastarcoeffTerm2_prmx = eta*(eta*(r*(-324*DrSipn2_prmx + 120*Qminus1_prmx + r*(720*DrSipn2*DrSipn2_prmx + Qminus1*(-126*DrSipn2_prmx - 3*Qminus1_prmx) + Qminus1_prmx*(-126*DrSipn2 - 3*Qminus1)) + r_prmx*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1))) + r_prmx*(-324*DrSipn2 + 120*Qminus1 + r*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1)))) + r*(282*DrSipn2_prmx + Qminus1*r*(96*DrSipn2_prmx - 23*Qminus1_prmx) + Qminus1*r_prmx*(96*DrSipn2 - 23*Qminus1) + Qminus1_prmx*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmx) + r_prmx*(282*DrSipn2 + Qminus1*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1))/(72*r**2) + eta*r_prmx*(-eta*(r*(-324*DrSipn2 + 120*Qminus1 + r*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1))) - 54) - r*(282*DrSipn2 + Qminus1*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1) - 706)/(36*r**3)
    sigmastarcoeffTerm1_prmx = eta*(-5*DrSipn2_prmx/2 + Qminus1_prmx/3 - 7*r_prmx/(6*r**2))
    sigmastarcoeff_prmx = sigmastarcoeffTerm1_prmx + sigmastarcoeffTerm2_prmx
    Deltasigmastar3_prmx = sigma3*sigmacoeff_prmx + sigmastar3*sigmastarcoeff_prmx
    Deltasigmastar2_prmx = sigma2*sigmacoeff_prmx + sigmastar2*sigmastarcoeff_prmx
    Deltasigmastar1_prmx = sigma1*sigmacoeff_prmx + sigmastar1*sigmastarcoeff_prmx
    Sstar3_prmx = Deltasigmastar3_prmx
    Sstar2_prmx = Deltasigmastar2_prmx
    Sstar1_prmx = Deltasigmastar1_prmx
    S3_prmx = Sstar3_prmx
    S2_prmx = Sstar2_prmx
    S1_prmx = Sstar1_prmx
    Sstardotn_prmx = Sstar1*n1_prmx + Sstar1_prmx*n1 + Sstar2*n2_prmx + Sstar2_prmx*n2 + Sstar3*n3_prmx + Sstar3_prmx*n3
    Sdote3_prmx = S1*e31_prmx + S1_prmx*e31 + S2*e32_prmx + S2_prmx*e32 + S3*e33_prmx + S3_prmx*e33
    Sdotn_prmx = S1*n1_prmx + S1_prmx*n1 + S2*n2_prmx + S2_prmx*n2 + S3*n3_prmx + S3_prmx*n3
    Sdotv_prmx = S1*v1_prmx + S1_prmx*v1 + S2*v2_prmx + S2_prmx*v2 + S3*v3_prmx + S3_prmx*v3
    Sdotxi_prmx = S1*xi1_prmx + S1_prmx*xi1 + S2*xi2_prmx + S2_prmx*xi2 + S3*xi3_prmx + S3_prmx*xi3
    HdsumTerm2_prmx = 6*Sstardotn*Sstardotn_prmx
    HdsumTerm1_prmx = 2*Sstar1*Sstar1_prmx + 2*Sstar2*Sstar2_prmx + 2*Sstar3*Sstar3_prmx
    Hdsum_prmx = HdsumTerm1_prmx - HdsumTerm2_prmx
    Hdcoeff_prmx = -3*r_prmx/(2*r**4)
    Q4_prmx = eta*prT**4*u*u_prmx*(16 - 12*eta) + eta*prT**3*prT_prmx*u**2*(32 - 24*eta)
    gammappsum_prmx = 2*Deltar*pdotn*pdotn_prmx/Sigma - Deltar*Sigma_prmx*pdotn**2/Sigma**2 + Deltar_prmx*pdotn**2/Sigma - pdotvr**2*sin2theta_prmx/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmx/(Sigma*sin2theta) - Sigma_prmx*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmx/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmx/(Lambt*sin2theta) + Sigma_prmx*pdotxir**2/(Lambt*sin2theta) - Lambt_prmx*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmx = Q4_prmx + gammappsum_prmx
    alpha_prmx = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmx/(2*Lambt) - Deltat*Lambt_prmx*Sigma/(2*Lambt**2) + Deltat_prmx*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmx = omegatilde*pphi_prmx/Lambt + omegatilde_prmx*pphi/Lambt - Lambt_prmx*omegatilde*pphi/Lambt**2
    HssTerm3_prmx = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmx - Q_prmx/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmx*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmx*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmx*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmx - Jtilde*Sdotv_prmx*pdotn - Jtilde_prmx*Sdotv*pdotn + Sdotn*pdotvr_prmx + Sdotn_prmx*pdotvr) + pdotvr_prmx*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmx*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmx + Btilde*Jtilde*Sdotxi_prmx*pdotn + Btilde*Jtilde_prmx*Sdotxi*pdotn + Btilde_prmx*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmx - Sdotn*expmu*expnu_prmx*pdotxir - Sdotn*expmu_prmx*expnu*pdotxir - Sdotn_prmx*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmx*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmx*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmx*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmx = omegacostheta*(-Q_prmx - Q_prmx/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmx/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmx*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmx*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmx*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmx*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmx = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmx - Jtilde*Sdotv_prmx*pdotn - Jtilde_prmx*Sdotv*pdotn + Sdotn*pdotvr_prmx + Sdotn_prmx*pdotvr) + Jtilde*pdotn_prmx*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmx*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmx + Q_prmx/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmx*(np.sqrt(Q) + Q) + Sdotv_prmx*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmx*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmx*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmx - Btilde*Sdotxi*expnu_prmx*pdotvr - Btilde*Sdotxi_prmx*expnu*pdotvr - Btilde_prmx*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmx + Sdotv*exp2nu*expmu_prmx*pdotxir + Sdotv*exp2nu_prmx*expmu*pdotxir + Sdotv_prmx*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmx*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmx*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmx = Jtilde*omegar*(-Q_prmx - Q_prmx/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmx/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmx/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmx*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmx*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmx*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmx*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmx*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmx = Sdote3*omega_prmx + Sdote3_prmx*omega
    Hss_prmx = HssTerm1_prmx + HssTerm2*HssTerm2coeff_prmx + HssTerm2coeff*HssTerm2_prmx + HssTerm3*HssTerm3coeff_prmx + HssTerm3coeff*HssTerm3_prmx
    HsoTerm2c_prmx = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmx*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmx*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmx*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmx*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmx*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmx*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmx*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmx = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmx + Jtilde*Sdotv_prmx*nur + Jtilde_prmx*Sdotv*nur - Sdotn*nucostheta*xisq_prmx - Sdotn*nucostheta_prmx*xisq - Sdotn_prmx*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmx*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmx*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmx*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmx*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmx*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmx = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmx + nur_prmx*pdotvr + pdotn*xisq*(mucostheta_prmx - nucostheta_prmx) + pdotn*xisq_prmx*(mucostheta - nucostheta) + pdotn_prmx*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmx - mucostheta*pdotn_prmx*xisq - mucostheta_prmx*pdotn*xisq + mur*pdotvr_prmx*(np.sqrt(Q) + 1) + mur_prmx*pdotvr*(np.sqrt(Q) + 1) + Q_prmx*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmx*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmx*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmx*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmx*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmx = HsoTerm2a_prmx + HsoTerm2b_prmx - HsoTerm2c_prmx
    HsoTerm2coeff_prmx = expnu*(-Q_prmx - Q_prmx/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmx/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmx/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmx*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmx*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmx = Sdote3*exp2nu*pdotxir*(-Btilde_prmx + expmu*expnu_prmx + expmu_prmx*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmx*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmx*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmx*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmx*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmx*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmx*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmx*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmx = HsoTerm1_prmx + HsoTerm2*HsoTerm2coeff_prmx + HsoTerm2coeff*HsoTerm2_prmx
    Hd_prmx = Hdcoeff*Hdsum_prmx + Hdcoeff_prmx*Hdsum
    Hns_prmx = np.sqrt(Hnsradicand)*alpha_prmx + betapsum_prmx + Hnsradicand_prmx*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmx = Hso_prmx + Hss_prmx
    dSS_prmx = 1585.533*chi**2*chi_prmx*eta**2 - 123.0009*chi**2*chi_prmx*eta + 2323.56*chi*chi_prmx*eta**3 - 652.65*chi*chi_prmx*eta**2 + 37.1964*chi_prmx*eta
    Heff_prmx = -Hd_prmx + Hns_prmx + Hs_prmx + dSS*eta*u**3*u_prmx*(4*S1x**2 + 4*S1y**2 + 4*S1z**2 + 4*S2x**2 + 4*S2y**2 + 4*S2z**2) + dSS_prmx*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmx = Heff_prmx*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmx

def v4P_compute_ham_y_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    r_prmy = y/np.sqrt(x**2 + y**2 + z**2)
    u_prmy = -r_prmy/r**2
    L3_prmy = -p1
    L1_prmy = p3
    Lnorm_prmy = (L1*L1_prmy + L3*L3_prmy)/np.sqrt(L1**2 + L2**2 + L3**2)
    Lhat3_prmy = -L3*Lnorm_prmy/Lnorm**2 + L3_prmy/Lnorm
    Lhat2_prmy = -L2*Lnorm_prmy/Lnorm**2
    Lhat1_prmy = -L1*Lnorm_prmy/Lnorm**2 + L1_prmy/Lnorm
    S2dotLhat_prmy = Lhat1_prmy*S2x + Lhat2_prmy*S2y + Lhat3_prmy*S2z
    S1dotLhat_prmy = Lhat1_prmy*S1x + Lhat2_prmy*S1y + Lhat3_prmy*S1z
    S1perp3_prmy = -Lhat3*S1dotLhat_prmy - Lhat3_prmy*S1dotLhat
    S1perp2_prmy = -Lhat2*S1dotLhat_prmy - Lhat2_prmy*S1dotLhat
    S1perp1_prmy = -Lhat1*S1dotLhat_prmy - Lhat1_prmy*S1dotLhat
    S2perp3_prmy = -Lhat3*S2dotLhat_prmy - Lhat3_prmy*S2dotLhat
    S2perp2_prmy = -Lhat2*S2dotLhat_prmy - Lhat2_prmy*S2dotLhat
    S2perp1_prmy = -Lhat1*S2dotLhat_prmy - Lhat1_prmy*S2dotLhat
    Sperp3_prmy = S1perp3_prmy + S2perp3_prmy
    Sperp2_prmy = S1perp2_prmy + S2perp2_prmy
    Sperp1_prmy = S1perp1_prmy + S2perp1_prmy
    n3_prmy = -r_prmy*z/r**2
    n2_prmy = 1/r - r_prmy*y/r**2
    n1_prmy = -r_prmy*x/r**2
    lambdavec3_prmy = Lhat1*n2_prmy + Lhat1_prmy*n2 - Lhat2*n3_prmy - Lhat2_prmy*n3
    lambdavec2_prmy = -Lhat1*n3_prmy - Lhat1_prmy*n3 + Lhat3*n1_prmy + Lhat3_prmy*n1
    lambdavec1_prmy = Lhat2*n3_prmy + Lhat2_prmy*n3 - Lhat3*n2_prmy - Lhat3_prmy*n2
    lambdavecnorm_prmy = (lambdavec1*lambdavec1_prmy + lambdavec2*lambdavec2_prmy + lambdavec3*lambdavec3_prmy)/np.sqrt(lambdavec1**2 + lambdavec2**2 + lambdavec3**2)
    lambdahat3_prmy = -lambdavec3*lambdavecnorm_prmy/lambdavecnorm**2 + lambdavec3_prmy/lambdavecnorm
    lambdahat2_prmy = -lambdavec2*lambdavecnorm_prmy/lambdavecnorm**2 + lambdavec2_prmy/lambdavecnorm
    lambdahat1_prmy = -lambdavec1*lambdavecnorm_prmy/lambdavecnorm**2 + lambdavec1_prmy/lambdavecnorm
    lambdahat_dot_e3prov_prmy = e3prov1*lambdahat1_prmy + e3prov2*lambdahat2_prmy + e3prov3*lambdahat3_prmy
    lambdahat_cross_e3prov3_prmy = -e3prov1*lambdahat2_prmy + e3prov2*lambdahat1_prmy
    lambdahat_cross_e3prov2_prmy = e3prov1*lambdahat3_prmy - e3prov3*lambdahat1_prmy
    lambdahat_cross_e3prov1_prmy = -e3prov2*lambdahat3_prmy + e3prov3*lambdahat2_prmy
    e3prov_dot_n_prmy = e3prov1*n1_prmy + e3prov2*n2_prmy + e3prov3*n3_prmy
    condition_e3_lhs_prmy = -e3prov_dot_n_prmy*np.sign(e3prov_dot_n)
    e3_gt_bound_prmy = -condition_e3_lhs_prmy*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmy*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmy/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmy = -condition_e3_lhs_prmy*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmy*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmy/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmy = e3_gt_bound_prmy*e3prov1 + e3_leq_bound*(lambdahat1*lambdahat_dot_e3prov_prmy*(1 - cos_0_1_deg) + lambdahat1_prmy*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmy*sin_0_1_deg) + e3_leq_bound_prmy*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmy = e3_gt_bound_prmy*e3prov2 + e3_leq_bound*(lambdahat2*lambdahat_dot_e3prov_prmy*(1 - cos_0_1_deg) + lambdahat2_prmy*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmy*sin_0_1_deg) + e3_leq_bound_prmy*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmy = e3_gt_bound_prmy*e3prov3 + e3_leq_bound*(lambdahat3*lambdahat_dot_e3prov_prmy*(1 - cos_0_1_deg) + lambdahat3_prmy*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmy*sin_0_1_deg) + e3_leq_bound_prmy*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmy = e31*n2_prmy + e31_prmy*n2 - e32*n1_prmy - e32_prmy*n1
    xi2_prmy = -e31*n3_prmy - e31_prmy*n3 + e33*n1_prmy + e33_prmy*n1
    xi1_prmy = e32*n3_prmy + e32_prmy*n3 - e33*n2_prmy - e33_prmy*n2
    v3_prmy = n1*xi2_prmy + n1_prmy*xi2 - n2*xi1_prmy - n2_prmy*xi1
    v2_prmy = -n1*xi3_prmy - n1_prmy*xi3 + n3*xi1_prmy + n3_prmy*xi1
    v1_prmy = n2*xi3_prmy + n2_prmy*xi3 - n3*xi2_prmy - n3_prmy*xi2
    costheta_prmy = e31*n1_prmy + e31_prmy*n1 + e32*n2_prmy + e32_prmy*n2 + e33*n3_prmy + e33_prmy*n3
    sin2theta_prmy = -2*costheta*costheta_prmy
    xisq_prmy = sin2theta_prmy
    w2_prmy = 2*r*r_prmy
    Sigma_prmy = 2*a**2*costheta*costheta_prmy + 2*r*r_prmy
    Dinv_prmy = (eta*u**2*u_prmy*(156 - 18*eta) + 12*eta*u*u_prmy)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)
    Dinvprime_prmy = -u**2*(eta*u**2*(156 - 18*eta) + 12*eta*u)*(eta*u**2*u_prmy*(18*eta - 156) - 12*eta*u*u_prmy)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)**2 - u**2*(eta*u*u_prmy*(312 - 36*eta) + 12*eta*u_prmy)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1) + u*u_prmy*(-2*eta*u**2*(156 - 18*eta) - 24*eta*u)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)
    omegatilde_prmy = 2*a*r_prmy
    chi_prmy = (Lhat1_prmy*Skerr1 + Lhat2_prmy*Skerr2 + Lhat3_prmy*Skerr3)/(1 - 2*eta) + (Skerr1*Sperp1_prmy/2 + Skerr2*Sperp2_prmy/2 + Skerr3*Sperp3_prmy/2)/(Skerrmag*(1.0 - 2.0*eta))
    K_prmy = -177.4974*chi**2*chi_prmy*eta**3 - 1.280874*chi**2*chi_prmy*eta + 4.30977*chi**2*chi_prmy + 62.3492*chi*chi_prmy*eta**3 + 12.32932*chi*chi_prmy*eta**2 - 2.76172*chi*chi_prmy - 27.5201*chi_prmy*eta**3 + 17.3736*chi_prmy*eta**2 + 2.26831*chi_prmy*eta - 1.62045*chi_prmy
    etaKminus1_prmy = K_prmy*eta
    Delta0_prmy = K*K_prmy*eta + K_prmy*(K*eta - 2)
    Delta1_prmy = etaKminus1*(-2*Delta0_prmy - 2*K_prmy) + etaKminus1_prmy*(-2*Delta0 - 2*K)
    Delta2_prmy = -2*Delta0*a**2*etaKminus1*etaKminus1_prmy - Delta0_prmy*a**2*etaKminus1**2 + Delta1*(Delta1_prmy/2 - 2*etaKminus1_prmy) + Delta1_prmy*(Delta1/2 - 2*etaKminus1)
    Delta3_prmy = -Delta1**2*Delta1_prmy + Delta1**2*etaKminus1_prmy + 2*Delta1*Delta1_prmy*etaKminus1 + Delta1*Delta2_prmy - 2*Delta1*a**2*etaKminus1*etaKminus1_prmy + Delta1_prmy*Delta2 - Delta1_prmy*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmy + 2*etaKminus1_prmy) + etaKminus1_prmy*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmy = Delta1**3*Delta1_prmy - 2*Delta1**3*etaKminus1_prmy/3 - 2*Delta1**2*Delta1_prmy*etaKminus1 - Delta1**2*Delta2_prmy - 2*Delta1*Delta1_prmy*Delta2 + Delta1*(2*Delta2*etaKminus1_prmy + 2*Delta2_prmy*etaKminus1 + Delta3_prmy) + Delta1_prmy*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmy - 2*Delta3*etaKminus1_prmy - 2*Delta3_prmy*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmy - 2*Delta2_prmy)/2 + a**2*etaKminus1*etaKminus1_prmy*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmy*(376 - 123*np.pi**2/8)/6
    Delta5_prmy = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmy - 3*Delta1*Delta2_prmy - 3*Delta1_prmy*Delta2 + 3*Delta3_prmy)/3 + (4*Delta1**3*Delta1_prmy - 4*Delta1**2*Delta2_prmy - 8*Delta1*Delta1_prmy*Delta2 + 4*Delta1*Delta3_prmy + 4*Delta1_prmy*Delta3 + 4*Delta2*Delta2_prmy - 4*Delta4_prmy)/(2*etaKminus1) - etaKminus1_prmy*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmy - 5*Delta1**3*Delta2_prmy - 15*Delta1**2*Delta1_prmy*Delta2 + 5*Delta1**2*Delta3_prmy + 10*Delta1*Delta1_prmy*Delta3 + 10*Delta1*Delta2*Delta2_prmy - 5*Delta1*Delta4_prmy + 5*Delta1_prmy*Delta2**2 - 5*Delta1_prmy*Delta4 - 5*Delta2*Delta3_prmy - 5*Delta2_prmy*Delta3)/(5*etaKminus1**2) + etaKminus1_prmy*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmy*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmy = 128*etaKminus1*etaKminus1_prmy/5
    logarg_prmy = u*(Delta1_prmy + u*(Delta2_prmy + u*(Delta3_prmy + u*(Delta4_prmy + u*(Delta5l*u_prmy/u + Delta5l_prmy*np.log(u) + Delta5_prmy) + u_prmy*(Delta5 + Delta5l*np.log(u))) + u_prmy*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))) + u_prmy*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))) + u_prmy*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))))) + u_prmy*(Delta1 + u*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))))
    Deltaucalib_prmy = eta*(Delta0_prmy + logarg_prmy*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmy = eta*logarg_prmy*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmy + u*(2*Delta2_prmy + u*(3*Delta3_prmy + u*(4*Delta4_prmy + u*(5*Delta5l*u_prmy/u + 5*Delta5l_prmy*np.log(u) + 5*Delta5_prmy) + u_prmy*(5*Delta5 + 5*Delta5l*np.log(u))) + u_prmy*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u)))) + u_prmy*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))) + u_prmy*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1) + eta*u*u_prmy*(-2*Delta1 - 2*u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)
    Deltaubar_prmy = 2*a**2*u*u_prmy + (2*u_prmy - etaKminus1_prmy/etaKminus1**2)/etaKminus1 + etaKminus1_prmy*(-2*u - 1/etaKminus1)/etaKminus1**2
    Deltaubarprime_prmy = -6*a**2*u**2*u_prmy - 4*u*u_prmy/etaKminus1 + 2*etaKminus1_prmy*u**2/etaKminus1**2
    Deltau_prmy = (Deltaubar*Deltaucalib_prmy + Deltaubar_prmy*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmy = Deltaubar*Deltaucalibprime_prmy + Deltaubarprime*Deltaucalib_prmy + Deltaubarprime_prmy*Deltaucalib + Deltaubar_prmy*Deltaucalibprime
    Deltatprime_prmy = 2*Deltau*r_prmy + 2*Deltauprime*r*r_prmy + Deltauprime_prmy*r**2 + 2*Deltau_prmy*r
    Deltat_prmy = 2*Deltau*r*r_prmy + Deltau_prmy*r**2
    Deltar_prmy = Deltat*Dinv_prmy + Deltat_prmy*Dinv
    Deltarprime_prmy = Deltat*Dinvprime_prmy + Deltatprime*Dinv_prmy + Deltatprime_prmy*Dinv + Deltat_prmy*Dinvprime
    Lambt_prmy = (Deltat*a**2*sin2theta_prmy + Deltat_prmy*a**2*sin2theta - 2*w2*w2_prmy)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmy = (Deltar*Deltat_prmy + Deltar_prmy*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmy*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmy = 4.0*r*w2_prmy*np.sqrt(Deltar*Deltat)/w2**3 - 2.0*r_prmy*np.sqrt(Deltar*Deltat)/w2**2 + (Deltar*Deltatprime_prmy + Deltarprime*Deltat_prmy + Deltarprime_prmy*Deltat + Deltar_prmy*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmy*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmy/2 + Deltar_prmy*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmy/2 - Deltar_prmy*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmy = csi_prmy*(1 - np.abs(tortoise - 1))
    csi2_prmy = csi_prmy*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmy = csi2*(n1_prmy*p1 + n2_prmy*p2 + n3_prmy*p3) + csi2_prmy*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmy = n3*prT_prmy*(-1 + 1/csi1) + n3_prmy*prT*(-1 + 1/csi1) - csi1_prmy*n3*prT/csi1**2
    phat2_prmy = n2*prT_prmy*(-1 + 1/csi1) + n2_prmy*prT*(-1 + 1/csi1) - csi1_prmy*n2*prT/csi1**2
    phat1_prmy = n1*prT_prmy*(-1 + 1/csi1) + n1_prmy*prT*(-1 + 1/csi1) - csi1_prmy*n1*prT/csi1**2
    pdotxir_prmy = r*(phat1*xi1_prmy + phat1_prmy*xi1 + phat2*xi2_prmy + phat2_prmy*xi2 + phat3*xi3_prmy + phat3_prmy*xi3) + r_prmy*(phat1*xi1 + phat2*xi2 + phat3*xi3)
    pdotn_prmy = n1*phat1_prmy + n1_prmy*phat1 + n2*phat2_prmy + n2_prmy*phat2 + n3*phat3_prmy + n3_prmy*phat3
    pdotvr_prmy = r*(phat1*v1_prmy + phat1_prmy*v1 + phat2*v2_prmy + phat2_prmy*v2 + phat3*v3_prmy + phat3_prmy*v3) + r_prmy*(phat1*v1 + phat2*v2 + phat3*v3)
    pphi_prmy = pdotxir_prmy
    Qcoeff2_prmy = -sin2theta_prmy/(Sigma*sin2theta**2) - Sigma_prmy/(Sigma**2*sin2theta)
    Qcoeff1_prmy = -Sigma*sin2theta_prmy/(Lambt*sin2theta**2) + Sigma_prmy/(Lambt*sin2theta) - Lambt_prmy*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmy = 2*Deltar*pdotn*pdotn_prmy/Sigma - Deltar*Sigma_prmy*pdotn**2/Sigma**2 + Deltar_prmy*pdotn**2/Sigma
    Q_prmy = DrSipn2_prmy + 2*Qcoeff1*pdotxir*pdotxir_prmy + Qcoeff1_prmy*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmy + Qcoeff2_prmy*pdotvr**2
    Qminus1_prmy = Q_prmy
    Jtilde_prmy = Deltar_prmy/(2*np.sqrt(Deltar))
    exp2mu_prmy = Sigma_prmy
    expmu_prmy = exp2mu_prmy/(2*np.sqrt(exp2mu))
    Brtilde_prmy = (np.sqrt(Deltar)*Deltatprime_prmy - 2*Deltat_prmy + Deltar_prmy*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmy/2 - Deltar_prmy*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmy = Deltat_prmy/(2*np.sqrt(Deltat))
    exp2nu_prmy = Deltat*Sigma_prmy/Lambt - Deltat*Lambt_prmy*Sigma/Lambt**2 + Deltat_prmy*Sigma/Lambt
    expnu_prmy = exp2nu_prmy/(2*np.sqrt(exp2nu))
    omega_prmy = omegatilde_prmy/Lambt - Lambt_prmy*omegatilde/Lambt**2
    Lambtprime_prmy = -Deltatprime*a**2*sin2theta_prmy - Deltatprime_prmy*a**2*sin2theta + 8*r**2*r_prmy + r_prmy*(4*a**2 + 4*r**2)
    mucostheta_prmy = a**2*costheta_prmy/Sigma - Sigma_prmy*a**2*costheta/Sigma**2
    nucostheta_prmy = a**2*costheta*w2*(-Deltat_prmy + w2_prmy)/(Lambt*Sigma) + a**2*costheta*w2_prmy*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmy*w2*(-Deltat + w2)/(Lambt*Sigma) - Sigma_prmy*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmy*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmy = -2*Deltat*a**2*costheta*omegatilde_prmy/Lambt**2 - 2*Deltat*a**2*costheta_prmy*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmy*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmy*a**2*costheta*omegatilde/Lambt**2
    mur_prmy = r_prmy/Sigma - Sigma_prmy*r/Sigma**2 + Deltar_prmy/(2*Deltar**(3/2))
    nur_prmy = r_prmy/Sigma - Sigma_prmy*r/Sigma**2 + w2*(-4*Deltat*r_prmy + Deltatprime*w2_prmy + Deltatprime_prmy*w2 - 4*Deltat_prmy*r)/(2*Deltat*Lambt) + w2_prmy*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmy*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmy*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmy = (-Lambtprime*omegatilde_prmy - Lambtprime_prmy*omegatilde + Lambt_prmy*omegatildeprime)/Lambt**2 + Lambt_prmy*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmy = 442.443*chi**2*chi_prmy*eta**2 - 1705.953*chi**2*chi_prmy*eta + 198.5961*chi**2*chi_prmy - 686.626*chi*chi_prmy*eta + 2495.29*chi_prmy*eta**2
    sigmacoeffTerm3_prmy = 3*dSO*eta*u**2*u_prmy + dSO_prmy*eta*u**3
    sigmacoeffTerm2_prmy = eta*(eta*(r*(-12.25*DrSipn2*u*u_prmy - 6.125*DrSipn2_prmy*u**2 + 2.83333333333333*Qminus1*u*u_prmy + 1.41666666666667*Qminus1_prmy*u**2 + r*(11.25*DrSipn2**2*u*u_prmy + 11.25*DrSipn2*DrSipn2_prmy*u**2 - 3.25*DrSipn2*Qminus1*u*u_prmy - 1.625*DrSipn2*Qminus1_prmy*u**2 - 1.625*DrSipn2_prmy*Qminus1*u**2) + r_prmy*(5.625*DrSipn2**2*u**2 - 1.625*DrSipn2*Qminus1*u**2)) + r_prmy*(-6.125*DrSipn2*u**2 + 1.41666666666667*Qminus1*u**2 + r*(5.625*DrSipn2**2*u**2 - 1.625*DrSipn2*Qminus1*u**2)) - 4.66666666666667*u*u_prmy) + r*(-1.33333333333333*DrSipn2*u*u_prmy - 0.666666666666667*DrSipn2_prmy*u**2 - 6.05555555555556*Qminus1*u*u_prmy - 3.02777777777778*Qminus1_prmy*u**2 + r*(0.5*DrSipn2*Qminus1*u*u_prmy + 0.25*DrSipn2*Qminus1_prmy*u**2 + 0.25*DrSipn2_prmy*Qminus1*u**2 - 0.625*Qminus1**2*u*u_prmy - 0.625*Qminus1*Qminus1_prmy*u**2) + r_prmy*(0.25*DrSipn2*Qminus1*u**2 - 0.3125*Qminus1**2*u**2)) + r_prmy*(-0.666666666666667*DrSipn2*u**2 - 3.02777777777778*Qminus1*u**2 + r*(0.25*DrSipn2*Qminus1*u**2 - 0.3125*Qminus1**2*u**2)) - 12.4444444444444*u*u_prmy)
    sigmacoeffTerm1_prmy = eta*(-3*DrSipn2_prmy + Qminus1_prmy/4 + 2*r_prmy/(3*r**2))
    sigmacoeff_prmy = sigmacoeffTerm1_prmy + sigmacoeffTerm2_prmy + sigmacoeffTerm3_prmy
    sigmastarcoeffTerm2_prmy = eta*(eta*(r*(-324*DrSipn2_prmy + 120*Qminus1_prmy + r*(720*DrSipn2*DrSipn2_prmy + Qminus1*(-126*DrSipn2_prmy - 3*Qminus1_prmy) + Qminus1_prmy*(-126*DrSipn2 - 3*Qminus1)) + r_prmy*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1))) + r_prmy*(-324*DrSipn2 + 120*Qminus1 + r*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1)))) + r*(282*DrSipn2_prmy + Qminus1*r*(96*DrSipn2_prmy - 23*Qminus1_prmy) + Qminus1*r_prmy*(96*DrSipn2 - 23*Qminus1) + Qminus1_prmy*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmy) + r_prmy*(282*DrSipn2 + Qminus1*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1))/(72*r**2) + eta*r_prmy*(-eta*(r*(-324*DrSipn2 + 120*Qminus1 + r*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1))) - 54) - r*(282*DrSipn2 + Qminus1*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1) - 706)/(36*r**3)
    sigmastarcoeffTerm1_prmy = eta*(-5*DrSipn2_prmy/2 + Qminus1_prmy/3 - 7*r_prmy/(6*r**2))
    sigmastarcoeff_prmy = sigmastarcoeffTerm1_prmy + sigmastarcoeffTerm2_prmy
    Deltasigmastar3_prmy = sigma3*sigmacoeff_prmy + sigmastar3*sigmastarcoeff_prmy
    Deltasigmastar2_prmy = sigma2*sigmacoeff_prmy + sigmastar2*sigmastarcoeff_prmy
    Deltasigmastar1_prmy = sigma1*sigmacoeff_prmy + sigmastar1*sigmastarcoeff_prmy
    Sstar3_prmy = Deltasigmastar3_prmy
    Sstar2_prmy = Deltasigmastar2_prmy
    Sstar1_prmy = Deltasigmastar1_prmy
    S3_prmy = Sstar3_prmy
    S2_prmy = Sstar2_prmy
    S1_prmy = Sstar1_prmy
    Sstardotn_prmy = Sstar1*n1_prmy + Sstar1_prmy*n1 + Sstar2*n2_prmy + Sstar2_prmy*n2 + Sstar3*n3_prmy + Sstar3_prmy*n3
    Sdote3_prmy = S1*e31_prmy + S1_prmy*e31 + S2*e32_prmy + S2_prmy*e32 + S3*e33_prmy + S3_prmy*e33
    Sdotn_prmy = S1*n1_prmy + S1_prmy*n1 + S2*n2_prmy + S2_prmy*n2 + S3*n3_prmy + S3_prmy*n3
    Sdotv_prmy = S1*v1_prmy + S1_prmy*v1 + S2*v2_prmy + S2_prmy*v2 + S3*v3_prmy + S3_prmy*v3
    Sdotxi_prmy = S1*xi1_prmy + S1_prmy*xi1 + S2*xi2_prmy + S2_prmy*xi2 + S3*xi3_prmy + S3_prmy*xi3
    HdsumTerm2_prmy = 6*Sstardotn*Sstardotn_prmy
    HdsumTerm1_prmy = 2*Sstar1*Sstar1_prmy + 2*Sstar2*Sstar2_prmy + 2*Sstar3*Sstar3_prmy
    Hdsum_prmy = HdsumTerm1_prmy - HdsumTerm2_prmy
    Hdcoeff_prmy = -3*r_prmy/(2*r**4)
    Q4_prmy = eta*prT**4*u*u_prmy*(16 - 12*eta) + eta*prT**3*prT_prmy*u**2*(32 - 24*eta)
    gammappsum_prmy = 2*Deltar*pdotn*pdotn_prmy/Sigma - Deltar*Sigma_prmy*pdotn**2/Sigma**2 + Deltar_prmy*pdotn**2/Sigma - pdotvr**2*sin2theta_prmy/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmy/(Sigma*sin2theta) - Sigma_prmy*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmy/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmy/(Lambt*sin2theta) + Sigma_prmy*pdotxir**2/(Lambt*sin2theta) - Lambt_prmy*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmy = Q4_prmy + gammappsum_prmy
    alpha_prmy = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmy/(2*Lambt) - Deltat*Lambt_prmy*Sigma/(2*Lambt**2) + Deltat_prmy*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmy = omegatilde*pphi_prmy/Lambt + omegatilde_prmy*pphi/Lambt - Lambt_prmy*omegatilde*pphi/Lambt**2
    HssTerm3_prmy = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmy - Q_prmy/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmy*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmy*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmy*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmy - Jtilde*Sdotv_prmy*pdotn - Jtilde_prmy*Sdotv*pdotn + Sdotn*pdotvr_prmy + Sdotn_prmy*pdotvr) + pdotvr_prmy*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmy*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmy + Btilde*Jtilde*Sdotxi_prmy*pdotn + Btilde*Jtilde_prmy*Sdotxi*pdotn + Btilde_prmy*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmy - Sdotn*expmu*expnu_prmy*pdotxir - Sdotn*expmu_prmy*expnu*pdotxir - Sdotn_prmy*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmy*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmy*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmy*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmy = omegacostheta*(-Q_prmy - Q_prmy/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmy/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmy*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmy*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmy*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmy*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmy = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmy - Jtilde*Sdotv_prmy*pdotn - Jtilde_prmy*Sdotv*pdotn + Sdotn*pdotvr_prmy + Sdotn_prmy*pdotvr) + Jtilde*pdotn_prmy*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmy*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmy + Q_prmy/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmy*(np.sqrt(Q) + Q) + Sdotv_prmy*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmy*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmy*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmy - Btilde*Sdotxi*expnu_prmy*pdotvr - Btilde*Sdotxi_prmy*expnu*pdotvr - Btilde_prmy*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmy + Sdotv*exp2nu*expmu_prmy*pdotxir + Sdotv*exp2nu_prmy*expmu*pdotxir + Sdotv_prmy*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmy*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmy*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmy = Jtilde*omegar*(-Q_prmy - Q_prmy/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmy/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmy/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmy*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmy*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmy*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmy*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmy*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmy = Sdote3*omega_prmy + Sdote3_prmy*omega
    Hss_prmy = HssTerm1_prmy + HssTerm2*HssTerm2coeff_prmy + HssTerm2coeff*HssTerm2_prmy + HssTerm3*HssTerm3coeff_prmy + HssTerm3coeff*HssTerm3_prmy
    HsoTerm2c_prmy = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmy*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmy*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmy*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmy*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmy*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmy*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmy*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmy = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmy + Jtilde*Sdotv_prmy*nur + Jtilde_prmy*Sdotv*nur - Sdotn*nucostheta*xisq_prmy - Sdotn*nucostheta_prmy*xisq - Sdotn_prmy*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmy*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmy*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmy*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmy*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmy*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmy = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmy + nur_prmy*pdotvr + pdotn*xisq*(mucostheta_prmy - nucostheta_prmy) + pdotn*xisq_prmy*(mucostheta - nucostheta) + pdotn_prmy*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmy - mucostheta*pdotn_prmy*xisq - mucostheta_prmy*pdotn*xisq + mur*pdotvr_prmy*(np.sqrt(Q) + 1) + mur_prmy*pdotvr*(np.sqrt(Q) + 1) + Q_prmy*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmy*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmy*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmy*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmy*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmy = HsoTerm2a_prmy + HsoTerm2b_prmy - HsoTerm2c_prmy
    HsoTerm2coeff_prmy = expnu*(-Q_prmy - Q_prmy/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmy/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmy/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmy*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmy*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmy = Sdote3*exp2nu*pdotxir*(-Btilde_prmy + expmu*expnu_prmy + expmu_prmy*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmy*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmy*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmy*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmy*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmy*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmy*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmy*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmy = HsoTerm1_prmy + HsoTerm2*HsoTerm2coeff_prmy + HsoTerm2coeff*HsoTerm2_prmy
    Hd_prmy = Hdcoeff*Hdsum_prmy + Hdcoeff_prmy*Hdsum
    Hns_prmy = np.sqrt(Hnsradicand)*alpha_prmy + betapsum_prmy + Hnsradicand_prmy*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmy = Hso_prmy + Hss_prmy
    dSS_prmy = 1585.533*chi**2*chi_prmy*eta**2 - 123.0009*chi**2*chi_prmy*eta + 2323.56*chi*chi_prmy*eta**3 - 652.65*chi*chi_prmy*eta**2 + 37.1964*chi_prmy*eta
    Heff_prmy = -Hd_prmy + Hns_prmy + Hs_prmy + dSS*eta*u**3*u_prmy*(4*S1x**2 + 4*S1y**2 + 4*S1z**2 + 4*S2x**2 + 4*S2y**2 + 4*S2z**2) + dSS_prmy*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmy = Heff_prmy*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmy

def v4P_compute_ham_z_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    r_prmz = z/np.sqrt(x**2 + y**2 + z**2)
    u_prmz = -r_prmz/r**2
    L2_prmz = p1
    L1_prmz = -p2
    Lnorm_prmz = (L1*L1_prmz + L2*L2_prmz)/np.sqrt(L1**2 + L2**2 + L3**2)
    Lhat3_prmz = -L3*Lnorm_prmz/Lnorm**2
    Lhat2_prmz = -L2*Lnorm_prmz/Lnorm**2 + L2_prmz/Lnorm
    Lhat1_prmz = -L1*Lnorm_prmz/Lnorm**2 + L1_prmz/Lnorm
    S2dotLhat_prmz = Lhat1_prmz*S2x + Lhat2_prmz*S2y + Lhat3_prmz*S2z
    S1dotLhat_prmz = Lhat1_prmz*S1x + Lhat2_prmz*S1y + Lhat3_prmz*S1z
    S1perp3_prmz = -Lhat3*S1dotLhat_prmz - Lhat3_prmz*S1dotLhat
    S1perp2_prmz = -Lhat2*S1dotLhat_prmz - Lhat2_prmz*S1dotLhat
    S1perp1_prmz = -Lhat1*S1dotLhat_prmz - Lhat1_prmz*S1dotLhat
    S2perp3_prmz = -Lhat3*S2dotLhat_prmz - Lhat3_prmz*S2dotLhat
    S2perp2_prmz = -Lhat2*S2dotLhat_prmz - Lhat2_prmz*S2dotLhat
    S2perp1_prmz = -Lhat1*S2dotLhat_prmz - Lhat1_prmz*S2dotLhat
    Sperp3_prmz = S1perp3_prmz + S2perp3_prmz
    Sperp2_prmz = S1perp2_prmz + S2perp2_prmz
    Sperp1_prmz = S1perp1_prmz + S2perp1_prmz
    n3_prmz = 1/r - r_prmz*z/r**2
    n2_prmz = -r_prmz*y/r**2
    n1_prmz = -r_prmz*x/r**2
    lambdavec3_prmz = Lhat1*n2_prmz + Lhat1_prmz*n2 - Lhat2*n3_prmz - Lhat2_prmz*n3
    lambdavec2_prmz = -Lhat1*n3_prmz - Lhat1_prmz*n3 + Lhat3*n1_prmz + Lhat3_prmz*n1
    lambdavec1_prmz = Lhat2*n3_prmz + Lhat2_prmz*n3 - Lhat3*n2_prmz - Lhat3_prmz*n2
    lambdavecnorm_prmz = (lambdavec1*lambdavec1_prmz + lambdavec2*lambdavec2_prmz + lambdavec3*lambdavec3_prmz)/np.sqrt(lambdavec1**2 + lambdavec2**2 + lambdavec3**2)
    lambdahat3_prmz = -lambdavec3*lambdavecnorm_prmz/lambdavecnorm**2 + lambdavec3_prmz/lambdavecnorm
    lambdahat2_prmz = -lambdavec2*lambdavecnorm_prmz/lambdavecnorm**2 + lambdavec2_prmz/lambdavecnorm
    lambdahat1_prmz = -lambdavec1*lambdavecnorm_prmz/lambdavecnorm**2 + lambdavec1_prmz/lambdavecnorm
    lambdahat_dot_e3prov_prmz = e3prov1*lambdahat1_prmz + e3prov2*lambdahat2_prmz + e3prov3*lambdahat3_prmz
    lambdahat_cross_e3prov3_prmz = -e3prov1*lambdahat2_prmz + e3prov2*lambdahat1_prmz
    lambdahat_cross_e3prov2_prmz = e3prov1*lambdahat3_prmz - e3prov3*lambdahat1_prmz
    lambdahat_cross_e3prov1_prmz = -e3prov2*lambdahat3_prmz + e3prov3*lambdahat2_prmz
    e3prov_dot_n_prmz = e3prov1*n1_prmz + e3prov2*n2_prmz + e3prov3*n3_prmz
    condition_e3_lhs_prmz = -e3prov_dot_n_prmz*np.sign(e3prov_dot_n)
    e3_gt_bound_prmz = -condition_e3_lhs_prmz*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmz*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmz/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmz = -condition_e3_lhs_prmz*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmz*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmz/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmz = e3_gt_bound_prmz*e3prov1 + e3_leq_bound*(lambdahat1*lambdahat_dot_e3prov_prmz*(1 - cos_0_1_deg) + lambdahat1_prmz*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmz*sin_0_1_deg) + e3_leq_bound_prmz*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmz = e3_gt_bound_prmz*e3prov2 + e3_leq_bound*(lambdahat2*lambdahat_dot_e3prov_prmz*(1 - cos_0_1_deg) + lambdahat2_prmz*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmz*sin_0_1_deg) + e3_leq_bound_prmz*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmz = e3_gt_bound_prmz*e3prov3 + e3_leq_bound*(lambdahat3*lambdahat_dot_e3prov_prmz*(1 - cos_0_1_deg) + lambdahat3_prmz*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmz*sin_0_1_deg) + e3_leq_bound_prmz*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmz = e31*n2_prmz + e31_prmz*n2 - e32*n1_prmz - e32_prmz*n1
    xi2_prmz = -e31*n3_prmz - e31_prmz*n3 + e33*n1_prmz + e33_prmz*n1
    xi1_prmz = e32*n3_prmz + e32_prmz*n3 - e33*n2_prmz - e33_prmz*n2
    v3_prmz = n1*xi2_prmz + n1_prmz*xi2 - n2*xi1_prmz - n2_prmz*xi1
    v2_prmz = -n1*xi3_prmz - n1_prmz*xi3 + n3*xi1_prmz + n3_prmz*xi1
    v1_prmz = n2*xi3_prmz + n2_prmz*xi3 - n3*xi2_prmz - n3_prmz*xi2
    costheta_prmz = e31*n1_prmz + e31_prmz*n1 + e32*n2_prmz + e32_prmz*n2 + e33*n3_prmz + e33_prmz*n3
    sin2theta_prmz = -2*costheta*costheta_prmz
    xisq_prmz = sin2theta_prmz
    w2_prmz = 2*r*r_prmz
    Sigma_prmz = 2*a**2*costheta*costheta_prmz + 2*r*r_prmz
    Dinv_prmz = (eta*u**2*u_prmz*(156 - 18*eta) + 12*eta*u*u_prmz)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)
    Dinvprime_prmz = -u**2*(eta*u**2*(156 - 18*eta) + 12*eta*u)*(eta*u**2*u_prmz*(18*eta - 156) - 12*eta*u*u_prmz)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)**2 - u**2*(eta*u*u_prmz*(312 - 36*eta) + 12*eta*u_prmz)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1) + u*u_prmz*(-2*eta*u**2*(156 - 18*eta) - 24*eta*u)/(eta*u**3*(52 - 6*eta) + 6*eta*u**2 + 1)
    omegatilde_prmz = 2*a*r_prmz
    chi_prmz = (Lhat1_prmz*Skerr1 + Lhat2_prmz*Skerr2 + Lhat3_prmz*Skerr3)/(1 - 2*eta) + (Skerr1*Sperp1_prmz/2 + Skerr2*Sperp2_prmz/2 + Skerr3*Sperp3_prmz/2)/(Skerrmag*(1.0 - 2.0*eta))
    K_prmz = -177.4974*chi**2*chi_prmz*eta**3 - 1.280874*chi**2*chi_prmz*eta + 4.30977*chi**2*chi_prmz + 62.3492*chi*chi_prmz*eta**3 + 12.32932*chi*chi_prmz*eta**2 - 2.76172*chi*chi_prmz - 27.5201*chi_prmz*eta**3 + 17.3736*chi_prmz*eta**2 + 2.26831*chi_prmz*eta - 1.62045*chi_prmz
    etaKminus1_prmz = K_prmz*eta
    Delta0_prmz = K*K_prmz*eta + K_prmz*(K*eta - 2)
    Delta1_prmz = etaKminus1*(-2*Delta0_prmz - 2*K_prmz) + etaKminus1_prmz*(-2*Delta0 - 2*K)
    Delta2_prmz = -2*Delta0*a**2*etaKminus1*etaKminus1_prmz - Delta0_prmz*a**2*etaKminus1**2 + Delta1*(Delta1_prmz/2 - 2*etaKminus1_prmz) + Delta1_prmz*(Delta1/2 - 2*etaKminus1)
    Delta3_prmz = -Delta1**2*Delta1_prmz + Delta1**2*etaKminus1_prmz + 2*Delta1*Delta1_prmz*etaKminus1 + Delta1*Delta2_prmz - 2*Delta1*a**2*etaKminus1*etaKminus1_prmz + Delta1_prmz*Delta2 - Delta1_prmz*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmz + 2*etaKminus1_prmz) + etaKminus1_prmz*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmz = Delta1**3*Delta1_prmz - 2*Delta1**3*etaKminus1_prmz/3 - 2*Delta1**2*Delta1_prmz*etaKminus1 - Delta1**2*Delta2_prmz - 2*Delta1*Delta1_prmz*Delta2 + Delta1*(2*Delta2*etaKminus1_prmz + 2*Delta2_prmz*etaKminus1 + Delta3_prmz) + Delta1_prmz*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmz - 2*Delta3*etaKminus1_prmz - 2*Delta3_prmz*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmz - 2*Delta2_prmz)/2 + a**2*etaKminus1*etaKminus1_prmz*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmz*(376 - 123*np.pi**2/8)/6
    Delta5_prmz = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmz - 3*Delta1*Delta2_prmz - 3*Delta1_prmz*Delta2 + 3*Delta3_prmz)/3 + (4*Delta1**3*Delta1_prmz - 4*Delta1**2*Delta2_prmz - 8*Delta1*Delta1_prmz*Delta2 + 4*Delta1*Delta3_prmz + 4*Delta1_prmz*Delta3 + 4*Delta2*Delta2_prmz - 4*Delta4_prmz)/(2*etaKminus1) - etaKminus1_prmz*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmz - 5*Delta1**3*Delta2_prmz - 15*Delta1**2*Delta1_prmz*Delta2 + 5*Delta1**2*Delta3_prmz + 10*Delta1*Delta1_prmz*Delta3 + 10*Delta1*Delta2*Delta2_prmz - 5*Delta1*Delta4_prmz + 5*Delta1_prmz*Delta2**2 - 5*Delta1_prmz*Delta4 - 5*Delta2*Delta3_prmz - 5*Delta2_prmz*Delta3)/(5*etaKminus1**2) + etaKminus1_prmz*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmz*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmz = 128*etaKminus1*etaKminus1_prmz/5
    logarg_prmz = u*(Delta1_prmz + u*(Delta2_prmz + u*(Delta3_prmz + u*(Delta4_prmz + u*(Delta5l*u_prmz/u + Delta5l_prmz*np.log(u) + Delta5_prmz) + u_prmz*(Delta5 + Delta5l*np.log(u))) + u_prmz*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))) + u_prmz*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))) + u_prmz*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))))) + u_prmz*(Delta1 + u*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))))
    Deltaucalib_prmz = eta*(Delta0_prmz + logarg_prmz*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmz = eta*logarg_prmz*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmz + u*(2*Delta2_prmz + u*(3*Delta3_prmz + u*(4*Delta4_prmz + u*(5*Delta5l*u_prmz/u + 5*Delta5l_prmz*np.log(u) + 5*Delta5_prmz) + u_prmz*(5*Delta5 + 5*Delta5l*np.log(u))) + u_prmz*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u)))) + u_prmz*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))) + u_prmz*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1) + eta*u*u_prmz*(-2*Delta1 - 2*u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)
    Deltaubar_prmz = 2*a**2*u*u_prmz + (2*u_prmz - etaKminus1_prmz/etaKminus1**2)/etaKminus1 + etaKminus1_prmz*(-2*u - 1/etaKminus1)/etaKminus1**2
    Deltaubarprime_prmz = -6*a**2*u**2*u_prmz - 4*u*u_prmz/etaKminus1 + 2*etaKminus1_prmz*u**2/etaKminus1**2
    Deltau_prmz = (Deltaubar*Deltaucalib_prmz + Deltaubar_prmz*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmz = Deltaubar*Deltaucalibprime_prmz + Deltaubarprime*Deltaucalib_prmz + Deltaubarprime_prmz*Deltaucalib + Deltaubar_prmz*Deltaucalibprime
    Deltatprime_prmz = 2*Deltau*r_prmz + 2*Deltauprime*r*r_prmz + Deltauprime_prmz*r**2 + 2*Deltau_prmz*r
    Deltat_prmz = 2*Deltau*r*r_prmz + Deltau_prmz*r**2
    Deltar_prmz = Deltat*Dinv_prmz + Deltat_prmz*Dinv
    Deltarprime_prmz = Deltat*Dinvprime_prmz + Deltatprime*Dinv_prmz + Deltatprime_prmz*Dinv + Deltat_prmz*Dinvprime
    Lambt_prmz = (Deltat*a**2*sin2theta_prmz + Deltat_prmz*a**2*sin2theta - 2*w2*w2_prmz)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmz = (Deltar*Deltat_prmz + Deltar_prmz*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmz*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmz = 4.0*r*w2_prmz*np.sqrt(Deltar*Deltat)/w2**3 - 2.0*r_prmz*np.sqrt(Deltar*Deltat)/w2**2 + (Deltar*Deltatprime_prmz + Deltarprime*Deltat_prmz + Deltarprime_prmz*Deltat + Deltar_prmz*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmz*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmz/2 + Deltar_prmz*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmz/2 - Deltar_prmz*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmz = csi_prmz*(1 - np.abs(tortoise - 1))
    csi2_prmz = csi_prmz*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmz = csi2*(n1_prmz*p1 + n2_prmz*p2 + n3_prmz*p3) + csi2_prmz*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmz = n3*prT_prmz*(-1 + 1/csi1) + n3_prmz*prT*(-1 + 1/csi1) - csi1_prmz*n3*prT/csi1**2
    phat2_prmz = n2*prT_prmz*(-1 + 1/csi1) + n2_prmz*prT*(-1 + 1/csi1) - csi1_prmz*n2*prT/csi1**2
    phat1_prmz = n1*prT_prmz*(-1 + 1/csi1) + n1_prmz*prT*(-1 + 1/csi1) - csi1_prmz*n1*prT/csi1**2
    pdotxir_prmz = r*(phat1*xi1_prmz + phat1_prmz*xi1 + phat2*xi2_prmz + phat2_prmz*xi2 + phat3*xi3_prmz + phat3_prmz*xi3) + r_prmz*(phat1*xi1 + phat2*xi2 + phat3*xi3)
    pdotn_prmz = n1*phat1_prmz + n1_prmz*phat1 + n2*phat2_prmz + n2_prmz*phat2 + n3*phat3_prmz + n3_prmz*phat3
    pdotvr_prmz = r*(phat1*v1_prmz + phat1_prmz*v1 + phat2*v2_prmz + phat2_prmz*v2 + phat3*v3_prmz + phat3_prmz*v3) + r_prmz*(phat1*v1 + phat2*v2 + phat3*v3)
    pphi_prmz = pdotxir_prmz
    Qcoeff2_prmz = -sin2theta_prmz/(Sigma*sin2theta**2) - Sigma_prmz/(Sigma**2*sin2theta)
    Qcoeff1_prmz = -Sigma*sin2theta_prmz/(Lambt*sin2theta**2) + Sigma_prmz/(Lambt*sin2theta) - Lambt_prmz*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmz = 2*Deltar*pdotn*pdotn_prmz/Sigma - Deltar*Sigma_prmz*pdotn**2/Sigma**2 + Deltar_prmz*pdotn**2/Sigma
    Q_prmz = DrSipn2_prmz + 2*Qcoeff1*pdotxir*pdotxir_prmz + Qcoeff1_prmz*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmz + Qcoeff2_prmz*pdotvr**2
    Qminus1_prmz = Q_prmz
    Jtilde_prmz = Deltar_prmz/(2*np.sqrt(Deltar))
    exp2mu_prmz = Sigma_prmz
    expmu_prmz = exp2mu_prmz/(2*np.sqrt(exp2mu))
    Brtilde_prmz = (np.sqrt(Deltar)*Deltatprime_prmz - 2*Deltat_prmz + Deltar_prmz*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmz/2 - Deltar_prmz*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmz = Deltat_prmz/(2*np.sqrt(Deltat))
    exp2nu_prmz = Deltat*Sigma_prmz/Lambt - Deltat*Lambt_prmz*Sigma/Lambt**2 + Deltat_prmz*Sigma/Lambt
    expnu_prmz = exp2nu_prmz/(2*np.sqrt(exp2nu))
    omega_prmz = omegatilde_prmz/Lambt - Lambt_prmz*omegatilde/Lambt**2
    Lambtprime_prmz = -Deltatprime*a**2*sin2theta_prmz - Deltatprime_prmz*a**2*sin2theta + 8*r**2*r_prmz + r_prmz*(4*a**2 + 4*r**2)
    mucostheta_prmz = a**2*costheta_prmz/Sigma - Sigma_prmz*a**2*costheta/Sigma**2
    nucostheta_prmz = a**2*costheta*w2*(-Deltat_prmz + w2_prmz)/(Lambt*Sigma) + a**2*costheta*w2_prmz*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmz*w2*(-Deltat + w2)/(Lambt*Sigma) - Sigma_prmz*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmz*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmz = -2*Deltat*a**2*costheta*omegatilde_prmz/Lambt**2 - 2*Deltat*a**2*costheta_prmz*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmz*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmz*a**2*costheta*omegatilde/Lambt**2
    mur_prmz = r_prmz/Sigma - Sigma_prmz*r/Sigma**2 + Deltar_prmz/(2*Deltar**(3/2))
    nur_prmz = r_prmz/Sigma - Sigma_prmz*r/Sigma**2 + w2*(-4*Deltat*r_prmz + Deltatprime*w2_prmz + Deltatprime_prmz*w2 - 4*Deltat_prmz*r)/(2*Deltat*Lambt) + w2_prmz*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmz*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmz*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmz = (-Lambtprime*omegatilde_prmz - Lambtprime_prmz*omegatilde + Lambt_prmz*omegatildeprime)/Lambt**2 + Lambt_prmz*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmz = 442.443*chi**2*chi_prmz*eta**2 - 1705.953*chi**2*chi_prmz*eta + 198.5961*chi**2*chi_prmz - 686.626*chi*chi_prmz*eta + 2495.29*chi_prmz*eta**2
    sigmacoeffTerm3_prmz = 3*dSO*eta*u**2*u_prmz + dSO_prmz*eta*u**3
    sigmacoeffTerm2_prmz = eta*(eta*(r*(-12.25*DrSipn2*u*u_prmz - 6.125*DrSipn2_prmz*u**2 + 2.83333333333333*Qminus1*u*u_prmz + 1.41666666666667*Qminus1_prmz*u**2 + r*(11.25*DrSipn2**2*u*u_prmz + 11.25*DrSipn2*DrSipn2_prmz*u**2 - 3.25*DrSipn2*Qminus1*u*u_prmz - 1.625*DrSipn2*Qminus1_prmz*u**2 - 1.625*DrSipn2_prmz*Qminus1*u**2) + r_prmz*(5.625*DrSipn2**2*u**2 - 1.625*DrSipn2*Qminus1*u**2)) + r_prmz*(-6.125*DrSipn2*u**2 + 1.41666666666667*Qminus1*u**2 + r*(5.625*DrSipn2**2*u**2 - 1.625*DrSipn2*Qminus1*u**2)) - 4.66666666666667*u*u_prmz) + r*(-1.33333333333333*DrSipn2*u*u_prmz - 0.666666666666667*DrSipn2_prmz*u**2 - 6.05555555555556*Qminus1*u*u_prmz - 3.02777777777778*Qminus1_prmz*u**2 + r*(0.5*DrSipn2*Qminus1*u*u_prmz + 0.25*DrSipn2*Qminus1_prmz*u**2 + 0.25*DrSipn2_prmz*Qminus1*u**2 - 0.625*Qminus1**2*u*u_prmz - 0.625*Qminus1*Qminus1_prmz*u**2) + r_prmz*(0.25*DrSipn2*Qminus1*u**2 - 0.3125*Qminus1**2*u**2)) + r_prmz*(-0.666666666666667*DrSipn2*u**2 - 3.02777777777778*Qminus1*u**2 + r*(0.25*DrSipn2*Qminus1*u**2 - 0.3125*Qminus1**2*u**2)) - 12.4444444444444*u*u_prmz)
    sigmacoeffTerm1_prmz = eta*(-3*DrSipn2_prmz + Qminus1_prmz/4 + 2*r_prmz/(3*r**2))
    sigmacoeff_prmz = sigmacoeffTerm1_prmz + sigmacoeffTerm2_prmz + sigmacoeffTerm3_prmz
    sigmastarcoeffTerm2_prmz = eta*(eta*(r*(-324*DrSipn2_prmz + 120*Qminus1_prmz + r*(720*DrSipn2*DrSipn2_prmz + Qminus1*(-126*DrSipn2_prmz - 3*Qminus1_prmz) + Qminus1_prmz*(-126*DrSipn2 - 3*Qminus1)) + r_prmz*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1))) + r_prmz*(-324*DrSipn2 + 120*Qminus1 + r*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1)))) + r*(282*DrSipn2_prmz + Qminus1*r*(96*DrSipn2_prmz - 23*Qminus1_prmz) + Qminus1*r_prmz*(96*DrSipn2 - 23*Qminus1) + Qminus1_prmz*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmz) + r_prmz*(282*DrSipn2 + Qminus1*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1))/(72*r**2) + eta*r_prmz*(-eta*(r*(-324*DrSipn2 + 120*Qminus1 + r*(360*DrSipn2**2 + Qminus1*(-126*DrSipn2 - 3*Qminus1))) - 54) - r*(282*DrSipn2 + Qminus1*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1) - 706)/(36*r**3)
    sigmastarcoeffTerm1_prmz = eta*(-5*DrSipn2_prmz/2 + Qminus1_prmz/3 - 7*r_prmz/(6*r**2))
    sigmastarcoeff_prmz = sigmastarcoeffTerm1_prmz + sigmastarcoeffTerm2_prmz
    Deltasigmastar3_prmz = sigma3*sigmacoeff_prmz + sigmastar3*sigmastarcoeff_prmz
    Deltasigmastar2_prmz = sigma2*sigmacoeff_prmz + sigmastar2*sigmastarcoeff_prmz
    Deltasigmastar1_prmz = sigma1*sigmacoeff_prmz + sigmastar1*sigmastarcoeff_prmz
    Sstar3_prmz = Deltasigmastar3_prmz
    Sstar2_prmz = Deltasigmastar2_prmz
    Sstar1_prmz = Deltasigmastar1_prmz
    S3_prmz = Sstar3_prmz
    S2_prmz = Sstar2_prmz
    S1_prmz = Sstar1_prmz
    Sstardotn_prmz = Sstar1*n1_prmz + Sstar1_prmz*n1 + Sstar2*n2_prmz + Sstar2_prmz*n2 + Sstar3*n3_prmz + Sstar3_prmz*n3
    Sdote3_prmz = S1*e31_prmz + S1_prmz*e31 + S2*e32_prmz + S2_prmz*e32 + S3*e33_prmz + S3_prmz*e33
    Sdotn_prmz = S1*n1_prmz + S1_prmz*n1 + S2*n2_prmz + S2_prmz*n2 + S3*n3_prmz + S3_prmz*n3
    Sdotv_prmz = S1*v1_prmz + S1_prmz*v1 + S2*v2_prmz + S2_prmz*v2 + S3*v3_prmz + S3_prmz*v3
    Sdotxi_prmz = S1*xi1_prmz + S1_prmz*xi1 + S2*xi2_prmz + S2_prmz*xi2 + S3*xi3_prmz + S3_prmz*xi3
    HdsumTerm2_prmz = 6*Sstardotn*Sstardotn_prmz
    HdsumTerm1_prmz = 2*Sstar1*Sstar1_prmz + 2*Sstar2*Sstar2_prmz + 2*Sstar3*Sstar3_prmz
    Hdsum_prmz = HdsumTerm1_prmz - HdsumTerm2_prmz
    Hdcoeff_prmz = -3*r_prmz/(2*r**4)
    Q4_prmz = eta*prT**4*u*u_prmz*(16 - 12*eta) + eta*prT**3*prT_prmz*u**2*(32 - 24*eta)
    gammappsum_prmz = 2*Deltar*pdotn*pdotn_prmz/Sigma - Deltar*Sigma_prmz*pdotn**2/Sigma**2 + Deltar_prmz*pdotn**2/Sigma - pdotvr**2*sin2theta_prmz/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmz/(Sigma*sin2theta) - Sigma_prmz*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmz/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmz/(Lambt*sin2theta) + Sigma_prmz*pdotxir**2/(Lambt*sin2theta) - Lambt_prmz*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmz = Q4_prmz + gammappsum_prmz
    alpha_prmz = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmz/(2*Lambt) - Deltat*Lambt_prmz*Sigma/(2*Lambt**2) + Deltat_prmz*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmz = omegatilde*pphi_prmz/Lambt + omegatilde_prmz*pphi/Lambt - Lambt_prmz*omegatilde*pphi/Lambt**2
    HssTerm3_prmz = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmz - Q_prmz/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmz*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmz*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmz*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmz - Jtilde*Sdotv_prmz*pdotn - Jtilde_prmz*Sdotv*pdotn + Sdotn*pdotvr_prmz + Sdotn_prmz*pdotvr) + pdotvr_prmz*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmz*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmz + Btilde*Jtilde*Sdotxi_prmz*pdotn + Btilde*Jtilde_prmz*Sdotxi*pdotn + Btilde_prmz*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmz - Sdotn*expmu*expnu_prmz*pdotxir - Sdotn*expmu_prmz*expnu*pdotxir - Sdotn_prmz*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmz*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmz*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmz*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmz = omegacostheta*(-Q_prmz - Q_prmz/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmz/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmz*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmz*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmz*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmz*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmz = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmz - Jtilde*Sdotv_prmz*pdotn - Jtilde_prmz*Sdotv*pdotn + Sdotn*pdotvr_prmz + Sdotn_prmz*pdotvr) + Jtilde*pdotn_prmz*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmz*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmz + Q_prmz/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmz*(np.sqrt(Q) + Q) + Sdotv_prmz*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmz*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmz*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmz - Btilde*Sdotxi*expnu_prmz*pdotvr - Btilde*Sdotxi_prmz*expnu*pdotvr - Btilde_prmz*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmz + Sdotv*exp2nu*expmu_prmz*pdotxir + Sdotv*exp2nu_prmz*expmu*pdotxir + Sdotv_prmz*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmz*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmz*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmz = Jtilde*omegar*(-Q_prmz - Q_prmz/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmz/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmz/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmz*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmz*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmz*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmz*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmz*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmz = Sdote3*omega_prmz + Sdote3_prmz*omega
    Hss_prmz = HssTerm1_prmz + HssTerm2*HssTerm2coeff_prmz + HssTerm2coeff*HssTerm2_prmz + HssTerm3*HssTerm3coeff_prmz + HssTerm3coeff*HssTerm3_prmz
    HsoTerm2c_prmz = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmz*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmz*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmz*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmz*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmz*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmz*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmz*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmz = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmz + Jtilde*Sdotv_prmz*nur + Jtilde_prmz*Sdotv*nur - Sdotn*nucostheta*xisq_prmz - Sdotn*nucostheta_prmz*xisq - Sdotn_prmz*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmz*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmz*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmz*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmz*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmz*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmz = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmz + nur_prmz*pdotvr + pdotn*xisq*(mucostheta_prmz - nucostheta_prmz) + pdotn*xisq_prmz*(mucostheta - nucostheta) + pdotn_prmz*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmz - mucostheta*pdotn_prmz*xisq - mucostheta_prmz*pdotn*xisq + mur*pdotvr_prmz*(np.sqrt(Q) + 1) + mur_prmz*pdotvr*(np.sqrt(Q) + 1) + Q_prmz*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmz*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmz*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmz*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmz*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmz = HsoTerm2a_prmz + HsoTerm2b_prmz - HsoTerm2c_prmz
    HsoTerm2coeff_prmz = expnu*(-Q_prmz - Q_prmz/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmz/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmz/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmz*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmz*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmz = Sdote3*exp2nu*pdotxir*(-Btilde_prmz + expmu*expnu_prmz + expmu_prmz*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmz*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmz*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmz*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmz*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmz*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmz*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmz*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmz = HsoTerm1_prmz + HsoTerm2*HsoTerm2coeff_prmz + HsoTerm2coeff*HsoTerm2_prmz
    Hd_prmz = Hdcoeff*Hdsum_prmz + Hdcoeff_prmz*Hdsum
    Hns_prmz = np.sqrt(Hnsradicand)*alpha_prmz + betapsum_prmz + Hnsradicand_prmz*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmz = Hso_prmz + Hss_prmz
    dSS_prmz = 1585.533*chi**2*chi_prmz*eta**2 - 123.0009*chi**2*chi_prmz*eta + 2323.56*chi*chi_prmz*eta**3 - 652.65*chi*chi_prmz*eta**2 + 37.1964*chi_prmz*eta
    Heff_prmz = -Hd_prmz + Hns_prmz + Hs_prmz + dSS*eta*u**3*u_prmz*(4*S1x**2 + 4*S1y**2 + 4*S1z**2 + 4*S2x**2 + 4*S2y**2 + 4*S2z**2) + dSS_prmz*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmz = Heff_prmz*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmz

def v4P_compute_ham_p1_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    L3_prmp1 = -y
    L2_prmp1 = z
    Lnorm_prmp1 = (L2*L2_prmp1 + L3*L3_prmp1)/np.sqrt(L1**2 + L2**2 + L3**2)
    Lhat3_prmp1 = -L3*Lnorm_prmp1/Lnorm**2 + L3_prmp1/Lnorm
    Lhat2_prmp1 = -L2*Lnorm_prmp1/Lnorm**2 + L2_prmp1/Lnorm
    Lhat1_prmp1 = -L1*Lnorm_prmp1/Lnorm**2
    S2dotLhat_prmp1 = Lhat1_prmp1*S2x + Lhat2_prmp1*S2y + Lhat3_prmp1*S2z
    S1dotLhat_prmp1 = Lhat1_prmp1*S1x + Lhat2_prmp1*S1y + Lhat3_prmp1*S1z
    S1perp3_prmp1 = -Lhat3*S1dotLhat_prmp1 - Lhat3_prmp1*S1dotLhat
    S1perp2_prmp1 = -Lhat2*S1dotLhat_prmp1 - Lhat2_prmp1*S1dotLhat
    S1perp1_prmp1 = -Lhat1*S1dotLhat_prmp1 - Lhat1_prmp1*S1dotLhat
    S2perp3_prmp1 = -Lhat3*S2dotLhat_prmp1 - Lhat3_prmp1*S2dotLhat
    S2perp2_prmp1 = -Lhat2*S2dotLhat_prmp1 - Lhat2_prmp1*S2dotLhat
    S2perp1_prmp1 = -Lhat1*S2dotLhat_prmp1 - Lhat1_prmp1*S2dotLhat
    Sperp3_prmp1 = S1perp3_prmp1 + S2perp3_prmp1
    Sperp2_prmp1 = S1perp2_prmp1 + S2perp2_prmp1
    Sperp1_prmp1 = S1perp1_prmp1 + S2perp1_prmp1
    lambdavec3_prmp1 = Lhat1_prmp1*n2 - Lhat2_prmp1*n3
    lambdavec2_prmp1 = -Lhat1_prmp1*n3 + Lhat3_prmp1*n1
    lambdavec1_prmp1 = Lhat2_prmp1*n3 - Lhat3_prmp1*n2
    lambdavecnorm_prmp1 = (lambdavec1*lambdavec1_prmp1 + lambdavec2*lambdavec2_prmp1 + lambdavec3*lambdavec3_prmp1)/np.sqrt(lambdavec1**2 + lambdavec2**2 + lambdavec3**2)
    lambdahat3_prmp1 = -lambdavec3*lambdavecnorm_prmp1/lambdavecnorm**2 + lambdavec3_prmp1/lambdavecnorm
    lambdahat2_prmp1 = -lambdavec2*lambdavecnorm_prmp1/lambdavecnorm**2 + lambdavec2_prmp1/lambdavecnorm
    lambdahat1_prmp1 = -lambdavec1*lambdavecnorm_prmp1/lambdavecnorm**2 + lambdavec1_prmp1/lambdavecnorm
    lambdahat_dot_e3prov_prmp1 = e3prov1*lambdahat1_prmp1 + e3prov2*lambdahat2_prmp1 + e3prov3*lambdahat3_prmp1
    lambdahat_cross_e3prov3_prmp1 = -e3prov1*lambdahat2_prmp1 + e3prov2*lambdahat1_prmp1
    lambdahat_cross_e3prov2_prmp1 = e3prov1*lambdahat3_prmp1 - e3prov3*lambdahat1_prmp1
    lambdahat_cross_e3prov1_prmp1 = -e3prov2*lambdahat3_prmp1 + e3prov3*lambdahat2_prmp1
    e31_prmp1 = e3_leq_bound*(lambdahat1*lambdahat_dot_e3prov_prmp1*(1 - cos_0_1_deg) + lambdahat1_prmp1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmp1*sin_0_1_deg)
    e32_prmp1 = e3_leq_bound*(lambdahat2*lambdahat_dot_e3prov_prmp1*(1 - cos_0_1_deg) + lambdahat2_prmp1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmp1*sin_0_1_deg)
    e33_prmp1 = e3_leq_bound*(lambdahat3*lambdahat_dot_e3prov_prmp1*(1 - cos_0_1_deg) + lambdahat3_prmp1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmp1*sin_0_1_deg)
    xi3_prmp1 = e31_prmp1*n2 - e32_prmp1*n1
    xi2_prmp1 = -e31_prmp1*n3 + e33_prmp1*n1
    xi1_prmp1 = e32_prmp1*n3 - e33_prmp1*n2
    v3_prmp1 = n1*xi2_prmp1 - n2*xi1_prmp1
    v2_prmp1 = -n1*xi3_prmp1 + n3*xi1_prmp1
    v1_prmp1 = n2*xi3_prmp1 - n3*xi2_prmp1
    costheta_prmp1 = e31_prmp1*n1 + e32_prmp1*n2 + e33_prmp1*n3
    sin2theta_prmp1 = -2*costheta*costheta_prmp1
    xisq_prmp1 = sin2theta_prmp1
    Sigma_prmp1 = 2*a**2*costheta*costheta_prmp1
    chi_prmp1 = (Lhat1_prmp1*Skerr1 + Lhat2_prmp1*Skerr2 + Lhat3_prmp1*Skerr3)/(1 - 2*eta) + (Skerr1*Sperp1_prmp1/2 + Skerr2*Sperp2_prmp1/2 + Skerr3*Sperp3_prmp1/2)/(Skerrmag*(1.0 - 2.0*eta))
    K_prmp1 = -177.4974*chi**2*chi_prmp1*eta**3 - 1.280874*chi**2*chi_prmp1*eta + 4.30977*chi**2*chi_prmp1 + 62.3492*chi*chi_prmp1*eta**3 + 12.32932*chi*chi_prmp1*eta**2 - 2.76172*chi*chi_prmp1 - 27.5201*chi_prmp1*eta**3 + 17.3736*chi_prmp1*eta**2 + 2.26831*chi_prmp1*eta - 1.62045*chi_prmp1
    etaKminus1_prmp1 = K_prmp1*eta
    Delta0_prmp1 = K*K_prmp1*eta + K_prmp1*(K*eta - 2)
    Delta1_prmp1 = etaKminus1*(-2*Delta0_prmp1 - 2*K_prmp1) + etaKminus1_prmp1*(-2*Delta0 - 2*K)
    Delta2_prmp1 = -2*Delta0*a**2*etaKminus1*etaKminus1_prmp1 - Delta0_prmp1*a**2*etaKminus1**2 + Delta1*(Delta1_prmp1/2 - 2*etaKminus1_prmp1) + Delta1_prmp1*(Delta1/2 - 2*etaKminus1)
    Delta3_prmp1 = -Delta1**2*Delta1_prmp1 + Delta1**2*etaKminus1_prmp1 + 2*Delta1*Delta1_prmp1*etaKminus1 + Delta1*Delta2_prmp1 - 2*Delta1*a**2*etaKminus1*etaKminus1_prmp1 + Delta1_prmp1*Delta2 - Delta1_prmp1*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmp1 + 2*etaKminus1_prmp1) + etaKminus1_prmp1*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmp1 = Delta1**3*Delta1_prmp1 - 2*Delta1**3*etaKminus1_prmp1/3 - 2*Delta1**2*Delta1_prmp1*etaKminus1 - Delta1**2*Delta2_prmp1 - 2*Delta1*Delta1_prmp1*Delta2 + Delta1*(2*Delta2*etaKminus1_prmp1 + 2*Delta2_prmp1*etaKminus1 + Delta3_prmp1) + Delta1_prmp1*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmp1 - 2*Delta3*etaKminus1_prmp1 - 2*Delta3_prmp1*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmp1 - 2*Delta2_prmp1)/2 + a**2*etaKminus1*etaKminus1_prmp1*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmp1*(376 - 123*np.pi**2/8)/6
    Delta5_prmp1 = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmp1 - 3*Delta1*Delta2_prmp1 - 3*Delta1_prmp1*Delta2 + 3*Delta3_prmp1)/3 + (4*Delta1**3*Delta1_prmp1 - 4*Delta1**2*Delta2_prmp1 - 8*Delta1*Delta1_prmp1*Delta2 + 4*Delta1*Delta3_prmp1 + 4*Delta1_prmp1*Delta3 + 4*Delta2*Delta2_prmp1 - 4*Delta4_prmp1)/(2*etaKminus1) - etaKminus1_prmp1*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmp1 - 5*Delta1**3*Delta2_prmp1 - 15*Delta1**2*Delta1_prmp1*Delta2 + 5*Delta1**2*Delta3_prmp1 + 10*Delta1*Delta1_prmp1*Delta3 + 10*Delta1*Delta2*Delta2_prmp1 - 5*Delta1*Delta4_prmp1 + 5*Delta1_prmp1*Delta2**2 - 5*Delta1_prmp1*Delta4 - 5*Delta2*Delta3_prmp1 - 5*Delta2_prmp1*Delta3)/(5*etaKminus1**2) + etaKminus1_prmp1*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmp1*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmp1 = 128*etaKminus1*etaKminus1_prmp1/5
    logarg_prmp1 = u*(Delta1_prmp1 + u*(Delta2_prmp1 + u*(Delta3_prmp1 + u*(Delta4_prmp1 + u*(Delta5l_prmp1*np.log(u) + Delta5_prmp1)))))
    Deltaucalib_prmp1 = eta*(Delta0_prmp1 + logarg_prmp1*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmp1 = eta*logarg_prmp1*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmp1 + u*(2*Delta2_prmp1 + u*(3*Delta3_prmp1 + u*(4*Delta4_prmp1 + u*(5*Delta5l_prmp1*np.log(u) + 5*Delta5_prmp1)))))/(logarg + 1)
    Deltaubar_prmp1 = etaKminus1_prmp1*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmp1/etaKminus1**3
    Deltaubarprime_prmp1 = 2*etaKminus1_prmp1*u**2/etaKminus1**2
    Deltau_prmp1 = (Deltaubar*Deltaucalib_prmp1 + Deltaubar_prmp1*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmp1 = Deltaubar*Deltaucalibprime_prmp1 + Deltaubarprime*Deltaucalib_prmp1 + Deltaubarprime_prmp1*Deltaucalib + Deltaubar_prmp1*Deltaucalibprime
    Deltatprime_prmp1 = Deltauprime_prmp1*r**2 + 2*Deltau_prmp1*r
    Deltat_prmp1 = Deltau_prmp1*r**2
    Deltar_prmp1 = Deltat_prmp1*Dinv
    Deltarprime_prmp1 = Deltatprime_prmp1*Dinv + Deltat_prmp1*Dinvprime
    Lambt_prmp1 = (Deltat*a**2*sin2theta_prmp1 + Deltat_prmp1*a**2*sin2theta)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmp1 = (Deltar*Deltat_prmp1 + Deltar_prmp1*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat)))
    csiprime_prmp1 = (Deltar*Deltatprime_prmp1 + Deltarprime*Deltat_prmp1 + Deltarprime_prmp1*Deltat + Deltar_prmp1*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmp1/2 + Deltar_prmp1*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmp1/2 - Deltar_prmp1*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmp1 = csi_prmp1*(1 - np.abs(tortoise - 1))
    csi2_prmp1 = csi_prmp1*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmp1 = csi2*n1 + csi2_prmp1*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmp1 = n3*prT_prmp1*(-1 + 1/csi1) - csi1_prmp1*n3*prT/csi1**2
    phat2_prmp1 = n2*prT_prmp1*(-1 + 1/csi1) - csi1_prmp1*n2*prT/csi1**2
    phat1_prmp1 = n1*prT_prmp1*(-1 + 1/csi1) + 1 - csi1_prmp1*n1*prT/csi1**2
    pdotxir_prmp1 = r*(phat1*xi1_prmp1 + phat1_prmp1*xi1 + phat2*xi2_prmp1 + phat2_prmp1*xi2 + phat3*xi3_prmp1 + phat3_prmp1*xi3)
    pdotn_prmp1 = n1*phat1_prmp1 + n2*phat2_prmp1 + n3*phat3_prmp1
    pdotvr_prmp1 = r*(phat1*v1_prmp1 + phat1_prmp1*v1 + phat2*v2_prmp1 + phat2_prmp1*v2 + phat3*v3_prmp1 + phat3_prmp1*v3)
    pphi_prmp1 = pdotxir_prmp1
    Qcoeff2_prmp1 = -sin2theta_prmp1/(Sigma*sin2theta**2) - Sigma_prmp1/(Sigma**2*sin2theta)
    Qcoeff1_prmp1 = -Sigma*sin2theta_prmp1/(Lambt*sin2theta**2) + Sigma_prmp1/(Lambt*sin2theta) - Lambt_prmp1*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmp1 = 2*Deltar*pdotn*pdotn_prmp1/Sigma - Deltar*Sigma_prmp1*pdotn**2/Sigma**2 + Deltar_prmp1*pdotn**2/Sigma
    Q_prmp1 = DrSipn2_prmp1 + 2*Qcoeff1*pdotxir*pdotxir_prmp1 + Qcoeff1_prmp1*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmp1 + Qcoeff2_prmp1*pdotvr**2
    Qminus1_prmp1 = Q_prmp1
    Jtilde_prmp1 = Deltar_prmp1/(2*np.sqrt(Deltar))
    exp2mu_prmp1 = Sigma_prmp1
    expmu_prmp1 = exp2mu_prmp1/(2*np.sqrt(exp2mu))
    Brtilde_prmp1 = (np.sqrt(Deltar)*Deltatprime_prmp1 - 2*Deltat_prmp1 + Deltar_prmp1*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmp1/2 - Deltar_prmp1*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmp1 = Deltat_prmp1/(2*np.sqrt(Deltat))
    exp2nu_prmp1 = Deltat*Sigma_prmp1/Lambt - Deltat*Lambt_prmp1*Sigma/Lambt**2 + Deltat_prmp1*Sigma/Lambt
    expnu_prmp1 = exp2nu_prmp1/(2*np.sqrt(exp2nu))
    omega_prmp1 = -Lambt_prmp1*omegatilde/Lambt**2
    Lambtprime_prmp1 = -Deltatprime*a**2*sin2theta_prmp1 - Deltatprime_prmp1*a**2*sin2theta
    mucostheta_prmp1 = a**2*costheta_prmp1/Sigma - Sigma_prmp1*a**2*costheta/Sigma**2
    nucostheta_prmp1 = -Deltat_prmp1*a**2*costheta*w2/(Lambt*Sigma) + a**2*costheta_prmp1*w2*(-Deltat + w2)/(Lambt*Sigma) - Sigma_prmp1*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmp1*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmp1 = -2*Deltat*a**2*costheta_prmp1*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmp1*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmp1*a**2*costheta*omegatilde/Lambt**2
    mur_prmp1 = -Sigma_prmp1*r/Sigma**2 + Deltar_prmp1/(2*Deltar**(3/2))
    nur_prmp1 = -Sigma_prmp1*r/Sigma**2 + w2*(Deltatprime_prmp1*w2 - 4*Deltat_prmp1*r)/(2*Deltat*Lambt) - Lambt_prmp1*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmp1*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmp1 = (-Lambtprime_prmp1*omegatilde + Lambt_prmp1*omegatildeprime)/Lambt**2 + Lambt_prmp1*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmp1 = 442.443*chi**2*chi_prmp1*eta**2 - 1705.953*chi**2*chi_prmp1*eta + 198.5961*chi**2*chi_prmp1 - 686.626*chi*chi_prmp1*eta + 2495.29*chi_prmp1*eta**2
    sigmacoeffTerm3_prmp1 = dSO_prmp1*eta*u**3
    sigmacoeffTerm2_prmp1 = eta*(eta*r*(-6.125*DrSipn2_prmp1*u**2 + 1.41666666666667*Qminus1_prmp1*u**2 + r*(11.25*DrSipn2*DrSipn2_prmp1*u**2 - 1.625*DrSipn2*Qminus1_prmp1*u**2 - 1.625*DrSipn2_prmp1*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmp1*u**2 - 3.02777777777778*Qminus1_prmp1*u**2 + r*(0.25*DrSipn2*Qminus1_prmp1*u**2 + 0.25*DrSipn2_prmp1*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmp1*u**2)))
    sigmacoeffTerm1_prmp1 = eta*(-3*DrSipn2_prmp1 + Qminus1_prmp1/4)
    sigmacoeff_prmp1 = sigmacoeffTerm1_prmp1 + sigmacoeffTerm2_prmp1 + sigmacoeffTerm3_prmp1
    sigmastarcoeffTerm2_prmp1 = eta*(eta*r*(-324*DrSipn2_prmp1 + 120*Qminus1_prmp1 + r*(720*DrSipn2*DrSipn2_prmp1 + Qminus1*(-126*DrSipn2_prmp1 - 3*Qminus1_prmp1) + Qminus1_prmp1*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmp1 + Qminus1*r*(96*DrSipn2_prmp1 - 23*Qminus1_prmp1) + Qminus1_prmp1*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmp1))/(72*r**2)
    sigmastarcoeffTerm1_prmp1 = eta*(-5*DrSipn2_prmp1/2 + Qminus1_prmp1/3)
    sigmastarcoeff_prmp1 = sigmastarcoeffTerm1_prmp1 + sigmastarcoeffTerm2_prmp1
    Deltasigmastar3_prmp1 = sigma3*sigmacoeff_prmp1 + sigmastar3*sigmastarcoeff_prmp1
    Deltasigmastar2_prmp1 = sigma2*sigmacoeff_prmp1 + sigmastar2*sigmastarcoeff_prmp1
    Deltasigmastar1_prmp1 = sigma1*sigmacoeff_prmp1 + sigmastar1*sigmastarcoeff_prmp1
    Sstar3_prmp1 = Deltasigmastar3_prmp1
    Sstar2_prmp1 = Deltasigmastar2_prmp1
    Sstar1_prmp1 = Deltasigmastar1_prmp1
    S3_prmp1 = Sstar3_prmp1
    S2_prmp1 = Sstar2_prmp1
    S1_prmp1 = Sstar1_prmp1
    Sstardotn_prmp1 = Sstar1_prmp1*n1 + Sstar2_prmp1*n2 + Sstar3_prmp1*n3
    Sdote3_prmp1 = S1*e31_prmp1 + S1_prmp1*e31 + S2*e32_prmp1 + S2_prmp1*e32 + S3*e33_prmp1 + S3_prmp1*e33
    Sdotn_prmp1 = S1_prmp1*n1 + S2_prmp1*n2 + S3_prmp1*n3
    Sdotv_prmp1 = S1*v1_prmp1 + S1_prmp1*v1 + S2*v2_prmp1 + S2_prmp1*v2 + S3*v3_prmp1 + S3_prmp1*v3
    Sdotxi_prmp1 = S1*xi1_prmp1 + S1_prmp1*xi1 + S2*xi2_prmp1 + S2_prmp1*xi2 + S3*xi3_prmp1 + S3_prmp1*xi3
    HdsumTerm2_prmp1 = 6*Sstardotn*Sstardotn_prmp1
    HdsumTerm1_prmp1 = 2*Sstar1*Sstar1_prmp1 + 2*Sstar2*Sstar2_prmp1 + 2*Sstar3*Sstar3_prmp1
    Hdsum_prmp1 = HdsumTerm1_prmp1 - HdsumTerm2_prmp1
    Q4_prmp1 = eta*prT**3*prT_prmp1*u**2*(32 - 24*eta)
    gammappsum_prmp1 = 2*Deltar*pdotn*pdotn_prmp1/Sigma - Deltar*Sigma_prmp1*pdotn**2/Sigma**2 + Deltar_prmp1*pdotn**2/Sigma - pdotvr**2*sin2theta_prmp1/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmp1/(Sigma*sin2theta) - Sigma_prmp1*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmp1/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmp1/(Lambt*sin2theta) + Sigma_prmp1*pdotxir**2/(Lambt*sin2theta) - Lambt_prmp1*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmp1 = Q4_prmp1 + gammappsum_prmp1
    alpha_prmp1 = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmp1/(2*Lambt) - Deltat*Lambt_prmp1*Sigma/(2*Lambt**2) + Deltat_prmp1*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmp1 = omegatilde*pphi_prmp1/Lambt - Lambt_prmp1*omegatilde*pphi/Lambt**2
    HssTerm3_prmp1 = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmp1 - Q_prmp1/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmp1*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmp1*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmp1*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmp1 - Jtilde*Sdotv_prmp1*pdotn - Jtilde_prmp1*Sdotv*pdotn + Sdotn*pdotvr_prmp1 + Sdotn_prmp1*pdotvr) + pdotvr_prmp1*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmp1*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmp1 + Btilde*Jtilde*Sdotxi_prmp1*pdotn + Btilde*Jtilde_prmp1*Sdotxi*pdotn + Btilde_prmp1*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmp1 - Sdotn*expmu*expnu_prmp1*pdotxir - Sdotn*expmu_prmp1*expnu*pdotxir - Sdotn_prmp1*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmp1*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmp1*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmp1*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmp1 = omegacostheta*(-Q_prmp1 - Q_prmp1/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmp1/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmp1*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmp1*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmp1*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmp1*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmp1 = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmp1 - Jtilde*Sdotv_prmp1*pdotn - Jtilde_prmp1*Sdotv*pdotn + Sdotn*pdotvr_prmp1 + Sdotn_prmp1*pdotvr) + Jtilde*pdotn_prmp1*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmp1*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmp1 + Q_prmp1/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmp1*(np.sqrt(Q) + Q) + Sdotv_prmp1*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmp1*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmp1*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmp1 - Btilde*Sdotxi*expnu_prmp1*pdotvr - Btilde*Sdotxi_prmp1*expnu*pdotvr - Btilde_prmp1*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmp1 + Sdotv*exp2nu*expmu_prmp1*pdotxir + Sdotv*exp2nu_prmp1*expmu*pdotxir + Sdotv_prmp1*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmp1*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmp1*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmp1 = Jtilde*omegar*(-Q_prmp1 - Q_prmp1/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmp1/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmp1/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmp1*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmp1*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmp1*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmp1*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmp1*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmp1 = Sdote3*omega_prmp1 + Sdote3_prmp1*omega
    Hss_prmp1 = HssTerm1_prmp1 + HssTerm2*HssTerm2coeff_prmp1 + HssTerm2coeff*HssTerm2_prmp1 + HssTerm3*HssTerm3coeff_prmp1 + HssTerm3coeff*HssTerm3_prmp1
    HsoTerm2c_prmp1 = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmp1*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmp1*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmp1*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmp1*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmp1*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmp1*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmp1*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmp1 = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmp1 + Jtilde*Sdotv_prmp1*nur + Jtilde_prmp1*Sdotv*nur - Sdotn*nucostheta*xisq_prmp1 - Sdotn*nucostheta_prmp1*xisq - Sdotn_prmp1*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmp1*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmp1*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmp1*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmp1*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmp1*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmp1 = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmp1 + nur_prmp1*pdotvr + pdotn*xisq*(mucostheta_prmp1 - nucostheta_prmp1) + pdotn*xisq_prmp1*(mucostheta - nucostheta) + pdotn_prmp1*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmp1 - mucostheta*pdotn_prmp1*xisq - mucostheta_prmp1*pdotn*xisq + mur*pdotvr_prmp1*(np.sqrt(Q) + 1) + mur_prmp1*pdotvr*(np.sqrt(Q) + 1) + Q_prmp1*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmp1*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmp1*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmp1*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmp1*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmp1 = HsoTerm2a_prmp1 + HsoTerm2b_prmp1 - HsoTerm2c_prmp1
    HsoTerm2coeff_prmp1 = expnu*(-Q_prmp1 - Q_prmp1/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmp1/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmp1/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmp1*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmp1*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmp1 = Sdote3*exp2nu*pdotxir*(-Btilde_prmp1 + expmu*expnu_prmp1 + expmu_prmp1*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmp1*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmp1*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmp1*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmp1*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmp1*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmp1*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmp1*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmp1 = HsoTerm1_prmp1 + HsoTerm2*HsoTerm2coeff_prmp1 + HsoTerm2coeff*HsoTerm2_prmp1
    Hd_prmp1 = Hdcoeff*Hdsum_prmp1
    Hns_prmp1 = np.sqrt(Hnsradicand)*alpha_prmp1 + betapsum_prmp1 + Hnsradicand_prmp1*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmp1 = Hso_prmp1 + Hss_prmp1
    dSS_prmp1 = 1585.533*chi**2*chi_prmp1*eta**2 - 123.0009*chi**2*chi_prmp1*eta + 2323.56*chi*chi_prmp1*eta**3 - 652.65*chi*chi_prmp1*eta**2 + 37.1964*chi_prmp1*eta
    Heff_prmp1 = -Hd_prmp1 + Hns_prmp1 + Hs_prmp1 + dSS_prmp1*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmp1 = Heff_prmp1*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmp1

def v4P_compute_ham_p2_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    L3_prmp2 = x
    L1_prmp2 = -z
    Lnorm_prmp2 = (L1*L1_prmp2 + L3*L3_prmp2)/np.sqrt(L1**2 + L2**2 + L3**2)
    Lhat3_prmp2 = -L3*Lnorm_prmp2/Lnorm**2 + L3_prmp2/Lnorm
    Lhat2_prmp2 = -L2*Lnorm_prmp2/Lnorm**2
    Lhat1_prmp2 = -L1*Lnorm_prmp2/Lnorm**2 + L1_prmp2/Lnorm
    S2dotLhat_prmp2 = Lhat1_prmp2*S2x + Lhat2_prmp2*S2y + Lhat3_prmp2*S2z
    S1dotLhat_prmp2 = Lhat1_prmp2*S1x + Lhat2_prmp2*S1y + Lhat3_prmp2*S1z
    S1perp3_prmp2 = -Lhat3*S1dotLhat_prmp2 - Lhat3_prmp2*S1dotLhat
    S1perp2_prmp2 = -Lhat2*S1dotLhat_prmp2 - Lhat2_prmp2*S1dotLhat
    S1perp1_prmp2 = -Lhat1*S1dotLhat_prmp2 - Lhat1_prmp2*S1dotLhat
    S2perp3_prmp2 = -Lhat3*S2dotLhat_prmp2 - Lhat3_prmp2*S2dotLhat
    S2perp2_prmp2 = -Lhat2*S2dotLhat_prmp2 - Lhat2_prmp2*S2dotLhat
    S2perp1_prmp2 = -Lhat1*S2dotLhat_prmp2 - Lhat1_prmp2*S2dotLhat
    Sperp3_prmp2 = S1perp3_prmp2 + S2perp3_prmp2
    Sperp2_prmp2 = S1perp2_prmp2 + S2perp2_prmp2
    Sperp1_prmp2 = S1perp1_prmp2 + S2perp1_prmp2
    lambdavec3_prmp2 = Lhat1_prmp2*n2 - Lhat2_prmp2*n3
    lambdavec2_prmp2 = -Lhat1_prmp2*n3 + Lhat3_prmp2*n1
    lambdavec1_prmp2 = Lhat2_prmp2*n3 - Lhat3_prmp2*n2
    lambdavecnorm_prmp2 = (lambdavec1*lambdavec1_prmp2 + lambdavec2*lambdavec2_prmp2 + lambdavec3*lambdavec3_prmp2)/np.sqrt(lambdavec1**2 + lambdavec2**2 + lambdavec3**2)
    lambdahat3_prmp2 = -lambdavec3*lambdavecnorm_prmp2/lambdavecnorm**2 + lambdavec3_prmp2/lambdavecnorm
    lambdahat2_prmp2 = -lambdavec2*lambdavecnorm_prmp2/lambdavecnorm**2 + lambdavec2_prmp2/lambdavecnorm
    lambdahat1_prmp2 = -lambdavec1*lambdavecnorm_prmp2/lambdavecnorm**2 + lambdavec1_prmp2/lambdavecnorm
    lambdahat_dot_e3prov_prmp2 = e3prov1*lambdahat1_prmp2 + e3prov2*lambdahat2_prmp2 + e3prov3*lambdahat3_prmp2
    lambdahat_cross_e3prov3_prmp2 = -e3prov1*lambdahat2_prmp2 + e3prov2*lambdahat1_prmp2
    lambdahat_cross_e3prov2_prmp2 = e3prov1*lambdahat3_prmp2 - e3prov3*lambdahat1_prmp2
    lambdahat_cross_e3prov1_prmp2 = -e3prov2*lambdahat3_prmp2 + e3prov3*lambdahat2_prmp2
    e31_prmp2 = e3_leq_bound*(lambdahat1*lambdahat_dot_e3prov_prmp2*(1 - cos_0_1_deg) + lambdahat1_prmp2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmp2*sin_0_1_deg)
    e32_prmp2 = e3_leq_bound*(lambdahat2*lambdahat_dot_e3prov_prmp2*(1 - cos_0_1_deg) + lambdahat2_prmp2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmp2*sin_0_1_deg)
    e33_prmp2 = e3_leq_bound*(lambdahat3*lambdahat_dot_e3prov_prmp2*(1 - cos_0_1_deg) + lambdahat3_prmp2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmp2*sin_0_1_deg)
    xi3_prmp2 = e31_prmp2*n2 - e32_prmp2*n1
    xi2_prmp2 = -e31_prmp2*n3 + e33_prmp2*n1
    xi1_prmp2 = e32_prmp2*n3 - e33_prmp2*n2
    v3_prmp2 = n1*xi2_prmp2 - n2*xi1_prmp2
    v2_prmp2 = -n1*xi3_prmp2 + n3*xi1_prmp2
    v1_prmp2 = n2*xi3_prmp2 - n3*xi2_prmp2
    costheta_prmp2 = e31_prmp2*n1 + e32_prmp2*n2 + e33_prmp2*n3
    sin2theta_prmp2 = -2*costheta*costheta_prmp2
    xisq_prmp2 = sin2theta_prmp2
    Sigma_prmp2 = 2*a**2*costheta*costheta_prmp2
    chi_prmp2 = (Lhat1_prmp2*Skerr1 + Lhat2_prmp2*Skerr2 + Lhat3_prmp2*Skerr3)/(1 - 2*eta) + (Skerr1*Sperp1_prmp2/2 + Skerr2*Sperp2_prmp2/2 + Skerr3*Sperp3_prmp2/2)/(Skerrmag*(1.0 - 2.0*eta))
    K_prmp2 = -177.4974*chi**2*chi_prmp2*eta**3 - 1.280874*chi**2*chi_prmp2*eta + 4.30977*chi**2*chi_prmp2 + 62.3492*chi*chi_prmp2*eta**3 + 12.32932*chi*chi_prmp2*eta**2 - 2.76172*chi*chi_prmp2 - 27.5201*chi_prmp2*eta**3 + 17.3736*chi_prmp2*eta**2 + 2.26831*chi_prmp2*eta - 1.62045*chi_prmp2
    etaKminus1_prmp2 = K_prmp2*eta
    Delta0_prmp2 = K*K_prmp2*eta + K_prmp2*(K*eta - 2)
    Delta1_prmp2 = etaKminus1*(-2*Delta0_prmp2 - 2*K_prmp2) + etaKminus1_prmp2*(-2*Delta0 - 2*K)
    Delta2_prmp2 = -2*Delta0*a**2*etaKminus1*etaKminus1_prmp2 - Delta0_prmp2*a**2*etaKminus1**2 + Delta1*(Delta1_prmp2/2 - 2*etaKminus1_prmp2) + Delta1_prmp2*(Delta1/2 - 2*etaKminus1)
    Delta3_prmp2 = -Delta1**2*Delta1_prmp2 + Delta1**2*etaKminus1_prmp2 + 2*Delta1*Delta1_prmp2*etaKminus1 + Delta1*Delta2_prmp2 - 2*Delta1*a**2*etaKminus1*etaKminus1_prmp2 + Delta1_prmp2*Delta2 - Delta1_prmp2*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmp2 + 2*etaKminus1_prmp2) + etaKminus1_prmp2*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmp2 = Delta1**3*Delta1_prmp2 - 2*Delta1**3*etaKminus1_prmp2/3 - 2*Delta1**2*Delta1_prmp2*etaKminus1 - Delta1**2*Delta2_prmp2 - 2*Delta1*Delta1_prmp2*Delta2 + Delta1*(2*Delta2*etaKminus1_prmp2 + 2*Delta2_prmp2*etaKminus1 + Delta3_prmp2) + Delta1_prmp2*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmp2 - 2*Delta3*etaKminus1_prmp2 - 2*Delta3_prmp2*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmp2 - 2*Delta2_prmp2)/2 + a**2*etaKminus1*etaKminus1_prmp2*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmp2*(376 - 123*np.pi**2/8)/6
    Delta5_prmp2 = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmp2 - 3*Delta1*Delta2_prmp2 - 3*Delta1_prmp2*Delta2 + 3*Delta3_prmp2)/3 + (4*Delta1**3*Delta1_prmp2 - 4*Delta1**2*Delta2_prmp2 - 8*Delta1*Delta1_prmp2*Delta2 + 4*Delta1*Delta3_prmp2 + 4*Delta1_prmp2*Delta3 + 4*Delta2*Delta2_prmp2 - 4*Delta4_prmp2)/(2*etaKminus1) - etaKminus1_prmp2*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmp2 - 5*Delta1**3*Delta2_prmp2 - 15*Delta1**2*Delta1_prmp2*Delta2 + 5*Delta1**2*Delta3_prmp2 + 10*Delta1*Delta1_prmp2*Delta3 + 10*Delta1*Delta2*Delta2_prmp2 - 5*Delta1*Delta4_prmp2 + 5*Delta1_prmp2*Delta2**2 - 5*Delta1_prmp2*Delta4 - 5*Delta2*Delta3_prmp2 - 5*Delta2_prmp2*Delta3)/(5*etaKminus1**2) + etaKminus1_prmp2*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmp2*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmp2 = 128*etaKminus1*etaKminus1_prmp2/5
    logarg_prmp2 = u*(Delta1_prmp2 + u*(Delta2_prmp2 + u*(Delta3_prmp2 + u*(Delta4_prmp2 + u*(Delta5l_prmp2*np.log(u) + Delta5_prmp2)))))
    Deltaucalib_prmp2 = eta*(Delta0_prmp2 + logarg_prmp2*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmp2 = eta*logarg_prmp2*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmp2 + u*(2*Delta2_prmp2 + u*(3*Delta3_prmp2 + u*(4*Delta4_prmp2 + u*(5*Delta5l_prmp2*np.log(u) + 5*Delta5_prmp2)))))/(logarg + 1)
    Deltaubar_prmp2 = etaKminus1_prmp2*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmp2/etaKminus1**3
    Deltaubarprime_prmp2 = 2*etaKminus1_prmp2*u**2/etaKminus1**2
    Deltau_prmp2 = (Deltaubar*Deltaucalib_prmp2 + Deltaubar_prmp2*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmp2 = Deltaubar*Deltaucalibprime_prmp2 + Deltaubarprime*Deltaucalib_prmp2 + Deltaubarprime_prmp2*Deltaucalib + Deltaubar_prmp2*Deltaucalibprime
    Deltatprime_prmp2 = Deltauprime_prmp2*r**2 + 2*Deltau_prmp2*r
    Deltat_prmp2 = Deltau_prmp2*r**2
    Deltar_prmp2 = Deltat_prmp2*Dinv
    Deltarprime_prmp2 = Deltatprime_prmp2*Dinv + Deltat_prmp2*Dinvprime
    Lambt_prmp2 = (Deltat*a**2*sin2theta_prmp2 + Deltat_prmp2*a**2*sin2theta)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmp2 = (Deltar*Deltat_prmp2 + Deltar_prmp2*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat)))
    csiprime_prmp2 = (Deltar*Deltatprime_prmp2 + Deltarprime*Deltat_prmp2 + Deltarprime_prmp2*Deltat + Deltar_prmp2*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmp2/2 + Deltar_prmp2*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmp2/2 - Deltar_prmp2*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmp2 = csi_prmp2*(1 - np.abs(tortoise - 1))
    csi2_prmp2 = csi_prmp2*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmp2 = csi2*n2 + csi2_prmp2*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmp2 = n3*prT_prmp2*(-1 + 1/csi1) - csi1_prmp2*n3*prT/csi1**2
    phat2_prmp2 = n2*prT_prmp2*(-1 + 1/csi1) + 1 - csi1_prmp2*n2*prT/csi1**2
    phat1_prmp2 = n1*prT_prmp2*(-1 + 1/csi1) - csi1_prmp2*n1*prT/csi1**2
    pdotxir_prmp2 = r*(phat1*xi1_prmp2 + phat1_prmp2*xi1 + phat2*xi2_prmp2 + phat2_prmp2*xi2 + phat3*xi3_prmp2 + phat3_prmp2*xi3)
    pdotn_prmp2 = n1*phat1_prmp2 + n2*phat2_prmp2 + n3*phat3_prmp2
    pdotvr_prmp2 = r*(phat1*v1_prmp2 + phat1_prmp2*v1 + phat2*v2_prmp2 + phat2_prmp2*v2 + phat3*v3_prmp2 + phat3_prmp2*v3)
    pphi_prmp2 = pdotxir_prmp2
    Qcoeff2_prmp2 = -sin2theta_prmp2/(Sigma*sin2theta**2) - Sigma_prmp2/(Sigma**2*sin2theta)
    Qcoeff1_prmp2 = -Sigma*sin2theta_prmp2/(Lambt*sin2theta**2) + Sigma_prmp2/(Lambt*sin2theta) - Lambt_prmp2*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmp2 = 2*Deltar*pdotn*pdotn_prmp2/Sigma - Deltar*Sigma_prmp2*pdotn**2/Sigma**2 + Deltar_prmp2*pdotn**2/Sigma
    Q_prmp2 = DrSipn2_prmp2 + 2*Qcoeff1*pdotxir*pdotxir_prmp2 + Qcoeff1_prmp2*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmp2 + Qcoeff2_prmp2*pdotvr**2
    Qminus1_prmp2 = Q_prmp2
    Jtilde_prmp2 = Deltar_prmp2/(2*np.sqrt(Deltar))
    exp2mu_prmp2 = Sigma_prmp2
    expmu_prmp2 = exp2mu_prmp2/(2*np.sqrt(exp2mu))
    Brtilde_prmp2 = (np.sqrt(Deltar)*Deltatprime_prmp2 - 2*Deltat_prmp2 + Deltar_prmp2*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmp2/2 - Deltar_prmp2*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmp2 = Deltat_prmp2/(2*np.sqrt(Deltat))
    exp2nu_prmp2 = Deltat*Sigma_prmp2/Lambt - Deltat*Lambt_prmp2*Sigma/Lambt**2 + Deltat_prmp2*Sigma/Lambt
    expnu_prmp2 = exp2nu_prmp2/(2*np.sqrt(exp2nu))
    omega_prmp2 = -Lambt_prmp2*omegatilde/Lambt**2
    Lambtprime_prmp2 = -Deltatprime*a**2*sin2theta_prmp2 - Deltatprime_prmp2*a**2*sin2theta
    mucostheta_prmp2 = a**2*costheta_prmp2/Sigma - Sigma_prmp2*a**2*costheta/Sigma**2
    nucostheta_prmp2 = -Deltat_prmp2*a**2*costheta*w2/(Lambt*Sigma) + a**2*costheta_prmp2*w2*(-Deltat + w2)/(Lambt*Sigma) - Sigma_prmp2*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmp2*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmp2 = -2*Deltat*a**2*costheta_prmp2*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmp2*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmp2*a**2*costheta*omegatilde/Lambt**2
    mur_prmp2 = -Sigma_prmp2*r/Sigma**2 + Deltar_prmp2/(2*Deltar**(3/2))
    nur_prmp2 = -Sigma_prmp2*r/Sigma**2 + w2*(Deltatprime_prmp2*w2 - 4*Deltat_prmp2*r)/(2*Deltat*Lambt) - Lambt_prmp2*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmp2*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmp2 = (-Lambtprime_prmp2*omegatilde + Lambt_prmp2*omegatildeprime)/Lambt**2 + Lambt_prmp2*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmp2 = 442.443*chi**2*chi_prmp2*eta**2 - 1705.953*chi**2*chi_prmp2*eta + 198.5961*chi**2*chi_prmp2 - 686.626*chi*chi_prmp2*eta + 2495.29*chi_prmp2*eta**2
    sigmacoeffTerm3_prmp2 = dSO_prmp2*eta*u**3
    sigmacoeffTerm2_prmp2 = eta*(eta*r*(-6.125*DrSipn2_prmp2*u**2 + 1.41666666666667*Qminus1_prmp2*u**2 + r*(11.25*DrSipn2*DrSipn2_prmp2*u**2 - 1.625*DrSipn2*Qminus1_prmp2*u**2 - 1.625*DrSipn2_prmp2*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmp2*u**2 - 3.02777777777778*Qminus1_prmp2*u**2 + r*(0.25*DrSipn2*Qminus1_prmp2*u**2 + 0.25*DrSipn2_prmp2*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmp2*u**2)))
    sigmacoeffTerm1_prmp2 = eta*(-3*DrSipn2_prmp2 + Qminus1_prmp2/4)
    sigmacoeff_prmp2 = sigmacoeffTerm1_prmp2 + sigmacoeffTerm2_prmp2 + sigmacoeffTerm3_prmp2
    sigmastarcoeffTerm2_prmp2 = eta*(eta*r*(-324*DrSipn2_prmp2 + 120*Qminus1_prmp2 + r*(720*DrSipn2*DrSipn2_prmp2 + Qminus1*(-126*DrSipn2_prmp2 - 3*Qminus1_prmp2) + Qminus1_prmp2*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmp2 + Qminus1*r*(96*DrSipn2_prmp2 - 23*Qminus1_prmp2) + Qminus1_prmp2*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmp2))/(72*r**2)
    sigmastarcoeffTerm1_prmp2 = eta*(-5*DrSipn2_prmp2/2 + Qminus1_prmp2/3)
    sigmastarcoeff_prmp2 = sigmastarcoeffTerm1_prmp2 + sigmastarcoeffTerm2_prmp2
    Deltasigmastar3_prmp2 = sigma3*sigmacoeff_prmp2 + sigmastar3*sigmastarcoeff_prmp2
    Deltasigmastar2_prmp2 = sigma2*sigmacoeff_prmp2 + sigmastar2*sigmastarcoeff_prmp2
    Deltasigmastar1_prmp2 = sigma1*sigmacoeff_prmp2 + sigmastar1*sigmastarcoeff_prmp2
    Sstar3_prmp2 = Deltasigmastar3_prmp2
    Sstar2_prmp2 = Deltasigmastar2_prmp2
    Sstar1_prmp2 = Deltasigmastar1_prmp2
    S3_prmp2 = Sstar3_prmp2
    S2_prmp2 = Sstar2_prmp2
    S1_prmp2 = Sstar1_prmp2
    Sstardotn_prmp2 = Sstar1_prmp2*n1 + Sstar2_prmp2*n2 + Sstar3_prmp2*n3
    Sdote3_prmp2 = S1*e31_prmp2 + S1_prmp2*e31 + S2*e32_prmp2 + S2_prmp2*e32 + S3*e33_prmp2 + S3_prmp2*e33
    Sdotn_prmp2 = S1_prmp2*n1 + S2_prmp2*n2 + S3_prmp2*n3
    Sdotv_prmp2 = S1*v1_prmp2 + S1_prmp2*v1 + S2*v2_prmp2 + S2_prmp2*v2 + S3*v3_prmp2 + S3_prmp2*v3
    Sdotxi_prmp2 = S1*xi1_prmp2 + S1_prmp2*xi1 + S2*xi2_prmp2 + S2_prmp2*xi2 + S3*xi3_prmp2 + S3_prmp2*xi3
    HdsumTerm2_prmp2 = 6*Sstardotn*Sstardotn_prmp2
    HdsumTerm1_prmp2 = 2*Sstar1*Sstar1_prmp2 + 2*Sstar2*Sstar2_prmp2 + 2*Sstar3*Sstar3_prmp2
    Hdsum_prmp2 = HdsumTerm1_prmp2 - HdsumTerm2_prmp2
    Q4_prmp2 = eta*prT**3*prT_prmp2*u**2*(32 - 24*eta)
    gammappsum_prmp2 = 2*Deltar*pdotn*pdotn_prmp2/Sigma - Deltar*Sigma_prmp2*pdotn**2/Sigma**2 + Deltar_prmp2*pdotn**2/Sigma - pdotvr**2*sin2theta_prmp2/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmp2/(Sigma*sin2theta) - Sigma_prmp2*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmp2/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmp2/(Lambt*sin2theta) + Sigma_prmp2*pdotxir**2/(Lambt*sin2theta) - Lambt_prmp2*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmp2 = Q4_prmp2 + gammappsum_prmp2
    alpha_prmp2 = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmp2/(2*Lambt) - Deltat*Lambt_prmp2*Sigma/(2*Lambt**2) + Deltat_prmp2*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmp2 = omegatilde*pphi_prmp2/Lambt - Lambt_prmp2*omegatilde*pphi/Lambt**2
    HssTerm3_prmp2 = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmp2 - Q_prmp2/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmp2*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmp2*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmp2*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmp2 - Jtilde*Sdotv_prmp2*pdotn - Jtilde_prmp2*Sdotv*pdotn + Sdotn*pdotvr_prmp2 + Sdotn_prmp2*pdotvr) + pdotvr_prmp2*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmp2*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmp2 + Btilde*Jtilde*Sdotxi_prmp2*pdotn + Btilde*Jtilde_prmp2*Sdotxi*pdotn + Btilde_prmp2*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmp2 - Sdotn*expmu*expnu_prmp2*pdotxir - Sdotn*expmu_prmp2*expnu*pdotxir - Sdotn_prmp2*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmp2*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmp2*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmp2*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmp2 = omegacostheta*(-Q_prmp2 - Q_prmp2/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmp2/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmp2*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmp2*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmp2*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmp2*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmp2 = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmp2 - Jtilde*Sdotv_prmp2*pdotn - Jtilde_prmp2*Sdotv*pdotn + Sdotn*pdotvr_prmp2 + Sdotn_prmp2*pdotvr) + Jtilde*pdotn_prmp2*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmp2*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmp2 + Q_prmp2/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmp2*(np.sqrt(Q) + Q) + Sdotv_prmp2*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmp2*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmp2*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmp2 - Btilde*Sdotxi*expnu_prmp2*pdotvr - Btilde*Sdotxi_prmp2*expnu*pdotvr - Btilde_prmp2*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmp2 + Sdotv*exp2nu*expmu_prmp2*pdotxir + Sdotv*exp2nu_prmp2*expmu*pdotxir + Sdotv_prmp2*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmp2*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmp2*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmp2 = Jtilde*omegar*(-Q_prmp2 - Q_prmp2/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmp2/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmp2/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmp2*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmp2*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmp2*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmp2*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmp2*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmp2 = Sdote3*omega_prmp2 + Sdote3_prmp2*omega
    Hss_prmp2 = HssTerm1_prmp2 + HssTerm2*HssTerm2coeff_prmp2 + HssTerm2coeff*HssTerm2_prmp2 + HssTerm3*HssTerm3coeff_prmp2 + HssTerm3coeff*HssTerm3_prmp2
    HsoTerm2c_prmp2 = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmp2*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmp2*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmp2*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmp2*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmp2*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmp2*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmp2*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmp2 = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmp2 + Jtilde*Sdotv_prmp2*nur + Jtilde_prmp2*Sdotv*nur - Sdotn*nucostheta*xisq_prmp2 - Sdotn*nucostheta_prmp2*xisq - Sdotn_prmp2*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmp2*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmp2*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmp2*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmp2*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmp2*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmp2 = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmp2 + nur_prmp2*pdotvr + pdotn*xisq*(mucostheta_prmp2 - nucostheta_prmp2) + pdotn*xisq_prmp2*(mucostheta - nucostheta) + pdotn_prmp2*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmp2 - mucostheta*pdotn_prmp2*xisq - mucostheta_prmp2*pdotn*xisq + mur*pdotvr_prmp2*(np.sqrt(Q) + 1) + mur_prmp2*pdotvr*(np.sqrt(Q) + 1) + Q_prmp2*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmp2*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmp2*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmp2*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmp2*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmp2 = HsoTerm2a_prmp2 + HsoTerm2b_prmp2 - HsoTerm2c_prmp2
    HsoTerm2coeff_prmp2 = expnu*(-Q_prmp2 - Q_prmp2/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmp2/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmp2/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmp2*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmp2*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmp2 = Sdote3*exp2nu*pdotxir*(-Btilde_prmp2 + expmu*expnu_prmp2 + expmu_prmp2*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmp2*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmp2*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmp2*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmp2*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmp2*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmp2*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmp2*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmp2 = HsoTerm1_prmp2 + HsoTerm2*HsoTerm2coeff_prmp2 + HsoTerm2coeff*HsoTerm2_prmp2
    Hd_prmp2 = Hdcoeff*Hdsum_prmp2
    Hns_prmp2 = np.sqrt(Hnsradicand)*alpha_prmp2 + betapsum_prmp2 + Hnsradicand_prmp2*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmp2 = Hso_prmp2 + Hss_prmp2
    dSS_prmp2 = 1585.533*chi**2*chi_prmp2*eta**2 - 123.0009*chi**2*chi_prmp2*eta + 2323.56*chi*chi_prmp2*eta**3 - 652.65*chi*chi_prmp2*eta**2 + 37.1964*chi_prmp2*eta
    Heff_prmp2 = -Hd_prmp2 + Hns_prmp2 + Hs_prmp2 + dSS_prmp2*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmp2 = Heff_prmp2*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmp2

def v4P_compute_ham_p3_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    L2_prmp3 = -x
    L1_prmp3 = y
    Lnorm_prmp3 = (L1*L1_prmp3 + L2*L2_prmp3)/np.sqrt(L1**2 + L2**2 + L3**2)
    Lhat3_prmp3 = -L3*Lnorm_prmp3/Lnorm**2
    Lhat2_prmp3 = -L2*Lnorm_prmp3/Lnorm**2 + L2_prmp3/Lnorm
    Lhat1_prmp3 = -L1*Lnorm_prmp3/Lnorm**2 + L1_prmp3/Lnorm
    S2dotLhat_prmp3 = Lhat1_prmp3*S2x + Lhat2_prmp3*S2y + Lhat3_prmp3*S2z
    S1dotLhat_prmp3 = Lhat1_prmp3*S1x + Lhat2_prmp3*S1y + Lhat3_prmp3*S1z
    S1perp3_prmp3 = -Lhat3*S1dotLhat_prmp3 - Lhat3_prmp3*S1dotLhat
    S1perp2_prmp3 = -Lhat2*S1dotLhat_prmp3 - Lhat2_prmp3*S1dotLhat
    S1perp1_prmp3 = -Lhat1*S1dotLhat_prmp3 - Lhat1_prmp3*S1dotLhat
    S2perp3_prmp3 = -Lhat3*S2dotLhat_prmp3 - Lhat3_prmp3*S2dotLhat
    S2perp2_prmp3 = -Lhat2*S2dotLhat_prmp3 - Lhat2_prmp3*S2dotLhat
    S2perp1_prmp3 = -Lhat1*S2dotLhat_prmp3 - Lhat1_prmp3*S2dotLhat
    Sperp3_prmp3 = S1perp3_prmp3 + S2perp3_prmp3
    Sperp2_prmp3 = S1perp2_prmp3 + S2perp2_prmp3
    Sperp1_prmp3 = S1perp1_prmp3 + S2perp1_prmp3
    lambdavec3_prmp3 = Lhat1_prmp3*n2 - Lhat2_prmp3*n3
    lambdavec2_prmp3 = -Lhat1_prmp3*n3 + Lhat3_prmp3*n1
    lambdavec1_prmp3 = Lhat2_prmp3*n3 - Lhat3_prmp3*n2
    lambdavecnorm_prmp3 = (lambdavec1*lambdavec1_prmp3 + lambdavec2*lambdavec2_prmp3 + lambdavec3*lambdavec3_prmp3)/np.sqrt(lambdavec1**2 + lambdavec2**2 + lambdavec3**2)
    lambdahat3_prmp3 = -lambdavec3*lambdavecnorm_prmp3/lambdavecnorm**2 + lambdavec3_prmp3/lambdavecnorm
    lambdahat2_prmp3 = -lambdavec2*lambdavecnorm_prmp3/lambdavecnorm**2 + lambdavec2_prmp3/lambdavecnorm
    lambdahat1_prmp3 = -lambdavec1*lambdavecnorm_prmp3/lambdavecnorm**2 + lambdavec1_prmp3/lambdavecnorm
    lambdahat_dot_e3prov_prmp3 = e3prov1*lambdahat1_prmp3 + e3prov2*lambdahat2_prmp3 + e3prov3*lambdahat3_prmp3
    lambdahat_cross_e3prov3_prmp3 = -e3prov1*lambdahat2_prmp3 + e3prov2*lambdahat1_prmp3
    lambdahat_cross_e3prov2_prmp3 = e3prov1*lambdahat3_prmp3 - e3prov3*lambdahat1_prmp3
    lambdahat_cross_e3prov1_prmp3 = -e3prov2*lambdahat3_prmp3 + e3prov3*lambdahat2_prmp3
    e31_prmp3 = e3_leq_bound*(lambdahat1*lambdahat_dot_e3prov_prmp3*(1 - cos_0_1_deg) + lambdahat1_prmp3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmp3*sin_0_1_deg)
    e32_prmp3 = e3_leq_bound*(lambdahat2*lambdahat_dot_e3prov_prmp3*(1 - cos_0_1_deg) + lambdahat2_prmp3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmp3*sin_0_1_deg)
    e33_prmp3 = e3_leq_bound*(lambdahat3*lambdahat_dot_e3prov_prmp3*(1 - cos_0_1_deg) + lambdahat3_prmp3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmp3*sin_0_1_deg)
    xi3_prmp3 = e31_prmp3*n2 - e32_prmp3*n1
    xi2_prmp3 = -e31_prmp3*n3 + e33_prmp3*n1
    xi1_prmp3 = e32_prmp3*n3 - e33_prmp3*n2
    v3_prmp3 = n1*xi2_prmp3 - n2*xi1_prmp3
    v2_prmp3 = -n1*xi3_prmp3 + n3*xi1_prmp3
    v1_prmp3 = n2*xi3_prmp3 - n3*xi2_prmp3
    costheta_prmp3 = e31_prmp3*n1 + e32_prmp3*n2 + e33_prmp3*n3
    sin2theta_prmp3 = -2*costheta*costheta_prmp3
    xisq_prmp3 = sin2theta_prmp3
    Sigma_prmp3 = 2*a**2*costheta*costheta_prmp3
    chi_prmp3 = (Lhat1_prmp3*Skerr1 + Lhat2_prmp3*Skerr2 + Lhat3_prmp3*Skerr3)/(1 - 2*eta) + (Skerr1*Sperp1_prmp3/2 + Skerr2*Sperp2_prmp3/2 + Skerr3*Sperp3_prmp3/2)/(Skerrmag*(1.0 - 2.0*eta))
    K_prmp3 = -177.4974*chi**2*chi_prmp3*eta**3 - 1.280874*chi**2*chi_prmp3*eta + 4.30977*chi**2*chi_prmp3 + 62.3492*chi*chi_prmp3*eta**3 + 12.32932*chi*chi_prmp3*eta**2 - 2.76172*chi*chi_prmp3 - 27.5201*chi_prmp3*eta**3 + 17.3736*chi_prmp3*eta**2 + 2.26831*chi_prmp3*eta - 1.62045*chi_prmp3
    etaKminus1_prmp3 = K_prmp3*eta
    Delta0_prmp3 = K*K_prmp3*eta + K_prmp3*(K*eta - 2)
    Delta1_prmp3 = etaKminus1*(-2*Delta0_prmp3 - 2*K_prmp3) + etaKminus1_prmp3*(-2*Delta0 - 2*K)
    Delta2_prmp3 = -2*Delta0*a**2*etaKminus1*etaKminus1_prmp3 - Delta0_prmp3*a**2*etaKminus1**2 + Delta1*(Delta1_prmp3/2 - 2*etaKminus1_prmp3) + Delta1_prmp3*(Delta1/2 - 2*etaKminus1)
    Delta3_prmp3 = -Delta1**2*Delta1_prmp3 + Delta1**2*etaKminus1_prmp3 + 2*Delta1*Delta1_prmp3*etaKminus1 + Delta1*Delta2_prmp3 - 2*Delta1*a**2*etaKminus1*etaKminus1_prmp3 + Delta1_prmp3*Delta2 - Delta1_prmp3*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmp3 + 2*etaKminus1_prmp3) + etaKminus1_prmp3*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmp3 = Delta1**3*Delta1_prmp3 - 2*Delta1**3*etaKminus1_prmp3/3 - 2*Delta1**2*Delta1_prmp3*etaKminus1 - Delta1**2*Delta2_prmp3 - 2*Delta1*Delta1_prmp3*Delta2 + Delta1*(2*Delta2*etaKminus1_prmp3 + 2*Delta2_prmp3*etaKminus1 + Delta3_prmp3) + Delta1_prmp3*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmp3 - 2*Delta3*etaKminus1_prmp3 - 2*Delta3_prmp3*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmp3 - 2*Delta2_prmp3)/2 + a**2*etaKminus1*etaKminus1_prmp3*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmp3*(376 - 123*np.pi**2/8)/6
    Delta5_prmp3 = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmp3 - 3*Delta1*Delta2_prmp3 - 3*Delta1_prmp3*Delta2 + 3*Delta3_prmp3)/3 + (4*Delta1**3*Delta1_prmp3 - 4*Delta1**2*Delta2_prmp3 - 8*Delta1*Delta1_prmp3*Delta2 + 4*Delta1*Delta3_prmp3 + 4*Delta1_prmp3*Delta3 + 4*Delta2*Delta2_prmp3 - 4*Delta4_prmp3)/(2*etaKminus1) - etaKminus1_prmp3*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmp3 - 5*Delta1**3*Delta2_prmp3 - 15*Delta1**2*Delta1_prmp3*Delta2 + 5*Delta1**2*Delta3_prmp3 + 10*Delta1*Delta1_prmp3*Delta3 + 10*Delta1*Delta2*Delta2_prmp3 - 5*Delta1*Delta4_prmp3 + 5*Delta1_prmp3*Delta2**2 - 5*Delta1_prmp3*Delta4 - 5*Delta2*Delta3_prmp3 - 5*Delta2_prmp3*Delta3)/(5*etaKminus1**2) + etaKminus1_prmp3*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmp3*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmp3 = 128*etaKminus1*etaKminus1_prmp3/5
    logarg_prmp3 = u*(Delta1_prmp3 + u*(Delta2_prmp3 + u*(Delta3_prmp3 + u*(Delta4_prmp3 + u*(Delta5l_prmp3*np.log(u) + Delta5_prmp3)))))
    Deltaucalib_prmp3 = eta*(Delta0_prmp3 + logarg_prmp3*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmp3 = eta*logarg_prmp3*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmp3 + u*(2*Delta2_prmp3 + u*(3*Delta3_prmp3 + u*(4*Delta4_prmp3 + u*(5*Delta5l_prmp3*np.log(u) + 5*Delta5_prmp3)))))/(logarg + 1)
    Deltaubar_prmp3 = etaKminus1_prmp3*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmp3/etaKminus1**3
    Deltaubarprime_prmp3 = 2*etaKminus1_prmp3*u**2/etaKminus1**2
    Deltau_prmp3 = (Deltaubar*Deltaucalib_prmp3 + Deltaubar_prmp3*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmp3 = Deltaubar*Deltaucalibprime_prmp3 + Deltaubarprime*Deltaucalib_prmp3 + Deltaubarprime_prmp3*Deltaucalib + Deltaubar_prmp3*Deltaucalibprime
    Deltatprime_prmp3 = Deltauprime_prmp3*r**2 + 2*Deltau_prmp3*r
    Deltat_prmp3 = Deltau_prmp3*r**2
    Deltar_prmp3 = Deltat_prmp3*Dinv
    Deltarprime_prmp3 = Deltatprime_prmp3*Dinv + Deltat_prmp3*Dinvprime
    Lambt_prmp3 = (Deltat*a**2*sin2theta_prmp3 + Deltat_prmp3*a**2*sin2theta)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmp3 = (Deltar*Deltat_prmp3 + Deltar_prmp3*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat)))
    csiprime_prmp3 = (Deltar*Deltatprime_prmp3 + Deltarprime*Deltat_prmp3 + Deltarprime_prmp3*Deltat + Deltar_prmp3*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmp3/2 + Deltar_prmp3*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmp3/2 - Deltar_prmp3*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmp3 = csi_prmp3*(1 - np.abs(tortoise - 1))
    csi2_prmp3 = csi_prmp3*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmp3 = csi2*n3 + csi2_prmp3*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmp3 = n3*prT_prmp3*(-1 + 1/csi1) + 1 - csi1_prmp3*n3*prT/csi1**2
    phat2_prmp3 = n2*prT_prmp3*(-1 + 1/csi1) - csi1_prmp3*n2*prT/csi1**2
    phat1_prmp3 = n1*prT_prmp3*(-1 + 1/csi1) - csi1_prmp3*n1*prT/csi1**2
    pdotxir_prmp3 = r*(phat1*xi1_prmp3 + phat1_prmp3*xi1 + phat2*xi2_prmp3 + phat2_prmp3*xi2 + phat3*xi3_prmp3 + phat3_prmp3*xi3)
    pdotn_prmp3 = n1*phat1_prmp3 + n2*phat2_prmp3 + n3*phat3_prmp3
    pdotvr_prmp3 = r*(phat1*v1_prmp3 + phat1_prmp3*v1 + phat2*v2_prmp3 + phat2_prmp3*v2 + phat3*v3_prmp3 + phat3_prmp3*v3)
    pphi_prmp3 = pdotxir_prmp3
    Qcoeff2_prmp3 = -sin2theta_prmp3/(Sigma*sin2theta**2) - Sigma_prmp3/(Sigma**2*sin2theta)
    Qcoeff1_prmp3 = -Sigma*sin2theta_prmp3/(Lambt*sin2theta**2) + Sigma_prmp3/(Lambt*sin2theta) - Lambt_prmp3*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmp3 = 2*Deltar*pdotn*pdotn_prmp3/Sigma - Deltar*Sigma_prmp3*pdotn**2/Sigma**2 + Deltar_prmp3*pdotn**2/Sigma
    Q_prmp3 = DrSipn2_prmp3 + 2*Qcoeff1*pdotxir*pdotxir_prmp3 + Qcoeff1_prmp3*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmp3 + Qcoeff2_prmp3*pdotvr**2
    Qminus1_prmp3 = Q_prmp3
    Jtilde_prmp3 = Deltar_prmp3/(2*np.sqrt(Deltar))
    exp2mu_prmp3 = Sigma_prmp3
    expmu_prmp3 = exp2mu_prmp3/(2*np.sqrt(exp2mu))
    Brtilde_prmp3 = (np.sqrt(Deltar)*Deltatprime_prmp3 - 2*Deltat_prmp3 + Deltar_prmp3*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmp3/2 - Deltar_prmp3*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmp3 = Deltat_prmp3/(2*np.sqrt(Deltat))
    exp2nu_prmp3 = Deltat*Sigma_prmp3/Lambt - Deltat*Lambt_prmp3*Sigma/Lambt**2 + Deltat_prmp3*Sigma/Lambt
    expnu_prmp3 = exp2nu_prmp3/(2*np.sqrt(exp2nu))
    omega_prmp3 = -Lambt_prmp3*omegatilde/Lambt**2
    Lambtprime_prmp3 = -Deltatprime*a**2*sin2theta_prmp3 - Deltatprime_prmp3*a**2*sin2theta
    mucostheta_prmp3 = a**2*costheta_prmp3/Sigma - Sigma_prmp3*a**2*costheta/Sigma**2
    nucostheta_prmp3 = -Deltat_prmp3*a**2*costheta*w2/(Lambt*Sigma) + a**2*costheta_prmp3*w2*(-Deltat + w2)/(Lambt*Sigma) - Sigma_prmp3*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmp3*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmp3 = -2*Deltat*a**2*costheta_prmp3*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmp3*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmp3*a**2*costheta*omegatilde/Lambt**2
    mur_prmp3 = -Sigma_prmp3*r/Sigma**2 + Deltar_prmp3/(2*Deltar**(3/2))
    nur_prmp3 = -Sigma_prmp3*r/Sigma**2 + w2*(Deltatprime_prmp3*w2 - 4*Deltat_prmp3*r)/(2*Deltat*Lambt) - Lambt_prmp3*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmp3*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmp3 = (-Lambtprime_prmp3*omegatilde + Lambt_prmp3*omegatildeprime)/Lambt**2 + Lambt_prmp3*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmp3 = 442.443*chi**2*chi_prmp3*eta**2 - 1705.953*chi**2*chi_prmp3*eta + 198.5961*chi**2*chi_prmp3 - 686.626*chi*chi_prmp3*eta + 2495.29*chi_prmp3*eta**2
    sigmacoeffTerm3_prmp3 = dSO_prmp3*eta*u**3
    sigmacoeffTerm2_prmp3 = eta*(eta*r*(-6.125*DrSipn2_prmp3*u**2 + 1.41666666666667*Qminus1_prmp3*u**2 + r*(11.25*DrSipn2*DrSipn2_prmp3*u**2 - 1.625*DrSipn2*Qminus1_prmp3*u**2 - 1.625*DrSipn2_prmp3*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmp3*u**2 - 3.02777777777778*Qminus1_prmp3*u**2 + r*(0.25*DrSipn2*Qminus1_prmp3*u**2 + 0.25*DrSipn2_prmp3*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmp3*u**2)))
    sigmacoeffTerm1_prmp3 = eta*(-3*DrSipn2_prmp3 + Qminus1_prmp3/4)
    sigmacoeff_prmp3 = sigmacoeffTerm1_prmp3 + sigmacoeffTerm2_prmp3 + sigmacoeffTerm3_prmp3
    sigmastarcoeffTerm2_prmp3 = eta*(eta*r*(-324*DrSipn2_prmp3 + 120*Qminus1_prmp3 + r*(720*DrSipn2*DrSipn2_prmp3 + Qminus1*(-126*DrSipn2_prmp3 - 3*Qminus1_prmp3) + Qminus1_prmp3*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmp3 + Qminus1*r*(96*DrSipn2_prmp3 - 23*Qminus1_prmp3) + Qminus1_prmp3*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmp3))/(72*r**2)
    sigmastarcoeffTerm1_prmp3 = eta*(-5*DrSipn2_prmp3/2 + Qminus1_prmp3/3)
    sigmastarcoeff_prmp3 = sigmastarcoeffTerm1_prmp3 + sigmastarcoeffTerm2_prmp3
    Deltasigmastar3_prmp3 = sigma3*sigmacoeff_prmp3 + sigmastar3*sigmastarcoeff_prmp3
    Deltasigmastar2_prmp3 = sigma2*sigmacoeff_prmp3 + sigmastar2*sigmastarcoeff_prmp3
    Deltasigmastar1_prmp3 = sigma1*sigmacoeff_prmp3 + sigmastar1*sigmastarcoeff_prmp3
    Sstar3_prmp3 = Deltasigmastar3_prmp3
    Sstar2_prmp3 = Deltasigmastar2_prmp3
    Sstar1_prmp3 = Deltasigmastar1_prmp3
    S3_prmp3 = Sstar3_prmp3
    S2_prmp3 = Sstar2_prmp3
    S1_prmp3 = Sstar1_prmp3
    Sstardotn_prmp3 = Sstar1_prmp3*n1 + Sstar2_prmp3*n2 + Sstar3_prmp3*n3
    Sdote3_prmp3 = S1*e31_prmp3 + S1_prmp3*e31 + S2*e32_prmp3 + S2_prmp3*e32 + S3*e33_prmp3 + S3_prmp3*e33
    Sdotn_prmp3 = S1_prmp3*n1 + S2_prmp3*n2 + S3_prmp3*n3
    Sdotv_prmp3 = S1*v1_prmp3 + S1_prmp3*v1 + S2*v2_prmp3 + S2_prmp3*v2 + S3*v3_prmp3 + S3_prmp3*v3
    Sdotxi_prmp3 = S1*xi1_prmp3 + S1_prmp3*xi1 + S2*xi2_prmp3 + S2_prmp3*xi2 + S3*xi3_prmp3 + S3_prmp3*xi3
    HdsumTerm2_prmp3 = 6*Sstardotn*Sstardotn_prmp3
    HdsumTerm1_prmp3 = 2*Sstar1*Sstar1_prmp3 + 2*Sstar2*Sstar2_prmp3 + 2*Sstar3*Sstar3_prmp3
    Hdsum_prmp3 = HdsumTerm1_prmp3 - HdsumTerm2_prmp3
    Q4_prmp3 = eta*prT**3*prT_prmp3*u**2*(32 - 24*eta)
    gammappsum_prmp3 = 2*Deltar*pdotn*pdotn_prmp3/Sigma - Deltar*Sigma_prmp3*pdotn**2/Sigma**2 + Deltar_prmp3*pdotn**2/Sigma - pdotvr**2*sin2theta_prmp3/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmp3/(Sigma*sin2theta) - Sigma_prmp3*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmp3/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmp3/(Lambt*sin2theta) + Sigma_prmp3*pdotxir**2/(Lambt*sin2theta) - Lambt_prmp3*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmp3 = Q4_prmp3 + gammappsum_prmp3
    alpha_prmp3 = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmp3/(2*Lambt) - Deltat*Lambt_prmp3*Sigma/(2*Lambt**2) + Deltat_prmp3*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmp3 = omegatilde*pphi_prmp3/Lambt - Lambt_prmp3*omegatilde*pphi/Lambt**2
    HssTerm3_prmp3 = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmp3 - Q_prmp3/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmp3*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmp3*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmp3*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmp3 - Jtilde*Sdotv_prmp3*pdotn - Jtilde_prmp3*Sdotv*pdotn + Sdotn*pdotvr_prmp3 + Sdotn_prmp3*pdotvr) + pdotvr_prmp3*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmp3*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmp3 + Btilde*Jtilde*Sdotxi_prmp3*pdotn + Btilde*Jtilde_prmp3*Sdotxi*pdotn + Btilde_prmp3*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmp3 - Sdotn*expmu*expnu_prmp3*pdotxir - Sdotn*expmu_prmp3*expnu*pdotxir - Sdotn_prmp3*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmp3*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmp3*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmp3*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmp3 = omegacostheta*(-Q_prmp3 - Q_prmp3/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmp3/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmp3*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmp3*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmp3*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmp3*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmp3 = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmp3 - Jtilde*Sdotv_prmp3*pdotn - Jtilde_prmp3*Sdotv*pdotn + Sdotn*pdotvr_prmp3 + Sdotn_prmp3*pdotvr) + Jtilde*pdotn_prmp3*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmp3*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmp3 + Q_prmp3/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmp3*(np.sqrt(Q) + Q) + Sdotv_prmp3*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmp3*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmp3*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmp3 - Btilde*Sdotxi*expnu_prmp3*pdotvr - Btilde*Sdotxi_prmp3*expnu*pdotvr - Btilde_prmp3*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmp3 + Sdotv*exp2nu*expmu_prmp3*pdotxir + Sdotv*exp2nu_prmp3*expmu*pdotxir + Sdotv_prmp3*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmp3*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmp3*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmp3 = Jtilde*omegar*(-Q_prmp3 - Q_prmp3/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmp3/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmp3/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmp3*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmp3*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmp3*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmp3*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmp3*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmp3 = Sdote3*omega_prmp3 + Sdote3_prmp3*omega
    Hss_prmp3 = HssTerm1_prmp3 + HssTerm2*HssTerm2coeff_prmp3 + HssTerm2coeff*HssTerm2_prmp3 + HssTerm3*HssTerm3coeff_prmp3 + HssTerm3coeff*HssTerm3_prmp3
    HsoTerm2c_prmp3 = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmp3*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmp3*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmp3*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmp3*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmp3*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmp3*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmp3*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmp3 = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmp3 + Jtilde*Sdotv_prmp3*nur + Jtilde_prmp3*Sdotv*nur - Sdotn*nucostheta*xisq_prmp3 - Sdotn*nucostheta_prmp3*xisq - Sdotn_prmp3*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmp3*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmp3*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmp3*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmp3*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmp3*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmp3 = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmp3 + nur_prmp3*pdotvr + pdotn*xisq*(mucostheta_prmp3 - nucostheta_prmp3) + pdotn*xisq_prmp3*(mucostheta - nucostheta) + pdotn_prmp3*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmp3 - mucostheta*pdotn_prmp3*xisq - mucostheta_prmp3*pdotn*xisq + mur*pdotvr_prmp3*(np.sqrt(Q) + 1) + mur_prmp3*pdotvr*(np.sqrt(Q) + 1) + Q_prmp3*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmp3*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmp3*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmp3*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmp3*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmp3 = HsoTerm2a_prmp3 + HsoTerm2b_prmp3 - HsoTerm2c_prmp3
    HsoTerm2coeff_prmp3 = expnu*(-Q_prmp3 - Q_prmp3/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmp3/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmp3/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmp3*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmp3*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmp3 = Sdote3*exp2nu*pdotxir*(-Btilde_prmp3 + expmu*expnu_prmp3 + expmu_prmp3*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmp3*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmp3*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmp3*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmp3*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmp3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmp3*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmp3*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmp3 = HsoTerm1_prmp3 + HsoTerm2*HsoTerm2coeff_prmp3 + HsoTerm2coeff*HsoTerm2_prmp3
    Hd_prmp3 = Hdcoeff*Hdsum_prmp3
    Hns_prmp3 = np.sqrt(Hnsradicand)*alpha_prmp3 + betapsum_prmp3 + Hnsradicand_prmp3*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmp3 = Hso_prmp3 + Hss_prmp3
    dSS_prmp3 = 1585.533*chi**2*chi_prmp3*eta**2 - 123.0009*chi**2*chi_prmp3*eta + 2323.56*chi*chi_prmp3*eta**3 - 652.65*chi*chi_prmp3*eta**2 + 37.1964*chi_prmp3*eta
    Heff_prmp3 = -Hd_prmp3 + Hns_prmp3 + Hs_prmp3 + dSS_prmp3*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmp3 = Heff_prmp3*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmp3

def v4P_compute_ham_S1x_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    sigmastar1_prmS1x = m2/(M**2*m1)
    sigma1_prmS1x = M**(-2)
    Skerr1_prmS1x = sigma1_prmS1x
    Skerrmag_prmS1x = Skerr1*Skerr1_prmS1x/np.sqrt(Skerr1**2 + Skerr2**2 + Skerr3**2)
    Skerrhat3_prmS1x = -Skerr3*Skerrmag_prmS1x/Skerrmag**2
    Skerrhat2_prmS1x = -Skerr2*Skerrmag_prmS1x/Skerrmag**2
    Skerrhat1_prmS1x = -Skerr1*Skerrmag_prmS1x/Skerrmag**2 + Skerr1_prmS1x/Skerrmag
    a_prmS1x = Skerrmag_prmS1x
    S1dotLhat_prmS1x = Lhat1
    S1perp3_prmS1x = -Lhat3*S1dotLhat_prmS1x
    S1perp2_prmS1x = -Lhat2*S1dotLhat_prmS1x
    S1perp1_prmS1x = -Lhat1*S1dotLhat_prmS1x + 1
    Sperp3_prmS1x = S1perp3_prmS1x
    Sperp2_prmS1x = S1perp2_prmS1x
    Sperp1_prmS1x = S1perp1_prmS1x
    condition_e3prov_lhs_prmS1x = a_prmS1x
    e3prov_gt_bound_prmS1x = -condition_e3prov_lhs_prmS1x*(condition_e3prov_lhs/2 - condition_e3prov_rhs/2 + np.abs(condition_e3prov_lhs - condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS1x*np.sign(condition_e3prov_lhs - condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS1x/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov_leq_bound_prmS1x = -condition_e3prov_lhs_prmS1x*(-TINYDOUBLE/2 + condition_e3prov_lhs/2 - condition_e3prov_rhs/2 - np.abs(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS1x*np.sign(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS1x/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov1_prmS1x = Skerrhat1*e3prov_gt_bound_prmS1x + Skerrhat1_prmS1x*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1x
    e3prov2_prmS1x = Skerrhat2*e3prov_gt_bound_prmS1x + Skerrhat2_prmS1x*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1x
    e3prov3_prmS1x = Skerrhat3*e3prov_gt_bound_prmS1x + Skerrhat3_prmS1x*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1x
    lambdahat_dot_e3prov_prmS1x = e3prov1_prmS1x*lambdahat1 + e3prov2_prmS1x*lambdahat2 + e3prov3_prmS1x*lambdahat3
    lambdahat_cross_e3prov3_prmS1x = -e3prov1_prmS1x*lambdahat2 + e3prov2_prmS1x*lambdahat1
    lambdahat_cross_e3prov2_prmS1x = e3prov1_prmS1x*lambdahat3 - e3prov3_prmS1x*lambdahat1
    lambdahat_cross_e3prov1_prmS1x = -e3prov2_prmS1x*lambdahat3 + e3prov3_prmS1x*lambdahat2
    e3prov_dot_n_prmS1x = e3prov1_prmS1x*n1 + e3prov2_prmS1x*n2 + e3prov3_prmS1x*n3
    condition_e3_lhs_prmS1x = -e3prov_dot_n_prmS1x*np.sign(e3prov_dot_n)
    e3_gt_bound_prmS1x = -condition_e3_lhs_prmS1x*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS1x*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmS1x/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmS1x = -condition_e3_lhs_prmS1x*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS1x*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmS1x/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmS1x = e3_gt_bound*e3prov1_prmS1x + e3_gt_bound_prmS1x*e3prov1 + e3_leq_bound*(cos_0_1_deg*e3prov1_prmS1x + lambdahat1*lambdahat_dot_e3prov_prmS1x*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmS1x*sin_0_1_deg) + e3_leq_bound_prmS1x*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmS1x = e3_gt_bound*e3prov2_prmS1x + e3_gt_bound_prmS1x*e3prov2 + e3_leq_bound*(cos_0_1_deg*e3prov2_prmS1x + lambdahat2*lambdahat_dot_e3prov_prmS1x*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmS1x*sin_0_1_deg) + e3_leq_bound_prmS1x*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmS1x = e3_gt_bound*e3prov3_prmS1x + e3_gt_bound_prmS1x*e3prov3 + e3_leq_bound*(cos_0_1_deg*e3prov3_prmS1x + lambdahat3*lambdahat_dot_e3prov_prmS1x*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmS1x*sin_0_1_deg) + e3_leq_bound_prmS1x*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmS1x = e31_prmS1x*n2 - e32_prmS1x*n1
    xi2_prmS1x = -e31_prmS1x*n3 + e33_prmS1x*n1
    xi1_prmS1x = e32_prmS1x*n3 - e33_prmS1x*n2
    v3_prmS1x = n1*xi2_prmS1x - n2*xi1_prmS1x
    v2_prmS1x = -n1*xi3_prmS1x + n3*xi1_prmS1x
    v1_prmS1x = n2*xi3_prmS1x - n3*xi2_prmS1x
    costheta_prmS1x = e31_prmS1x*n1 + e32_prmS1x*n2 + e33_prmS1x*n3
    sin2theta_prmS1x = -2*costheta*costheta_prmS1x
    xisq_prmS1x = sin2theta_prmS1x
    w2_prmS1x = 2*a*a_prmS1x
    Sigma_prmS1x = 2*a**2*costheta*costheta_prmS1x + 2*a*a_prmS1x*costheta**2
    omegatilde_prmS1x = 2*a_prmS1x*r
    chi_prmS1x = Lhat1*Skerr1_prmS1x/(1 - 2*eta) + (Skerr1*Sperp1_prmS1x/2 + Skerr1_prmS1x*Sperp1/2 + Skerr2*Sperp2_prmS1x/2 + Skerr3*Sperp3_prmS1x/2)/(Skerrmag*(1.0 - 2.0*eta)) + Skerrmag_prmS1x*(-Skerr1*Sperp1/2 - Skerr2*Sperp2/2 - Skerr3*Sperp3/2)/(Skerrmag**2*(1.0 - 2.0*eta))
    K_prmS1x = -177.4974*chi**2*chi_prmS1x*eta**3 - 1.280874*chi**2*chi_prmS1x*eta + 4.30977*chi**2*chi_prmS1x + 62.3492*chi*chi_prmS1x*eta**3 + 12.32932*chi*chi_prmS1x*eta**2 - 2.76172*chi*chi_prmS1x - 27.5201*chi_prmS1x*eta**3 + 17.3736*chi_prmS1x*eta**2 + 2.26831*chi_prmS1x*eta - 1.62045*chi_prmS1x
    etaKminus1_prmS1x = K_prmS1x*eta
    Delta0_prmS1x = K*K_prmS1x*eta + K_prmS1x*(K*eta - 2)
    Delta1_prmS1x = etaKminus1*(-2*Delta0_prmS1x - 2*K_prmS1x) + etaKminus1_prmS1x*(-2*Delta0 - 2*K)
    Delta2_prmS1x = -2*Delta0*a**2*etaKminus1*etaKminus1_prmS1x - 2*Delta0*a*a_prmS1x*etaKminus1**2 - Delta0_prmS1x*a**2*etaKminus1**2 + Delta1*(Delta1_prmS1x/2 - 2*etaKminus1_prmS1x) + Delta1_prmS1x*(Delta1/2 - 2*etaKminus1)
    Delta3_prmS1x = -Delta1**2*Delta1_prmS1x + Delta1**2*etaKminus1_prmS1x + 2*Delta1*Delta1_prmS1x*etaKminus1 + Delta1*Delta2_prmS1x - 2*Delta1*a**2*etaKminus1*etaKminus1_prmS1x - 2*Delta1*a*a_prmS1x*etaKminus1**2 + Delta1_prmS1x*Delta2 - Delta1_prmS1x*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmS1x + 2*etaKminus1_prmS1x) + etaKminus1_prmS1x*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmS1x = Delta1**3*Delta1_prmS1x - 2*Delta1**3*etaKminus1_prmS1x/3 - 2*Delta1**2*Delta1_prmS1x*etaKminus1 - Delta1**2*Delta2_prmS1x - 2*Delta1*Delta1_prmS1x*Delta2 + Delta1*(2*Delta2*etaKminus1_prmS1x + 2*Delta2_prmS1x*etaKminus1 + Delta3_prmS1x) + Delta1_prmS1x*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmS1x - 2*Delta3*etaKminus1_prmS1x - 2*Delta3_prmS1x*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmS1x - 2*Delta2_prmS1x)/2 + a**2*etaKminus1*etaKminus1_prmS1x*(Delta1**2 - 2*Delta2) + a*a_prmS1x*etaKminus1**2*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmS1x*(376 - 123*np.pi**2/8)/6
    Delta5_prmS1x = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmS1x - 3*Delta1*Delta2_prmS1x - 3*Delta1_prmS1x*Delta2 + 3*Delta3_prmS1x)/3 + a*a_prmS1x*(-2*Delta1**3 + 6*Delta1*Delta2 - 6*Delta3)/3 + (4*Delta1**3*Delta1_prmS1x - 4*Delta1**2*Delta2_prmS1x - 8*Delta1*Delta1_prmS1x*Delta2 + 4*Delta1*Delta3_prmS1x + 4*Delta1_prmS1x*Delta3 + 4*Delta2*Delta2_prmS1x - 4*Delta4_prmS1x)/(2*etaKminus1) - etaKminus1_prmS1x*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmS1x - 5*Delta1**3*Delta2_prmS1x - 15*Delta1**2*Delta1_prmS1x*Delta2 + 5*Delta1**2*Delta3_prmS1x + 10*Delta1*Delta1_prmS1x*Delta3 + 10*Delta1*Delta2*Delta2_prmS1x - 5*Delta1*Delta4_prmS1x + 5*Delta1_prmS1x*Delta2**2 - 5*Delta1_prmS1x*Delta4 - 5*Delta2*Delta3_prmS1x - 5*Delta2_prmS1x*Delta3)/(5*etaKminus1**2) + etaKminus1_prmS1x*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmS1x*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmS1x = 128*etaKminus1*etaKminus1_prmS1x/5
    logarg_prmS1x = u*(Delta1_prmS1x + u*(Delta2_prmS1x + u*(Delta3_prmS1x + u*(Delta4_prmS1x + u*(Delta5l_prmS1x*np.log(u) + Delta5_prmS1x)))))
    Deltaucalib_prmS1x = eta*(Delta0_prmS1x + logarg_prmS1x*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmS1x = eta*logarg_prmS1x*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmS1x + u*(2*Delta2_prmS1x + u*(3*Delta3_prmS1x + u*(4*Delta4_prmS1x + u*(5*Delta5l_prmS1x*np.log(u) + 5*Delta5_prmS1x)))))/(logarg + 1)
    Deltaubar_prmS1x = 2*a*a_prmS1x*u**2 + etaKminus1_prmS1x*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmS1x/etaKminus1**3
    Deltaubarprime_prmS1x = -4*a*a_prmS1x*u**3 + 2*etaKminus1_prmS1x*u**2/etaKminus1**2
    Deltau_prmS1x = (Deltaubar*Deltaucalib_prmS1x + Deltaubar_prmS1x*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmS1x = Deltaubar*Deltaucalibprime_prmS1x + Deltaubarprime*Deltaucalib_prmS1x + Deltaubarprime_prmS1x*Deltaucalib + Deltaubar_prmS1x*Deltaucalibprime
    Deltatprime_prmS1x = Deltauprime_prmS1x*r**2 + 2*Deltau_prmS1x*r
    Deltat_prmS1x = Deltau_prmS1x*r**2
    Deltar_prmS1x = Deltat_prmS1x*Dinv
    Deltarprime_prmS1x = Deltatprime_prmS1x*Dinv + Deltat_prmS1x*Dinvprime
    Lambt_prmS1x = (Deltat*a**2*sin2theta_prmS1x + 2*Deltat*a*a_prmS1x*sin2theta + Deltat_prmS1x*a**2*sin2theta - 2*w2*w2_prmS1x)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmS1x = (Deltar*Deltat_prmS1x + Deltar_prmS1x*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmS1x*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmS1x = 4.0*r*w2_prmS1x*np.sqrt(Deltar*Deltat)/w2**3 + (Deltar*Deltatprime_prmS1x + Deltarprime*Deltat_prmS1x + Deltarprime_prmS1x*Deltat + Deltar_prmS1x*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmS1x*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmS1x/2 + Deltar_prmS1x*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmS1x/2 - Deltar_prmS1x*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmS1x = csi_prmS1x*(1 - np.abs(tortoise - 1))
    csi2_prmS1x = csi_prmS1x*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmS1x = csi2_prmS1x*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmS1x = n3*prT_prmS1x*(-1 + 1/csi1) - csi1_prmS1x*n3*prT/csi1**2
    phat2_prmS1x = n2*prT_prmS1x*(-1 + 1/csi1) - csi1_prmS1x*n2*prT/csi1**2
    phat1_prmS1x = n1*prT_prmS1x*(-1 + 1/csi1) - csi1_prmS1x*n1*prT/csi1**2
    pdotxir_prmS1x = r*(phat1*xi1_prmS1x + phat1_prmS1x*xi1 + phat2*xi2_prmS1x + phat2_prmS1x*xi2 + phat3*xi3_prmS1x + phat3_prmS1x*xi3)
    pdotn_prmS1x = n1*phat1_prmS1x + n2*phat2_prmS1x + n3*phat3_prmS1x
    pdotvr_prmS1x = r*(phat1*v1_prmS1x + phat1_prmS1x*v1 + phat2*v2_prmS1x + phat2_prmS1x*v2 + phat3*v3_prmS1x + phat3_prmS1x*v3)
    pphi_prmS1x = pdotxir_prmS1x
    Qcoeff2_prmS1x = -sin2theta_prmS1x/(Sigma*sin2theta**2) - Sigma_prmS1x/(Sigma**2*sin2theta)
    Qcoeff1_prmS1x = -Sigma*sin2theta_prmS1x/(Lambt*sin2theta**2) + Sigma_prmS1x/(Lambt*sin2theta) - Lambt_prmS1x*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmS1x = 2*Deltar*pdotn*pdotn_prmS1x/Sigma - Deltar*Sigma_prmS1x*pdotn**2/Sigma**2 + Deltar_prmS1x*pdotn**2/Sigma
    Q_prmS1x = DrSipn2_prmS1x + 2*Qcoeff1*pdotxir*pdotxir_prmS1x + Qcoeff1_prmS1x*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmS1x + Qcoeff2_prmS1x*pdotvr**2
    Qminus1_prmS1x = Q_prmS1x
    Jtilde_prmS1x = Deltar_prmS1x/(2*np.sqrt(Deltar))
    exp2mu_prmS1x = Sigma_prmS1x
    expmu_prmS1x = exp2mu_prmS1x/(2*np.sqrt(exp2mu))
    Brtilde_prmS1x = (np.sqrt(Deltar)*Deltatprime_prmS1x - 2*Deltat_prmS1x + Deltar_prmS1x*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmS1x/2 - Deltar_prmS1x*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmS1x = Deltat_prmS1x/(2*np.sqrt(Deltat))
    exp2nu_prmS1x = Deltat*Sigma_prmS1x/Lambt - Deltat*Lambt_prmS1x*Sigma/Lambt**2 + Deltat_prmS1x*Sigma/Lambt
    expnu_prmS1x = exp2nu_prmS1x/(2*np.sqrt(exp2nu))
    omega_prmS1x = omegatilde_prmS1x/Lambt - Lambt_prmS1x*omegatilde/Lambt**2
    omegatildeprime_prmS1x = 2*a_prmS1x
    Lambtprime_prmS1x = -Deltatprime*a**2*sin2theta_prmS1x - 2*Deltatprime*a*a_prmS1x*sin2theta - Deltatprime_prmS1x*a**2*sin2theta + 8*a*a_prmS1x*r
    mucostheta_prmS1x = a**2*costheta_prmS1x/Sigma + 2*a*a_prmS1x*costheta/Sigma - Sigma_prmS1x*a**2*costheta/Sigma**2
    nucostheta_prmS1x = a**2*costheta*w2*(-Deltat_prmS1x + w2_prmS1x)/(Lambt*Sigma) + a**2*costheta*w2_prmS1x*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmS1x*w2*(-Deltat + w2)/(Lambt*Sigma) + a*a_prmS1x*costheta*w2*(-2*Deltat + 2*w2)/(Lambt*Sigma) - Sigma_prmS1x*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmS1x*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmS1x = -2*Deltat*a**2*costheta*omegatilde_prmS1x/Lambt**2 - 2*Deltat*a**2*costheta_prmS1x*omegatilde/Lambt**2 - 4*Deltat*a*a_prmS1x*costheta*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmS1x*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmS1x*a**2*costheta*omegatilde/Lambt**2
    mur_prmS1x = -Sigma_prmS1x*r/Sigma**2 + Deltar_prmS1x/(2*Deltar**(3/2))
    nur_prmS1x = -Sigma_prmS1x*r/Sigma**2 + w2*(Deltatprime*w2_prmS1x + Deltatprime_prmS1x*w2 - 4*Deltat_prmS1x*r)/(2*Deltat*Lambt) + w2_prmS1x*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmS1x*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmS1x*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmS1x = (Lambt*omegatildeprime_prmS1x - Lambtprime*omegatilde_prmS1x - Lambtprime_prmS1x*omegatilde + Lambt_prmS1x*omegatildeprime)/Lambt**2 + Lambt_prmS1x*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmS1x = 442.443*chi**2*chi_prmS1x*eta**2 - 1705.953*chi**2*chi_prmS1x*eta + 198.5961*chi**2*chi_prmS1x - 686.626*chi*chi_prmS1x*eta + 2495.29*chi_prmS1x*eta**2
    sigmacoeffTerm3_prmS1x = dSO_prmS1x*eta*u**3
    sigmacoeffTerm2_prmS1x = eta*(eta*r*(-6.125*DrSipn2_prmS1x*u**2 + 1.41666666666667*Qminus1_prmS1x*u**2 + r*(11.25*DrSipn2*DrSipn2_prmS1x*u**2 - 1.625*DrSipn2*Qminus1_prmS1x*u**2 - 1.625*DrSipn2_prmS1x*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmS1x*u**2 - 3.02777777777778*Qminus1_prmS1x*u**2 + r*(0.25*DrSipn2*Qminus1_prmS1x*u**2 + 0.25*DrSipn2_prmS1x*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmS1x*u**2)))
    sigmacoeffTerm1_prmS1x = eta*(-3*DrSipn2_prmS1x + Qminus1_prmS1x/4)
    sigmacoeff_prmS1x = sigmacoeffTerm1_prmS1x + sigmacoeffTerm2_prmS1x + sigmacoeffTerm3_prmS1x
    sigmastarcoeffTerm2_prmS1x = eta*(eta*r*(-324*DrSipn2_prmS1x + 120*Qminus1_prmS1x + r*(720*DrSipn2*DrSipn2_prmS1x + Qminus1*(-126*DrSipn2_prmS1x - 3*Qminus1_prmS1x) + Qminus1_prmS1x*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmS1x + Qminus1*r*(96*DrSipn2_prmS1x - 23*Qminus1_prmS1x) + Qminus1_prmS1x*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmS1x))/(72*r**2)
    sigmastarcoeffTerm1_prmS1x = eta*(-5*DrSipn2_prmS1x/2 + Qminus1_prmS1x/3)
    sigmastarcoeff_prmS1x = sigmastarcoeffTerm1_prmS1x + sigmastarcoeffTerm2_prmS1x
    Deltasigmastar3_prmS1x = sigma3*sigmacoeff_prmS1x + sigmastar3*sigmastarcoeff_prmS1x
    Deltasigmastar2_prmS1x = sigma2*sigmacoeff_prmS1x + sigmastar2*sigmastarcoeff_prmS1x
    Deltasigmastar1_prmS1x = sigma1*sigmacoeff_prmS1x + sigma1_prmS1x*sigmacoeff + sigmastar1*sigmastarcoeff_prmS1x + sigmastar1_prmS1x*sigmastarcoeff
    Sstar3_prmS1x = Deltasigmastar3_prmS1x
    Sstar2_prmS1x = Deltasigmastar2_prmS1x
    Sstar1_prmS1x = Deltasigmastar1_prmS1x + sigmastar1_prmS1x
    S3_prmS1x = Sstar3_prmS1x
    S2_prmS1x = Sstar2_prmS1x
    S1_prmS1x = Sstar1_prmS1x
    Sstardotn_prmS1x = Sstar1_prmS1x*n1 + Sstar2_prmS1x*n2 + Sstar3_prmS1x*n3
    Sdote3_prmS1x = S1*e31_prmS1x + S1_prmS1x*e31 + S2*e32_prmS1x + S2_prmS1x*e32 + S3*e33_prmS1x + S3_prmS1x*e33
    Sdotn_prmS1x = S1_prmS1x*n1 + S2_prmS1x*n2 + S3_prmS1x*n3
    Sdotv_prmS1x = S1*v1_prmS1x + S1_prmS1x*v1 + S2*v2_prmS1x + S2_prmS1x*v2 + S3*v3_prmS1x + S3_prmS1x*v3
    Sdotxi_prmS1x = S1*xi1_prmS1x + S1_prmS1x*xi1 + S2*xi2_prmS1x + S2_prmS1x*xi2 + S3*xi3_prmS1x + S3_prmS1x*xi3
    HdsumTerm2_prmS1x = 6*Sstardotn*Sstardotn_prmS1x
    HdsumTerm1_prmS1x = 2*Sstar1*Sstar1_prmS1x + 2*Sstar2*Sstar2_prmS1x + 2*Sstar3*Sstar3_prmS1x
    Hdsum_prmS1x = HdsumTerm1_prmS1x - HdsumTerm2_prmS1x
    Q4_prmS1x = eta*prT**3*prT_prmS1x*u**2*(32 - 24*eta)
    gammappsum_prmS1x = 2*Deltar*pdotn*pdotn_prmS1x/Sigma - Deltar*Sigma_prmS1x*pdotn**2/Sigma**2 + Deltar_prmS1x*pdotn**2/Sigma - pdotvr**2*sin2theta_prmS1x/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmS1x/(Sigma*sin2theta) - Sigma_prmS1x*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmS1x/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmS1x/(Lambt*sin2theta) + Sigma_prmS1x*pdotxir**2/(Lambt*sin2theta) - Lambt_prmS1x*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmS1x = Q4_prmS1x + gammappsum_prmS1x
    alpha_prmS1x = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmS1x/(2*Lambt) - Deltat*Lambt_prmS1x*Sigma/(2*Lambt**2) + Deltat_prmS1x*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmS1x = omegatilde*pphi_prmS1x/Lambt + omegatilde_prmS1x*pphi/Lambt - Lambt_prmS1x*omegatilde*pphi/Lambt**2
    HssTerm3_prmS1x = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmS1x - Q_prmS1x/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmS1x*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmS1x*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmS1x*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmS1x - Jtilde*Sdotv_prmS1x*pdotn - Jtilde_prmS1x*Sdotv*pdotn + Sdotn*pdotvr_prmS1x + Sdotn_prmS1x*pdotvr) + pdotvr_prmS1x*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmS1x*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmS1x + Btilde*Jtilde*Sdotxi_prmS1x*pdotn + Btilde*Jtilde_prmS1x*Sdotxi*pdotn + Btilde_prmS1x*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmS1x - Sdotn*expmu*expnu_prmS1x*pdotxir - Sdotn*expmu_prmS1x*expnu*pdotxir - Sdotn_prmS1x*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmS1x*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmS1x*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmS1x*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmS1x = omegacostheta*(-Q_prmS1x - Q_prmS1x/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmS1x/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmS1x*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmS1x*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmS1x*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS1x*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmS1x = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmS1x - Jtilde*Sdotv_prmS1x*pdotn - Jtilde_prmS1x*Sdotv*pdotn + Sdotn*pdotvr_prmS1x + Sdotn_prmS1x*pdotvr) + Jtilde*pdotn_prmS1x*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmS1x*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmS1x + Q_prmS1x/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmS1x*(np.sqrt(Q) + Q) + Sdotv_prmS1x*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmS1x*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmS1x*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmS1x - Btilde*Sdotxi*expnu_prmS1x*pdotvr - Btilde*Sdotxi_prmS1x*expnu*pdotvr - Btilde_prmS1x*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmS1x + Sdotv*exp2nu*expmu_prmS1x*pdotxir + Sdotv*exp2nu_prmS1x*expmu*pdotxir + Sdotv_prmS1x*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmS1x*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmS1x*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmS1x = Jtilde*omegar*(-Q_prmS1x - Q_prmS1x/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmS1x/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmS1x/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmS1x*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmS1x*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmS1x*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmS1x*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS1x*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmS1x = Sdote3*omega_prmS1x + Sdote3_prmS1x*omega
    Hss_prmS1x = HssTerm1_prmS1x + HssTerm2*HssTerm2coeff_prmS1x + HssTerm2coeff*HssTerm2_prmS1x + HssTerm3*HssTerm3coeff_prmS1x + HssTerm3coeff*HssTerm3_prmS1x
    HsoTerm2c_prmS1x = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmS1x*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmS1x*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmS1x*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmS1x*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmS1x*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmS1x*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmS1x*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmS1x = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmS1x + Jtilde*Sdotv_prmS1x*nur + Jtilde_prmS1x*Sdotv*nur - Sdotn*nucostheta*xisq_prmS1x - Sdotn*nucostheta_prmS1x*xisq - Sdotn_prmS1x*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmS1x*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmS1x*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmS1x*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmS1x*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmS1x*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmS1x = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmS1x + nur_prmS1x*pdotvr + pdotn*xisq*(mucostheta_prmS1x - nucostheta_prmS1x) + pdotn*xisq_prmS1x*(mucostheta - nucostheta) + pdotn_prmS1x*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmS1x - mucostheta*pdotn_prmS1x*xisq - mucostheta_prmS1x*pdotn*xisq + mur*pdotvr_prmS1x*(np.sqrt(Q) + 1) + mur_prmS1x*pdotvr*(np.sqrt(Q) + 1) + Q_prmS1x*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmS1x*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmS1x*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmS1x*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmS1x*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmS1x = HsoTerm2a_prmS1x + HsoTerm2b_prmS1x - HsoTerm2c_prmS1x
    HsoTerm2coeff_prmS1x = expnu*(-Q_prmS1x - Q_prmS1x/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmS1x/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmS1x/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmS1x*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmS1x*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmS1x = Sdote3*exp2nu*pdotxir*(-Btilde_prmS1x + expmu*expnu_prmS1x + expmu_prmS1x*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmS1x*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmS1x*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmS1x*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmS1x*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmS1x*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmS1x*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmS1x*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmS1x = HsoTerm1_prmS1x + HsoTerm2*HsoTerm2coeff_prmS1x + HsoTerm2coeff*HsoTerm2_prmS1x
    Hd_prmS1x = Hdcoeff*Hdsum_prmS1x
    Hns_prmS1x = np.sqrt(Hnsradicand)*alpha_prmS1x + betapsum_prmS1x + Hnsradicand_prmS1x*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmS1x = Hso_prmS1x + Hss_prmS1x
    dSS_prmS1x = 1585.533*chi**2*chi_prmS1x*eta**2 - 123.0009*chi**2*chi_prmS1x*eta + 2323.56*chi*chi_prmS1x*eta**3 - 652.65*chi*chi_prmS1x*eta**2 + 37.1964*chi_prmS1x*eta
    Heff_prmS1x = -Hd_prmS1x + Hns_prmS1x + Hs_prmS1x + 2*S1x*dSS*eta*u**4 + dSS_prmS1x*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmS1x = Heff_prmS1x*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmS1x

def v4P_compute_ham_S1y_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    sigmastar2_prmS1y = m2/(M**2*m1)
    sigma2_prmS1y = M**(-2)
    Skerr2_prmS1y = sigma2_prmS1y
    Skerrmag_prmS1y = Skerr2*Skerr2_prmS1y/np.sqrt(Skerr1**2 + Skerr2**2 + Skerr3**2)
    Skerrhat3_prmS1y = -Skerr3*Skerrmag_prmS1y/Skerrmag**2
    Skerrhat2_prmS1y = -Skerr2*Skerrmag_prmS1y/Skerrmag**2 + Skerr2_prmS1y/Skerrmag
    Skerrhat1_prmS1y = -Skerr1*Skerrmag_prmS1y/Skerrmag**2
    a_prmS1y = Skerrmag_prmS1y
    S1dotLhat_prmS1y = Lhat2
    S1perp3_prmS1y = -Lhat3*S1dotLhat_prmS1y
    S1perp2_prmS1y = -Lhat2*S1dotLhat_prmS1y + 1
    S1perp1_prmS1y = -Lhat1*S1dotLhat_prmS1y
    Sperp3_prmS1y = S1perp3_prmS1y
    Sperp2_prmS1y = S1perp2_prmS1y
    Sperp1_prmS1y = S1perp1_prmS1y
    condition_e3prov_lhs_prmS1y = a_prmS1y
    e3prov_gt_bound_prmS1y = -condition_e3prov_lhs_prmS1y*(condition_e3prov_lhs/2 - condition_e3prov_rhs/2 + np.abs(condition_e3prov_lhs - condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS1y*np.sign(condition_e3prov_lhs - condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS1y/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov_leq_bound_prmS1y = -condition_e3prov_lhs_prmS1y*(-TINYDOUBLE/2 + condition_e3prov_lhs/2 - condition_e3prov_rhs/2 - np.abs(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS1y*np.sign(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS1y/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov1_prmS1y = Skerrhat1*e3prov_gt_bound_prmS1y + Skerrhat1_prmS1y*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1y
    e3prov2_prmS1y = Skerrhat2*e3prov_gt_bound_prmS1y + Skerrhat2_prmS1y*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1y
    e3prov3_prmS1y = Skerrhat3*e3prov_gt_bound_prmS1y + Skerrhat3_prmS1y*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1y
    lambdahat_dot_e3prov_prmS1y = e3prov1_prmS1y*lambdahat1 + e3prov2_prmS1y*lambdahat2 + e3prov3_prmS1y*lambdahat3
    lambdahat_cross_e3prov3_prmS1y = -e3prov1_prmS1y*lambdahat2 + e3prov2_prmS1y*lambdahat1
    lambdahat_cross_e3prov2_prmS1y = e3prov1_prmS1y*lambdahat3 - e3prov3_prmS1y*lambdahat1
    lambdahat_cross_e3prov1_prmS1y = -e3prov2_prmS1y*lambdahat3 + e3prov3_prmS1y*lambdahat2
    e3prov_dot_n_prmS1y = e3prov1_prmS1y*n1 + e3prov2_prmS1y*n2 + e3prov3_prmS1y*n3
    condition_e3_lhs_prmS1y = -e3prov_dot_n_prmS1y*np.sign(e3prov_dot_n)
    e3_gt_bound_prmS1y = -condition_e3_lhs_prmS1y*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS1y*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmS1y/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmS1y = -condition_e3_lhs_prmS1y*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS1y*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmS1y/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmS1y = e3_gt_bound*e3prov1_prmS1y + e3_gt_bound_prmS1y*e3prov1 + e3_leq_bound*(cos_0_1_deg*e3prov1_prmS1y + lambdahat1*lambdahat_dot_e3prov_prmS1y*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmS1y*sin_0_1_deg) + e3_leq_bound_prmS1y*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmS1y = e3_gt_bound*e3prov2_prmS1y + e3_gt_bound_prmS1y*e3prov2 + e3_leq_bound*(cos_0_1_deg*e3prov2_prmS1y + lambdahat2*lambdahat_dot_e3prov_prmS1y*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmS1y*sin_0_1_deg) + e3_leq_bound_prmS1y*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmS1y = e3_gt_bound*e3prov3_prmS1y + e3_gt_bound_prmS1y*e3prov3 + e3_leq_bound*(cos_0_1_deg*e3prov3_prmS1y + lambdahat3*lambdahat_dot_e3prov_prmS1y*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmS1y*sin_0_1_deg) + e3_leq_bound_prmS1y*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmS1y = e31_prmS1y*n2 - e32_prmS1y*n1
    xi2_prmS1y = -e31_prmS1y*n3 + e33_prmS1y*n1
    xi1_prmS1y = e32_prmS1y*n3 - e33_prmS1y*n2
    v3_prmS1y = n1*xi2_prmS1y - n2*xi1_prmS1y
    v2_prmS1y = -n1*xi3_prmS1y + n3*xi1_prmS1y
    v1_prmS1y = n2*xi3_prmS1y - n3*xi2_prmS1y
    costheta_prmS1y = e31_prmS1y*n1 + e32_prmS1y*n2 + e33_prmS1y*n3
    sin2theta_prmS1y = -2*costheta*costheta_prmS1y
    xisq_prmS1y = sin2theta_prmS1y
    w2_prmS1y = 2*a*a_prmS1y
    Sigma_prmS1y = 2*a**2*costheta*costheta_prmS1y + 2*a*a_prmS1y*costheta**2
    omegatilde_prmS1y = 2*a_prmS1y*r
    chi_prmS1y = Lhat2*Skerr2_prmS1y/(1 - 2*eta) + (Skerr1*Sperp1_prmS1y/2 + Skerr2*Sperp2_prmS1y/2 + Skerr2_prmS1y*Sperp2/2 + Skerr3*Sperp3_prmS1y/2)/(Skerrmag*(1.0 - 2.0*eta)) + Skerrmag_prmS1y*(-Skerr1*Sperp1/2 - Skerr2*Sperp2/2 - Skerr3*Sperp3/2)/(Skerrmag**2*(1.0 - 2.0*eta))
    K_prmS1y = -177.4974*chi**2*chi_prmS1y*eta**3 - 1.280874*chi**2*chi_prmS1y*eta + 4.30977*chi**2*chi_prmS1y + 62.3492*chi*chi_prmS1y*eta**3 + 12.32932*chi*chi_prmS1y*eta**2 - 2.76172*chi*chi_prmS1y - 27.5201*chi_prmS1y*eta**3 + 17.3736*chi_prmS1y*eta**2 + 2.26831*chi_prmS1y*eta - 1.62045*chi_prmS1y
    etaKminus1_prmS1y = K_prmS1y*eta
    Delta0_prmS1y = K*K_prmS1y*eta + K_prmS1y*(K*eta - 2)
    Delta1_prmS1y = etaKminus1*(-2*Delta0_prmS1y - 2*K_prmS1y) + etaKminus1_prmS1y*(-2*Delta0 - 2*K)
    Delta2_prmS1y = -2*Delta0*a**2*etaKminus1*etaKminus1_prmS1y - 2*Delta0*a*a_prmS1y*etaKminus1**2 - Delta0_prmS1y*a**2*etaKminus1**2 + Delta1*(Delta1_prmS1y/2 - 2*etaKminus1_prmS1y) + Delta1_prmS1y*(Delta1/2 - 2*etaKminus1)
    Delta3_prmS1y = -Delta1**2*Delta1_prmS1y + Delta1**2*etaKminus1_prmS1y + 2*Delta1*Delta1_prmS1y*etaKminus1 + Delta1*Delta2_prmS1y - 2*Delta1*a**2*etaKminus1*etaKminus1_prmS1y - 2*Delta1*a*a_prmS1y*etaKminus1**2 + Delta1_prmS1y*Delta2 - Delta1_prmS1y*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmS1y + 2*etaKminus1_prmS1y) + etaKminus1_prmS1y*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmS1y = Delta1**3*Delta1_prmS1y - 2*Delta1**3*etaKminus1_prmS1y/3 - 2*Delta1**2*Delta1_prmS1y*etaKminus1 - Delta1**2*Delta2_prmS1y - 2*Delta1*Delta1_prmS1y*Delta2 + Delta1*(2*Delta2*etaKminus1_prmS1y + 2*Delta2_prmS1y*etaKminus1 + Delta3_prmS1y) + Delta1_prmS1y*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmS1y - 2*Delta3*etaKminus1_prmS1y - 2*Delta3_prmS1y*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmS1y - 2*Delta2_prmS1y)/2 + a**2*etaKminus1*etaKminus1_prmS1y*(Delta1**2 - 2*Delta2) + a*a_prmS1y*etaKminus1**2*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmS1y*(376 - 123*np.pi**2/8)/6
    Delta5_prmS1y = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmS1y - 3*Delta1*Delta2_prmS1y - 3*Delta1_prmS1y*Delta2 + 3*Delta3_prmS1y)/3 + a*a_prmS1y*(-2*Delta1**3 + 6*Delta1*Delta2 - 6*Delta3)/3 + (4*Delta1**3*Delta1_prmS1y - 4*Delta1**2*Delta2_prmS1y - 8*Delta1*Delta1_prmS1y*Delta2 + 4*Delta1*Delta3_prmS1y + 4*Delta1_prmS1y*Delta3 + 4*Delta2*Delta2_prmS1y - 4*Delta4_prmS1y)/(2*etaKminus1) - etaKminus1_prmS1y*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmS1y - 5*Delta1**3*Delta2_prmS1y - 15*Delta1**2*Delta1_prmS1y*Delta2 + 5*Delta1**2*Delta3_prmS1y + 10*Delta1*Delta1_prmS1y*Delta3 + 10*Delta1*Delta2*Delta2_prmS1y - 5*Delta1*Delta4_prmS1y + 5*Delta1_prmS1y*Delta2**2 - 5*Delta1_prmS1y*Delta4 - 5*Delta2*Delta3_prmS1y - 5*Delta2_prmS1y*Delta3)/(5*etaKminus1**2) + etaKminus1_prmS1y*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmS1y*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmS1y = 128*etaKminus1*etaKminus1_prmS1y/5
    logarg_prmS1y = u*(Delta1_prmS1y + u*(Delta2_prmS1y + u*(Delta3_prmS1y + u*(Delta4_prmS1y + u*(Delta5l_prmS1y*np.log(u) + Delta5_prmS1y)))))
    Deltaucalib_prmS1y = eta*(Delta0_prmS1y + logarg_prmS1y*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmS1y = eta*logarg_prmS1y*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmS1y + u*(2*Delta2_prmS1y + u*(3*Delta3_prmS1y + u*(4*Delta4_prmS1y + u*(5*Delta5l_prmS1y*np.log(u) + 5*Delta5_prmS1y)))))/(logarg + 1)
    Deltaubar_prmS1y = 2*a*a_prmS1y*u**2 + etaKminus1_prmS1y*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmS1y/etaKminus1**3
    Deltaubarprime_prmS1y = -4*a*a_prmS1y*u**3 + 2*etaKminus1_prmS1y*u**2/etaKminus1**2
    Deltau_prmS1y = (Deltaubar*Deltaucalib_prmS1y + Deltaubar_prmS1y*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmS1y = Deltaubar*Deltaucalibprime_prmS1y + Deltaubarprime*Deltaucalib_prmS1y + Deltaubarprime_prmS1y*Deltaucalib + Deltaubar_prmS1y*Deltaucalibprime
    Deltatprime_prmS1y = Deltauprime_prmS1y*r**2 + 2*Deltau_prmS1y*r
    Deltat_prmS1y = Deltau_prmS1y*r**2
    Deltar_prmS1y = Deltat_prmS1y*Dinv
    Deltarprime_prmS1y = Deltatprime_prmS1y*Dinv + Deltat_prmS1y*Dinvprime
    Lambt_prmS1y = (Deltat*a**2*sin2theta_prmS1y + 2*Deltat*a*a_prmS1y*sin2theta + Deltat_prmS1y*a**2*sin2theta - 2*w2*w2_prmS1y)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmS1y = (Deltar*Deltat_prmS1y + Deltar_prmS1y*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmS1y*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmS1y = 4.0*r*w2_prmS1y*np.sqrt(Deltar*Deltat)/w2**3 + (Deltar*Deltatprime_prmS1y + Deltarprime*Deltat_prmS1y + Deltarprime_prmS1y*Deltat + Deltar_prmS1y*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmS1y*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmS1y/2 + Deltar_prmS1y*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmS1y/2 - Deltar_prmS1y*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmS1y = csi_prmS1y*(1 - np.abs(tortoise - 1))
    csi2_prmS1y = csi_prmS1y*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmS1y = csi2_prmS1y*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmS1y = n3*prT_prmS1y*(-1 + 1/csi1) - csi1_prmS1y*n3*prT/csi1**2
    phat2_prmS1y = n2*prT_prmS1y*(-1 + 1/csi1) - csi1_prmS1y*n2*prT/csi1**2
    phat1_prmS1y = n1*prT_prmS1y*(-1 + 1/csi1) - csi1_prmS1y*n1*prT/csi1**2
    pdotxir_prmS1y = r*(phat1*xi1_prmS1y + phat1_prmS1y*xi1 + phat2*xi2_prmS1y + phat2_prmS1y*xi2 + phat3*xi3_prmS1y + phat3_prmS1y*xi3)
    pdotn_prmS1y = n1*phat1_prmS1y + n2*phat2_prmS1y + n3*phat3_prmS1y
    pdotvr_prmS1y = r*(phat1*v1_prmS1y + phat1_prmS1y*v1 + phat2*v2_prmS1y + phat2_prmS1y*v2 + phat3*v3_prmS1y + phat3_prmS1y*v3)
    pphi_prmS1y = pdotxir_prmS1y
    Qcoeff2_prmS1y = -sin2theta_prmS1y/(Sigma*sin2theta**2) - Sigma_prmS1y/(Sigma**2*sin2theta)
    Qcoeff1_prmS1y = -Sigma*sin2theta_prmS1y/(Lambt*sin2theta**2) + Sigma_prmS1y/(Lambt*sin2theta) - Lambt_prmS1y*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmS1y = 2*Deltar*pdotn*pdotn_prmS1y/Sigma - Deltar*Sigma_prmS1y*pdotn**2/Sigma**2 + Deltar_prmS1y*pdotn**2/Sigma
    Q_prmS1y = DrSipn2_prmS1y + 2*Qcoeff1*pdotxir*pdotxir_prmS1y + Qcoeff1_prmS1y*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmS1y + Qcoeff2_prmS1y*pdotvr**2
    Qminus1_prmS1y = Q_prmS1y
    Jtilde_prmS1y = Deltar_prmS1y/(2*np.sqrt(Deltar))
    exp2mu_prmS1y = Sigma_prmS1y
    expmu_prmS1y = exp2mu_prmS1y/(2*np.sqrt(exp2mu))
    Brtilde_prmS1y = (np.sqrt(Deltar)*Deltatprime_prmS1y - 2*Deltat_prmS1y + Deltar_prmS1y*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmS1y/2 - Deltar_prmS1y*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmS1y = Deltat_prmS1y/(2*np.sqrt(Deltat))
    exp2nu_prmS1y = Deltat*Sigma_prmS1y/Lambt - Deltat*Lambt_prmS1y*Sigma/Lambt**2 + Deltat_prmS1y*Sigma/Lambt
    expnu_prmS1y = exp2nu_prmS1y/(2*np.sqrt(exp2nu))
    omega_prmS1y = omegatilde_prmS1y/Lambt - Lambt_prmS1y*omegatilde/Lambt**2
    omegatildeprime_prmS1y = 2*a_prmS1y
    Lambtprime_prmS1y = -Deltatprime*a**2*sin2theta_prmS1y - 2*Deltatprime*a*a_prmS1y*sin2theta - Deltatprime_prmS1y*a**2*sin2theta + 8*a*a_prmS1y*r
    mucostheta_prmS1y = a**2*costheta_prmS1y/Sigma + 2*a*a_prmS1y*costheta/Sigma - Sigma_prmS1y*a**2*costheta/Sigma**2
    nucostheta_prmS1y = a**2*costheta*w2*(-Deltat_prmS1y + w2_prmS1y)/(Lambt*Sigma) + a**2*costheta*w2_prmS1y*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmS1y*w2*(-Deltat + w2)/(Lambt*Sigma) + a*a_prmS1y*costheta*w2*(-2*Deltat + 2*w2)/(Lambt*Sigma) - Sigma_prmS1y*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmS1y*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmS1y = -2*Deltat*a**2*costheta*omegatilde_prmS1y/Lambt**2 - 2*Deltat*a**2*costheta_prmS1y*omegatilde/Lambt**2 - 4*Deltat*a*a_prmS1y*costheta*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmS1y*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmS1y*a**2*costheta*omegatilde/Lambt**2
    mur_prmS1y = -Sigma_prmS1y*r/Sigma**2 + Deltar_prmS1y/(2*Deltar**(3/2))
    nur_prmS1y = -Sigma_prmS1y*r/Sigma**2 + w2*(Deltatprime*w2_prmS1y + Deltatprime_prmS1y*w2 - 4*Deltat_prmS1y*r)/(2*Deltat*Lambt) + w2_prmS1y*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmS1y*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmS1y*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmS1y = (Lambt*omegatildeprime_prmS1y - Lambtprime*omegatilde_prmS1y - Lambtprime_prmS1y*omegatilde + Lambt_prmS1y*omegatildeprime)/Lambt**2 + Lambt_prmS1y*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmS1y = 442.443*chi**2*chi_prmS1y*eta**2 - 1705.953*chi**2*chi_prmS1y*eta + 198.5961*chi**2*chi_prmS1y - 686.626*chi*chi_prmS1y*eta + 2495.29*chi_prmS1y*eta**2
    sigmacoeffTerm3_prmS1y = dSO_prmS1y*eta*u**3
    sigmacoeffTerm2_prmS1y = eta*(eta*r*(-6.125*DrSipn2_prmS1y*u**2 + 1.41666666666667*Qminus1_prmS1y*u**2 + r*(11.25*DrSipn2*DrSipn2_prmS1y*u**2 - 1.625*DrSipn2*Qminus1_prmS1y*u**2 - 1.625*DrSipn2_prmS1y*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmS1y*u**2 - 3.02777777777778*Qminus1_prmS1y*u**2 + r*(0.25*DrSipn2*Qminus1_prmS1y*u**2 + 0.25*DrSipn2_prmS1y*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmS1y*u**2)))
    sigmacoeffTerm1_prmS1y = eta*(-3*DrSipn2_prmS1y + Qminus1_prmS1y/4)
    sigmacoeff_prmS1y = sigmacoeffTerm1_prmS1y + sigmacoeffTerm2_prmS1y + sigmacoeffTerm3_prmS1y
    sigmastarcoeffTerm2_prmS1y = eta*(eta*r*(-324*DrSipn2_prmS1y + 120*Qminus1_prmS1y + r*(720*DrSipn2*DrSipn2_prmS1y + Qminus1*(-126*DrSipn2_prmS1y - 3*Qminus1_prmS1y) + Qminus1_prmS1y*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmS1y + Qminus1*r*(96*DrSipn2_prmS1y - 23*Qminus1_prmS1y) + Qminus1_prmS1y*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmS1y))/(72*r**2)
    sigmastarcoeffTerm1_prmS1y = eta*(-5*DrSipn2_prmS1y/2 + Qminus1_prmS1y/3)
    sigmastarcoeff_prmS1y = sigmastarcoeffTerm1_prmS1y + sigmastarcoeffTerm2_prmS1y
    Deltasigmastar3_prmS1y = sigma3*sigmacoeff_prmS1y + sigmastar3*sigmastarcoeff_prmS1y
    Deltasigmastar2_prmS1y = sigma2*sigmacoeff_prmS1y + sigma2_prmS1y*sigmacoeff + sigmastar2*sigmastarcoeff_prmS1y + sigmastar2_prmS1y*sigmastarcoeff
    Deltasigmastar1_prmS1y = sigma1*sigmacoeff_prmS1y + sigmastar1*sigmastarcoeff_prmS1y
    Sstar3_prmS1y = Deltasigmastar3_prmS1y
    Sstar2_prmS1y = Deltasigmastar2_prmS1y + sigmastar2_prmS1y
    Sstar1_prmS1y = Deltasigmastar1_prmS1y
    S3_prmS1y = Sstar3_prmS1y
    S2_prmS1y = Sstar2_prmS1y
    S1_prmS1y = Sstar1_prmS1y
    Sstardotn_prmS1y = Sstar1_prmS1y*n1 + Sstar2_prmS1y*n2 + Sstar3_prmS1y*n3
    Sdote3_prmS1y = S1*e31_prmS1y + S1_prmS1y*e31 + S2*e32_prmS1y + S2_prmS1y*e32 + S3*e33_prmS1y + S3_prmS1y*e33
    Sdotn_prmS1y = S1_prmS1y*n1 + S2_prmS1y*n2 + S3_prmS1y*n3
    Sdotv_prmS1y = S1*v1_prmS1y + S1_prmS1y*v1 + S2*v2_prmS1y + S2_prmS1y*v2 + S3*v3_prmS1y + S3_prmS1y*v3
    Sdotxi_prmS1y = S1*xi1_prmS1y + S1_prmS1y*xi1 + S2*xi2_prmS1y + S2_prmS1y*xi2 + S3*xi3_prmS1y + S3_prmS1y*xi3
    HdsumTerm2_prmS1y = 6*Sstardotn*Sstardotn_prmS1y
    HdsumTerm1_prmS1y = 2*Sstar1*Sstar1_prmS1y + 2*Sstar2*Sstar2_prmS1y + 2*Sstar3*Sstar3_prmS1y
    Hdsum_prmS1y = HdsumTerm1_prmS1y - HdsumTerm2_prmS1y
    Q4_prmS1y = eta*prT**3*prT_prmS1y*u**2*(32 - 24*eta)
    gammappsum_prmS1y = 2*Deltar*pdotn*pdotn_prmS1y/Sigma - Deltar*Sigma_prmS1y*pdotn**2/Sigma**2 + Deltar_prmS1y*pdotn**2/Sigma - pdotvr**2*sin2theta_prmS1y/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmS1y/(Sigma*sin2theta) - Sigma_prmS1y*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmS1y/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmS1y/(Lambt*sin2theta) + Sigma_prmS1y*pdotxir**2/(Lambt*sin2theta) - Lambt_prmS1y*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmS1y = Q4_prmS1y + gammappsum_prmS1y
    alpha_prmS1y = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmS1y/(2*Lambt) - Deltat*Lambt_prmS1y*Sigma/(2*Lambt**2) + Deltat_prmS1y*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmS1y = omegatilde*pphi_prmS1y/Lambt + omegatilde_prmS1y*pphi/Lambt - Lambt_prmS1y*omegatilde*pphi/Lambt**2
    HssTerm3_prmS1y = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmS1y - Q_prmS1y/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmS1y*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmS1y*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmS1y*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmS1y - Jtilde*Sdotv_prmS1y*pdotn - Jtilde_prmS1y*Sdotv*pdotn + Sdotn*pdotvr_prmS1y + Sdotn_prmS1y*pdotvr) + pdotvr_prmS1y*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmS1y*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmS1y + Btilde*Jtilde*Sdotxi_prmS1y*pdotn + Btilde*Jtilde_prmS1y*Sdotxi*pdotn + Btilde_prmS1y*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmS1y - Sdotn*expmu*expnu_prmS1y*pdotxir - Sdotn*expmu_prmS1y*expnu*pdotxir - Sdotn_prmS1y*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmS1y*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmS1y*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmS1y*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmS1y = omegacostheta*(-Q_prmS1y - Q_prmS1y/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmS1y/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmS1y*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmS1y*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmS1y*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS1y*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmS1y = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmS1y - Jtilde*Sdotv_prmS1y*pdotn - Jtilde_prmS1y*Sdotv*pdotn + Sdotn*pdotvr_prmS1y + Sdotn_prmS1y*pdotvr) + Jtilde*pdotn_prmS1y*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmS1y*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmS1y + Q_prmS1y/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmS1y*(np.sqrt(Q) + Q) + Sdotv_prmS1y*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmS1y*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmS1y*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmS1y - Btilde*Sdotxi*expnu_prmS1y*pdotvr - Btilde*Sdotxi_prmS1y*expnu*pdotvr - Btilde_prmS1y*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmS1y + Sdotv*exp2nu*expmu_prmS1y*pdotxir + Sdotv*exp2nu_prmS1y*expmu*pdotxir + Sdotv_prmS1y*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmS1y*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmS1y*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmS1y = Jtilde*omegar*(-Q_prmS1y - Q_prmS1y/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmS1y/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmS1y/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmS1y*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmS1y*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmS1y*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmS1y*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS1y*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmS1y = Sdote3*omega_prmS1y + Sdote3_prmS1y*omega
    Hss_prmS1y = HssTerm1_prmS1y + HssTerm2*HssTerm2coeff_prmS1y + HssTerm2coeff*HssTerm2_prmS1y + HssTerm3*HssTerm3coeff_prmS1y + HssTerm3coeff*HssTerm3_prmS1y
    HsoTerm2c_prmS1y = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmS1y*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmS1y*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmS1y*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmS1y*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmS1y*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmS1y*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmS1y*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmS1y = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmS1y + Jtilde*Sdotv_prmS1y*nur + Jtilde_prmS1y*Sdotv*nur - Sdotn*nucostheta*xisq_prmS1y - Sdotn*nucostheta_prmS1y*xisq - Sdotn_prmS1y*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmS1y*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmS1y*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmS1y*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmS1y*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmS1y*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmS1y = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmS1y + nur_prmS1y*pdotvr + pdotn*xisq*(mucostheta_prmS1y - nucostheta_prmS1y) + pdotn*xisq_prmS1y*(mucostheta - nucostheta) + pdotn_prmS1y*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmS1y - mucostheta*pdotn_prmS1y*xisq - mucostheta_prmS1y*pdotn*xisq + mur*pdotvr_prmS1y*(np.sqrt(Q) + 1) + mur_prmS1y*pdotvr*(np.sqrt(Q) + 1) + Q_prmS1y*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmS1y*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmS1y*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmS1y*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmS1y*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmS1y = HsoTerm2a_prmS1y + HsoTerm2b_prmS1y - HsoTerm2c_prmS1y
    HsoTerm2coeff_prmS1y = expnu*(-Q_prmS1y - Q_prmS1y/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmS1y/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmS1y/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmS1y*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmS1y*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmS1y = Sdote3*exp2nu*pdotxir*(-Btilde_prmS1y + expmu*expnu_prmS1y + expmu_prmS1y*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmS1y*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmS1y*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmS1y*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmS1y*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmS1y*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmS1y*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmS1y*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmS1y = HsoTerm1_prmS1y + HsoTerm2*HsoTerm2coeff_prmS1y + HsoTerm2coeff*HsoTerm2_prmS1y
    Hd_prmS1y = Hdcoeff*Hdsum_prmS1y
    Hns_prmS1y = np.sqrt(Hnsradicand)*alpha_prmS1y + betapsum_prmS1y + Hnsradicand_prmS1y*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmS1y = Hso_prmS1y + Hss_prmS1y
    dSS_prmS1y = 1585.533*chi**2*chi_prmS1y*eta**2 - 123.0009*chi**2*chi_prmS1y*eta + 2323.56*chi*chi_prmS1y*eta**3 - 652.65*chi*chi_prmS1y*eta**2 + 37.1964*chi_prmS1y*eta
    Heff_prmS1y = -Hd_prmS1y + Hns_prmS1y + Hs_prmS1y + 2*S1y*dSS*eta*u**4 + dSS_prmS1y*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmS1y = Heff_prmS1y*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmS1y

def v4P_compute_ham_S1z_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    sigmastar3_prmS1z = m2/(M**2*m1)
    sigma3_prmS1z = M**(-2)
    Skerr3_prmS1z = sigma3_prmS1z
    Skerrmag_prmS1z = Skerr3*Skerr3_prmS1z/np.sqrt(Skerr1**2 + Skerr2**2 + Skerr3**2)
    Skerrhat3_prmS1z = -Skerr3*Skerrmag_prmS1z/Skerrmag**2 + Skerr3_prmS1z/Skerrmag
    Skerrhat2_prmS1z = -Skerr2*Skerrmag_prmS1z/Skerrmag**2
    Skerrhat1_prmS1z = -Skerr1*Skerrmag_prmS1z/Skerrmag**2
    a_prmS1z = Skerrmag_prmS1z
    S1dotLhat_prmS1z = Lhat3
    S1perp3_prmS1z = -Lhat3*S1dotLhat_prmS1z + 1
    S1perp2_prmS1z = -Lhat2*S1dotLhat_prmS1z
    S1perp1_prmS1z = -Lhat1*S1dotLhat_prmS1z
    Sperp3_prmS1z = S1perp3_prmS1z
    Sperp2_prmS1z = S1perp2_prmS1z
    Sperp1_prmS1z = S1perp1_prmS1z
    condition_e3prov_lhs_prmS1z = a_prmS1z
    e3prov_gt_bound_prmS1z = -condition_e3prov_lhs_prmS1z*(condition_e3prov_lhs/2 - condition_e3prov_rhs/2 + np.abs(condition_e3prov_lhs - condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS1z*np.sign(condition_e3prov_lhs - condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS1z/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov_leq_bound_prmS1z = -condition_e3prov_lhs_prmS1z*(-TINYDOUBLE/2 + condition_e3prov_lhs/2 - condition_e3prov_rhs/2 - np.abs(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS1z*np.sign(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS1z/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov1_prmS1z = Skerrhat1*e3prov_gt_bound_prmS1z + Skerrhat1_prmS1z*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1z
    e3prov2_prmS1z = Skerrhat2*e3prov_gt_bound_prmS1z + Skerrhat2_prmS1z*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1z
    e3prov3_prmS1z = Skerrhat3*e3prov_gt_bound_prmS1z + Skerrhat3_prmS1z*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS1z
    lambdahat_dot_e3prov_prmS1z = e3prov1_prmS1z*lambdahat1 + e3prov2_prmS1z*lambdahat2 + e3prov3_prmS1z*lambdahat3
    lambdahat_cross_e3prov3_prmS1z = -e3prov1_prmS1z*lambdahat2 + e3prov2_prmS1z*lambdahat1
    lambdahat_cross_e3prov2_prmS1z = e3prov1_prmS1z*lambdahat3 - e3prov3_prmS1z*lambdahat1
    lambdahat_cross_e3prov1_prmS1z = -e3prov2_prmS1z*lambdahat3 + e3prov3_prmS1z*lambdahat2
    e3prov_dot_n_prmS1z = e3prov1_prmS1z*n1 + e3prov2_prmS1z*n2 + e3prov3_prmS1z*n3
    condition_e3_lhs_prmS1z = -e3prov_dot_n_prmS1z*np.sign(e3prov_dot_n)
    e3_gt_bound_prmS1z = -condition_e3_lhs_prmS1z*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS1z*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmS1z/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmS1z = -condition_e3_lhs_prmS1z*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS1z*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmS1z/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmS1z = e3_gt_bound*e3prov1_prmS1z + e3_gt_bound_prmS1z*e3prov1 + e3_leq_bound*(cos_0_1_deg*e3prov1_prmS1z + lambdahat1*lambdahat_dot_e3prov_prmS1z*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmS1z*sin_0_1_deg) + e3_leq_bound_prmS1z*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmS1z = e3_gt_bound*e3prov2_prmS1z + e3_gt_bound_prmS1z*e3prov2 + e3_leq_bound*(cos_0_1_deg*e3prov2_prmS1z + lambdahat2*lambdahat_dot_e3prov_prmS1z*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmS1z*sin_0_1_deg) + e3_leq_bound_prmS1z*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmS1z = e3_gt_bound*e3prov3_prmS1z + e3_gt_bound_prmS1z*e3prov3 + e3_leq_bound*(cos_0_1_deg*e3prov3_prmS1z + lambdahat3*lambdahat_dot_e3prov_prmS1z*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmS1z*sin_0_1_deg) + e3_leq_bound_prmS1z*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmS1z = e31_prmS1z*n2 - e32_prmS1z*n1
    xi2_prmS1z = -e31_prmS1z*n3 + e33_prmS1z*n1
    xi1_prmS1z = e32_prmS1z*n3 - e33_prmS1z*n2
    v3_prmS1z = n1*xi2_prmS1z - n2*xi1_prmS1z
    v2_prmS1z = -n1*xi3_prmS1z + n3*xi1_prmS1z
    v1_prmS1z = n2*xi3_prmS1z - n3*xi2_prmS1z
    costheta_prmS1z = e31_prmS1z*n1 + e32_prmS1z*n2 + e33_prmS1z*n3
    sin2theta_prmS1z = -2*costheta*costheta_prmS1z
    xisq_prmS1z = sin2theta_prmS1z
    w2_prmS1z = 2*a*a_prmS1z
    Sigma_prmS1z = 2*a**2*costheta*costheta_prmS1z + 2*a*a_prmS1z*costheta**2
    omegatilde_prmS1z = 2*a_prmS1z*r
    chi_prmS1z = Lhat3*Skerr3_prmS1z/(1 - 2*eta) + (Skerr1*Sperp1_prmS1z/2 + Skerr2*Sperp2_prmS1z/2 + Skerr3*Sperp3_prmS1z/2 + Skerr3_prmS1z*Sperp3/2)/(Skerrmag*(1.0 - 2.0*eta)) + Skerrmag_prmS1z*(-Skerr1*Sperp1/2 - Skerr2*Sperp2/2 - Skerr3*Sperp3/2)/(Skerrmag**2*(1.0 - 2.0*eta))
    K_prmS1z = -177.4974*chi**2*chi_prmS1z*eta**3 - 1.280874*chi**2*chi_prmS1z*eta + 4.30977*chi**2*chi_prmS1z + 62.3492*chi*chi_prmS1z*eta**3 + 12.32932*chi*chi_prmS1z*eta**2 - 2.76172*chi*chi_prmS1z - 27.5201*chi_prmS1z*eta**3 + 17.3736*chi_prmS1z*eta**2 + 2.26831*chi_prmS1z*eta - 1.62045*chi_prmS1z
    etaKminus1_prmS1z = K_prmS1z*eta
    Delta0_prmS1z = K*K_prmS1z*eta + K_prmS1z*(K*eta - 2)
    Delta1_prmS1z = etaKminus1*(-2*Delta0_prmS1z - 2*K_prmS1z) + etaKminus1_prmS1z*(-2*Delta0 - 2*K)
    Delta2_prmS1z = -2*Delta0*a**2*etaKminus1*etaKminus1_prmS1z - 2*Delta0*a*a_prmS1z*etaKminus1**2 - Delta0_prmS1z*a**2*etaKminus1**2 + Delta1*(Delta1_prmS1z/2 - 2*etaKminus1_prmS1z) + Delta1_prmS1z*(Delta1/2 - 2*etaKminus1)
    Delta3_prmS1z = -Delta1**2*Delta1_prmS1z + Delta1**2*etaKminus1_prmS1z + 2*Delta1*Delta1_prmS1z*etaKminus1 + Delta1*Delta2_prmS1z - 2*Delta1*a**2*etaKminus1*etaKminus1_prmS1z - 2*Delta1*a*a_prmS1z*etaKminus1**2 + Delta1_prmS1z*Delta2 - Delta1_prmS1z*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmS1z + 2*etaKminus1_prmS1z) + etaKminus1_prmS1z*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmS1z = Delta1**3*Delta1_prmS1z - 2*Delta1**3*etaKminus1_prmS1z/3 - 2*Delta1**2*Delta1_prmS1z*etaKminus1 - Delta1**2*Delta2_prmS1z - 2*Delta1*Delta1_prmS1z*Delta2 + Delta1*(2*Delta2*etaKminus1_prmS1z + 2*Delta2_prmS1z*etaKminus1 + Delta3_prmS1z) + Delta1_prmS1z*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmS1z - 2*Delta3*etaKminus1_prmS1z - 2*Delta3_prmS1z*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmS1z - 2*Delta2_prmS1z)/2 + a**2*etaKminus1*etaKminus1_prmS1z*(Delta1**2 - 2*Delta2) + a*a_prmS1z*etaKminus1**2*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmS1z*(376 - 123*np.pi**2/8)/6
    Delta5_prmS1z = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmS1z - 3*Delta1*Delta2_prmS1z - 3*Delta1_prmS1z*Delta2 + 3*Delta3_prmS1z)/3 + a*a_prmS1z*(-2*Delta1**3 + 6*Delta1*Delta2 - 6*Delta3)/3 + (4*Delta1**3*Delta1_prmS1z - 4*Delta1**2*Delta2_prmS1z - 8*Delta1*Delta1_prmS1z*Delta2 + 4*Delta1*Delta3_prmS1z + 4*Delta1_prmS1z*Delta3 + 4*Delta2*Delta2_prmS1z - 4*Delta4_prmS1z)/(2*etaKminus1) - etaKminus1_prmS1z*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmS1z - 5*Delta1**3*Delta2_prmS1z - 15*Delta1**2*Delta1_prmS1z*Delta2 + 5*Delta1**2*Delta3_prmS1z + 10*Delta1*Delta1_prmS1z*Delta3 + 10*Delta1*Delta2*Delta2_prmS1z - 5*Delta1*Delta4_prmS1z + 5*Delta1_prmS1z*Delta2**2 - 5*Delta1_prmS1z*Delta4 - 5*Delta2*Delta3_prmS1z - 5*Delta2_prmS1z*Delta3)/(5*etaKminus1**2) + etaKminus1_prmS1z*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmS1z*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmS1z = 128*etaKminus1*etaKminus1_prmS1z/5
    logarg_prmS1z = u*(Delta1_prmS1z + u*(Delta2_prmS1z + u*(Delta3_prmS1z + u*(Delta4_prmS1z + u*(Delta5l_prmS1z*np.log(u) + Delta5_prmS1z)))))
    Deltaucalib_prmS1z = eta*(Delta0_prmS1z + logarg_prmS1z*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmS1z = eta*logarg_prmS1z*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmS1z + u*(2*Delta2_prmS1z + u*(3*Delta3_prmS1z + u*(4*Delta4_prmS1z + u*(5*Delta5l_prmS1z*np.log(u) + 5*Delta5_prmS1z)))))/(logarg + 1)
    Deltaubar_prmS1z = 2*a*a_prmS1z*u**2 + etaKminus1_prmS1z*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmS1z/etaKminus1**3
    Deltaubarprime_prmS1z = -4*a*a_prmS1z*u**3 + 2*etaKminus1_prmS1z*u**2/etaKminus1**2
    Deltau_prmS1z = (Deltaubar*Deltaucalib_prmS1z + Deltaubar_prmS1z*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmS1z = Deltaubar*Deltaucalibprime_prmS1z + Deltaubarprime*Deltaucalib_prmS1z + Deltaubarprime_prmS1z*Deltaucalib + Deltaubar_prmS1z*Deltaucalibprime
    Deltatprime_prmS1z = Deltauprime_prmS1z*r**2 + 2*Deltau_prmS1z*r
    Deltat_prmS1z = Deltau_prmS1z*r**2
    Deltar_prmS1z = Deltat_prmS1z*Dinv
    Deltarprime_prmS1z = Deltatprime_prmS1z*Dinv + Deltat_prmS1z*Dinvprime
    Lambt_prmS1z = (Deltat*a**2*sin2theta_prmS1z + 2*Deltat*a*a_prmS1z*sin2theta + Deltat_prmS1z*a**2*sin2theta - 2*w2*w2_prmS1z)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmS1z = (Deltar*Deltat_prmS1z + Deltar_prmS1z*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmS1z*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmS1z = 4.0*r*w2_prmS1z*np.sqrt(Deltar*Deltat)/w2**3 + (Deltar*Deltatprime_prmS1z + Deltarprime*Deltat_prmS1z + Deltarprime_prmS1z*Deltat + Deltar_prmS1z*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmS1z*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmS1z/2 + Deltar_prmS1z*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmS1z/2 - Deltar_prmS1z*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmS1z = csi_prmS1z*(1 - np.abs(tortoise - 1))
    csi2_prmS1z = csi_prmS1z*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmS1z = csi2_prmS1z*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmS1z = n3*prT_prmS1z*(-1 + 1/csi1) - csi1_prmS1z*n3*prT/csi1**2
    phat2_prmS1z = n2*prT_prmS1z*(-1 + 1/csi1) - csi1_prmS1z*n2*prT/csi1**2
    phat1_prmS1z = n1*prT_prmS1z*(-1 + 1/csi1) - csi1_prmS1z*n1*prT/csi1**2
    pdotxir_prmS1z = r*(phat1*xi1_prmS1z + phat1_prmS1z*xi1 + phat2*xi2_prmS1z + phat2_prmS1z*xi2 + phat3*xi3_prmS1z + phat3_prmS1z*xi3)
    pdotn_prmS1z = n1*phat1_prmS1z + n2*phat2_prmS1z + n3*phat3_prmS1z
    pdotvr_prmS1z = r*(phat1*v1_prmS1z + phat1_prmS1z*v1 + phat2*v2_prmS1z + phat2_prmS1z*v2 + phat3*v3_prmS1z + phat3_prmS1z*v3)
    pphi_prmS1z = pdotxir_prmS1z
    Qcoeff2_prmS1z = -sin2theta_prmS1z/(Sigma*sin2theta**2) - Sigma_prmS1z/(Sigma**2*sin2theta)
    Qcoeff1_prmS1z = -Sigma*sin2theta_prmS1z/(Lambt*sin2theta**2) + Sigma_prmS1z/(Lambt*sin2theta) - Lambt_prmS1z*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmS1z = 2*Deltar*pdotn*pdotn_prmS1z/Sigma - Deltar*Sigma_prmS1z*pdotn**2/Sigma**2 + Deltar_prmS1z*pdotn**2/Sigma
    Q_prmS1z = DrSipn2_prmS1z + 2*Qcoeff1*pdotxir*pdotxir_prmS1z + Qcoeff1_prmS1z*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmS1z + Qcoeff2_prmS1z*pdotvr**2
    Qminus1_prmS1z = Q_prmS1z
    Jtilde_prmS1z = Deltar_prmS1z/(2*np.sqrt(Deltar))
    exp2mu_prmS1z = Sigma_prmS1z
    expmu_prmS1z = exp2mu_prmS1z/(2*np.sqrt(exp2mu))
    Brtilde_prmS1z = (np.sqrt(Deltar)*Deltatprime_prmS1z - 2*Deltat_prmS1z + Deltar_prmS1z*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmS1z/2 - Deltar_prmS1z*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmS1z = Deltat_prmS1z/(2*np.sqrt(Deltat))
    exp2nu_prmS1z = Deltat*Sigma_prmS1z/Lambt - Deltat*Lambt_prmS1z*Sigma/Lambt**2 + Deltat_prmS1z*Sigma/Lambt
    expnu_prmS1z = exp2nu_prmS1z/(2*np.sqrt(exp2nu))
    omega_prmS1z = omegatilde_prmS1z/Lambt - Lambt_prmS1z*omegatilde/Lambt**2
    omegatildeprime_prmS1z = 2*a_prmS1z
    Lambtprime_prmS1z = -Deltatprime*a**2*sin2theta_prmS1z - 2*Deltatprime*a*a_prmS1z*sin2theta - Deltatprime_prmS1z*a**2*sin2theta + 8*a*a_prmS1z*r
    mucostheta_prmS1z = a**2*costheta_prmS1z/Sigma + 2*a*a_prmS1z*costheta/Sigma - Sigma_prmS1z*a**2*costheta/Sigma**2
    nucostheta_prmS1z = a**2*costheta*w2*(-Deltat_prmS1z + w2_prmS1z)/(Lambt*Sigma) + a**2*costheta*w2_prmS1z*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmS1z*w2*(-Deltat + w2)/(Lambt*Sigma) + a*a_prmS1z*costheta*w2*(-2*Deltat + 2*w2)/(Lambt*Sigma) - Sigma_prmS1z*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmS1z*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmS1z = -2*Deltat*a**2*costheta*omegatilde_prmS1z/Lambt**2 - 2*Deltat*a**2*costheta_prmS1z*omegatilde/Lambt**2 - 4*Deltat*a*a_prmS1z*costheta*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmS1z*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmS1z*a**2*costheta*omegatilde/Lambt**2
    mur_prmS1z = -Sigma_prmS1z*r/Sigma**2 + Deltar_prmS1z/(2*Deltar**(3/2))
    nur_prmS1z = -Sigma_prmS1z*r/Sigma**2 + w2*(Deltatprime*w2_prmS1z + Deltatprime_prmS1z*w2 - 4*Deltat_prmS1z*r)/(2*Deltat*Lambt) + w2_prmS1z*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmS1z*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmS1z*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmS1z = (Lambt*omegatildeprime_prmS1z - Lambtprime*omegatilde_prmS1z - Lambtprime_prmS1z*omegatilde + Lambt_prmS1z*omegatildeprime)/Lambt**2 + Lambt_prmS1z*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmS1z = 442.443*chi**2*chi_prmS1z*eta**2 - 1705.953*chi**2*chi_prmS1z*eta + 198.5961*chi**2*chi_prmS1z - 686.626*chi*chi_prmS1z*eta + 2495.29*chi_prmS1z*eta**2
    sigmacoeffTerm3_prmS1z = dSO_prmS1z*eta*u**3
    sigmacoeffTerm2_prmS1z = eta*(eta*r*(-6.125*DrSipn2_prmS1z*u**2 + 1.41666666666667*Qminus1_prmS1z*u**2 + r*(11.25*DrSipn2*DrSipn2_prmS1z*u**2 - 1.625*DrSipn2*Qminus1_prmS1z*u**2 - 1.625*DrSipn2_prmS1z*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmS1z*u**2 - 3.02777777777778*Qminus1_prmS1z*u**2 + r*(0.25*DrSipn2*Qminus1_prmS1z*u**2 + 0.25*DrSipn2_prmS1z*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmS1z*u**2)))
    sigmacoeffTerm1_prmS1z = eta*(-3*DrSipn2_prmS1z + Qminus1_prmS1z/4)
    sigmacoeff_prmS1z = sigmacoeffTerm1_prmS1z + sigmacoeffTerm2_prmS1z + sigmacoeffTerm3_prmS1z
    sigmastarcoeffTerm2_prmS1z = eta*(eta*r*(-324*DrSipn2_prmS1z + 120*Qminus1_prmS1z + r*(720*DrSipn2*DrSipn2_prmS1z + Qminus1*(-126*DrSipn2_prmS1z - 3*Qminus1_prmS1z) + Qminus1_prmS1z*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmS1z + Qminus1*r*(96*DrSipn2_prmS1z - 23*Qminus1_prmS1z) + Qminus1_prmS1z*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmS1z))/(72*r**2)
    sigmastarcoeffTerm1_prmS1z = eta*(-5*DrSipn2_prmS1z/2 + Qminus1_prmS1z/3)
    sigmastarcoeff_prmS1z = sigmastarcoeffTerm1_prmS1z + sigmastarcoeffTerm2_prmS1z
    Deltasigmastar3_prmS1z = sigma3*sigmacoeff_prmS1z + sigma3_prmS1z*sigmacoeff + sigmastar3*sigmastarcoeff_prmS1z + sigmastar3_prmS1z*sigmastarcoeff
    Deltasigmastar2_prmS1z = sigma2*sigmacoeff_prmS1z + sigmastar2*sigmastarcoeff_prmS1z
    Deltasigmastar1_prmS1z = sigma1*sigmacoeff_prmS1z + sigmastar1*sigmastarcoeff_prmS1z
    Sstar3_prmS1z = Deltasigmastar3_prmS1z + sigmastar3_prmS1z
    Sstar2_prmS1z = Deltasigmastar2_prmS1z
    Sstar1_prmS1z = Deltasigmastar1_prmS1z
    S3_prmS1z = Sstar3_prmS1z
    S2_prmS1z = Sstar2_prmS1z
    S1_prmS1z = Sstar1_prmS1z
    Sstardotn_prmS1z = Sstar1_prmS1z*n1 + Sstar2_prmS1z*n2 + Sstar3_prmS1z*n3
    Sdote3_prmS1z = S1*e31_prmS1z + S1_prmS1z*e31 + S2*e32_prmS1z + S2_prmS1z*e32 + S3*e33_prmS1z + S3_prmS1z*e33
    Sdotn_prmS1z = S1_prmS1z*n1 + S2_prmS1z*n2 + S3_prmS1z*n3
    Sdotv_prmS1z = S1*v1_prmS1z + S1_prmS1z*v1 + S2*v2_prmS1z + S2_prmS1z*v2 + S3*v3_prmS1z + S3_prmS1z*v3
    Sdotxi_prmS1z = S1*xi1_prmS1z + S1_prmS1z*xi1 + S2*xi2_prmS1z + S2_prmS1z*xi2 + S3*xi3_prmS1z + S3_prmS1z*xi3
    HdsumTerm2_prmS1z = 6*Sstardotn*Sstardotn_prmS1z
    HdsumTerm1_prmS1z = 2*Sstar1*Sstar1_prmS1z + 2*Sstar2*Sstar2_prmS1z + 2*Sstar3*Sstar3_prmS1z
    Hdsum_prmS1z = HdsumTerm1_prmS1z - HdsumTerm2_prmS1z
    Q4_prmS1z = eta*prT**3*prT_prmS1z*u**2*(32 - 24*eta)
    gammappsum_prmS1z = 2*Deltar*pdotn*pdotn_prmS1z/Sigma - Deltar*Sigma_prmS1z*pdotn**2/Sigma**2 + Deltar_prmS1z*pdotn**2/Sigma - pdotvr**2*sin2theta_prmS1z/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmS1z/(Sigma*sin2theta) - Sigma_prmS1z*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmS1z/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmS1z/(Lambt*sin2theta) + Sigma_prmS1z*pdotxir**2/(Lambt*sin2theta) - Lambt_prmS1z*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmS1z = Q4_prmS1z + gammappsum_prmS1z
    alpha_prmS1z = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmS1z/(2*Lambt) - Deltat*Lambt_prmS1z*Sigma/(2*Lambt**2) + Deltat_prmS1z*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmS1z = omegatilde*pphi_prmS1z/Lambt + omegatilde_prmS1z*pphi/Lambt - Lambt_prmS1z*omegatilde*pphi/Lambt**2
    HssTerm3_prmS1z = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmS1z - Q_prmS1z/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmS1z*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmS1z*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmS1z*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmS1z - Jtilde*Sdotv_prmS1z*pdotn - Jtilde_prmS1z*Sdotv*pdotn + Sdotn*pdotvr_prmS1z + Sdotn_prmS1z*pdotvr) + pdotvr_prmS1z*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmS1z*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmS1z + Btilde*Jtilde*Sdotxi_prmS1z*pdotn + Btilde*Jtilde_prmS1z*Sdotxi*pdotn + Btilde_prmS1z*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmS1z - Sdotn*expmu*expnu_prmS1z*pdotxir - Sdotn*expmu_prmS1z*expnu*pdotxir - Sdotn_prmS1z*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmS1z*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmS1z*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmS1z*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmS1z = omegacostheta*(-Q_prmS1z - Q_prmS1z/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmS1z/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmS1z*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmS1z*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmS1z*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS1z*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmS1z = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmS1z - Jtilde*Sdotv_prmS1z*pdotn - Jtilde_prmS1z*Sdotv*pdotn + Sdotn*pdotvr_prmS1z + Sdotn_prmS1z*pdotvr) + Jtilde*pdotn_prmS1z*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmS1z*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmS1z + Q_prmS1z/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmS1z*(np.sqrt(Q) + Q) + Sdotv_prmS1z*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmS1z*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmS1z*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmS1z - Btilde*Sdotxi*expnu_prmS1z*pdotvr - Btilde*Sdotxi_prmS1z*expnu*pdotvr - Btilde_prmS1z*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmS1z + Sdotv*exp2nu*expmu_prmS1z*pdotxir + Sdotv*exp2nu_prmS1z*expmu*pdotxir + Sdotv_prmS1z*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmS1z*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmS1z*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmS1z = Jtilde*omegar*(-Q_prmS1z - Q_prmS1z/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmS1z/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmS1z/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmS1z*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmS1z*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmS1z*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmS1z*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS1z*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmS1z = Sdote3*omega_prmS1z + Sdote3_prmS1z*omega
    Hss_prmS1z = HssTerm1_prmS1z + HssTerm2*HssTerm2coeff_prmS1z + HssTerm2coeff*HssTerm2_prmS1z + HssTerm3*HssTerm3coeff_prmS1z + HssTerm3coeff*HssTerm3_prmS1z
    HsoTerm2c_prmS1z = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmS1z*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmS1z*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmS1z*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmS1z*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmS1z*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmS1z*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmS1z*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmS1z = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmS1z + Jtilde*Sdotv_prmS1z*nur + Jtilde_prmS1z*Sdotv*nur - Sdotn*nucostheta*xisq_prmS1z - Sdotn*nucostheta_prmS1z*xisq - Sdotn_prmS1z*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmS1z*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmS1z*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmS1z*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmS1z*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmS1z*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmS1z = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmS1z + nur_prmS1z*pdotvr + pdotn*xisq*(mucostheta_prmS1z - nucostheta_prmS1z) + pdotn*xisq_prmS1z*(mucostheta - nucostheta) + pdotn_prmS1z*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmS1z - mucostheta*pdotn_prmS1z*xisq - mucostheta_prmS1z*pdotn*xisq + mur*pdotvr_prmS1z*(np.sqrt(Q) + 1) + mur_prmS1z*pdotvr*(np.sqrt(Q) + 1) + Q_prmS1z*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmS1z*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmS1z*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmS1z*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmS1z*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmS1z = HsoTerm2a_prmS1z + HsoTerm2b_prmS1z - HsoTerm2c_prmS1z
    HsoTerm2coeff_prmS1z = expnu*(-Q_prmS1z - Q_prmS1z/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmS1z/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmS1z/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmS1z*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmS1z*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmS1z = Sdote3*exp2nu*pdotxir*(-Btilde_prmS1z + expmu*expnu_prmS1z + expmu_prmS1z*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmS1z*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmS1z*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmS1z*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmS1z*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmS1z*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmS1z*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmS1z*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmS1z = HsoTerm1_prmS1z + HsoTerm2*HsoTerm2coeff_prmS1z + HsoTerm2coeff*HsoTerm2_prmS1z
    Hd_prmS1z = Hdcoeff*Hdsum_prmS1z
    Hns_prmS1z = np.sqrt(Hnsradicand)*alpha_prmS1z + betapsum_prmS1z + Hnsradicand_prmS1z*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmS1z = Hso_prmS1z + Hss_prmS1z
    dSS_prmS1z = 1585.533*chi**2*chi_prmS1z*eta**2 - 123.0009*chi**2*chi_prmS1z*eta + 2323.56*chi*chi_prmS1z*eta**3 - 652.65*chi*chi_prmS1z*eta**2 + 37.1964*chi_prmS1z*eta
    Heff_prmS1z = -Hd_prmS1z + Hns_prmS1z + Hs_prmS1z + 2*S1z*dSS*eta*u**4 + dSS_prmS1z*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmS1z = Heff_prmS1z*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmS1z

def v4P_compute_ham_S2x_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    sigmastar1_prmS2x = m1/(M**2*m2)
    sigma1_prmS2x = M**(-2)
    Skerr1_prmS2x = sigma1_prmS2x
    Skerrmag_prmS2x = Skerr1*Skerr1_prmS2x/np.sqrt(Skerr1**2 + Skerr2**2 + Skerr3**2)
    Skerrhat3_prmS2x = -Skerr3*Skerrmag_prmS2x/Skerrmag**2
    Skerrhat2_prmS2x = -Skerr2*Skerrmag_prmS2x/Skerrmag**2
    Skerrhat1_prmS2x = -Skerr1*Skerrmag_prmS2x/Skerrmag**2 + Skerr1_prmS2x/Skerrmag
    a_prmS2x = Skerrmag_prmS2x
    S2dotLhat_prmS2x = Lhat1
    S2perp3_prmS2x = -Lhat3*S2dotLhat_prmS2x
    S2perp2_prmS2x = -Lhat2*S2dotLhat_prmS2x
    S2perp1_prmS2x = -Lhat1*S2dotLhat_prmS2x + 1
    Sperp3_prmS2x = S2perp3_prmS2x
    Sperp2_prmS2x = S2perp2_prmS2x
    Sperp1_prmS2x = S2perp1_prmS2x
    condition_e3prov_lhs_prmS2x = a_prmS2x
    e3prov_gt_bound_prmS2x = -condition_e3prov_lhs_prmS2x*(condition_e3prov_lhs/2 - condition_e3prov_rhs/2 + np.abs(condition_e3prov_lhs - condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS2x*np.sign(condition_e3prov_lhs - condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS2x/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov_leq_bound_prmS2x = -condition_e3prov_lhs_prmS2x*(-TINYDOUBLE/2 + condition_e3prov_lhs/2 - condition_e3prov_rhs/2 - np.abs(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS2x*np.sign(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS2x/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov1_prmS2x = Skerrhat1*e3prov_gt_bound_prmS2x + Skerrhat1_prmS2x*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2x
    e3prov2_prmS2x = Skerrhat2*e3prov_gt_bound_prmS2x + Skerrhat2_prmS2x*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2x
    e3prov3_prmS2x = Skerrhat3*e3prov_gt_bound_prmS2x + Skerrhat3_prmS2x*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2x
    lambdahat_dot_e3prov_prmS2x = e3prov1_prmS2x*lambdahat1 + e3prov2_prmS2x*lambdahat2 + e3prov3_prmS2x*lambdahat3
    lambdahat_cross_e3prov3_prmS2x = -e3prov1_prmS2x*lambdahat2 + e3prov2_prmS2x*lambdahat1
    lambdahat_cross_e3prov2_prmS2x = e3prov1_prmS2x*lambdahat3 - e3prov3_prmS2x*lambdahat1
    lambdahat_cross_e3prov1_prmS2x = -e3prov2_prmS2x*lambdahat3 + e3prov3_prmS2x*lambdahat2
    e3prov_dot_n_prmS2x = e3prov1_prmS2x*n1 + e3prov2_prmS2x*n2 + e3prov3_prmS2x*n3
    condition_e3_lhs_prmS2x = -e3prov_dot_n_prmS2x*np.sign(e3prov_dot_n)
    e3_gt_bound_prmS2x = -condition_e3_lhs_prmS2x*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS2x*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmS2x/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmS2x = -condition_e3_lhs_prmS2x*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS2x*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmS2x/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmS2x = e3_gt_bound*e3prov1_prmS2x + e3_gt_bound_prmS2x*e3prov1 + e3_leq_bound*(cos_0_1_deg*e3prov1_prmS2x + lambdahat1*lambdahat_dot_e3prov_prmS2x*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmS2x*sin_0_1_deg) + e3_leq_bound_prmS2x*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmS2x = e3_gt_bound*e3prov2_prmS2x + e3_gt_bound_prmS2x*e3prov2 + e3_leq_bound*(cos_0_1_deg*e3prov2_prmS2x + lambdahat2*lambdahat_dot_e3prov_prmS2x*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmS2x*sin_0_1_deg) + e3_leq_bound_prmS2x*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmS2x = e3_gt_bound*e3prov3_prmS2x + e3_gt_bound_prmS2x*e3prov3 + e3_leq_bound*(cos_0_1_deg*e3prov3_prmS2x + lambdahat3*lambdahat_dot_e3prov_prmS2x*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmS2x*sin_0_1_deg) + e3_leq_bound_prmS2x*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmS2x = e31_prmS2x*n2 - e32_prmS2x*n1
    xi2_prmS2x = -e31_prmS2x*n3 + e33_prmS2x*n1
    xi1_prmS2x = e32_prmS2x*n3 - e33_prmS2x*n2
    v3_prmS2x = n1*xi2_prmS2x - n2*xi1_prmS2x
    v2_prmS2x = -n1*xi3_prmS2x + n3*xi1_prmS2x
    v1_prmS2x = n2*xi3_prmS2x - n3*xi2_prmS2x
    costheta_prmS2x = e31_prmS2x*n1 + e32_prmS2x*n2 + e33_prmS2x*n3
    sin2theta_prmS2x = -2*costheta*costheta_prmS2x
    xisq_prmS2x = sin2theta_prmS2x
    w2_prmS2x = 2*a*a_prmS2x
    Sigma_prmS2x = 2*a**2*costheta*costheta_prmS2x + 2*a*a_prmS2x*costheta**2
    omegatilde_prmS2x = 2*a_prmS2x*r
    chi_prmS2x = Lhat1*Skerr1_prmS2x/(1 - 2*eta) + (Skerr1*Sperp1_prmS2x/2 + Skerr1_prmS2x*Sperp1/2 + Skerr2*Sperp2_prmS2x/2 + Skerr3*Sperp3_prmS2x/2)/(Skerrmag*(1.0 - 2.0*eta)) + Skerrmag_prmS2x*(-Skerr1*Sperp1/2 - Skerr2*Sperp2/2 - Skerr3*Sperp3/2)/(Skerrmag**2*(1.0 - 2.0*eta))
    K_prmS2x = -177.4974*chi**2*chi_prmS2x*eta**3 - 1.280874*chi**2*chi_prmS2x*eta + 4.30977*chi**2*chi_prmS2x + 62.3492*chi*chi_prmS2x*eta**3 + 12.32932*chi*chi_prmS2x*eta**2 - 2.76172*chi*chi_prmS2x - 27.5201*chi_prmS2x*eta**3 + 17.3736*chi_prmS2x*eta**2 + 2.26831*chi_prmS2x*eta - 1.62045*chi_prmS2x
    etaKminus1_prmS2x = K_prmS2x*eta
    Delta0_prmS2x = K*K_prmS2x*eta + K_prmS2x*(K*eta - 2)
    Delta1_prmS2x = etaKminus1*(-2*Delta0_prmS2x - 2*K_prmS2x) + etaKminus1_prmS2x*(-2*Delta0 - 2*K)
    Delta2_prmS2x = -2*Delta0*a**2*etaKminus1*etaKminus1_prmS2x - 2*Delta0*a*a_prmS2x*etaKminus1**2 - Delta0_prmS2x*a**2*etaKminus1**2 + Delta1*(Delta1_prmS2x/2 - 2*etaKminus1_prmS2x) + Delta1_prmS2x*(Delta1/2 - 2*etaKminus1)
    Delta3_prmS2x = -Delta1**2*Delta1_prmS2x + Delta1**2*etaKminus1_prmS2x + 2*Delta1*Delta1_prmS2x*etaKminus1 + Delta1*Delta2_prmS2x - 2*Delta1*a**2*etaKminus1*etaKminus1_prmS2x - 2*Delta1*a*a_prmS2x*etaKminus1**2 + Delta1_prmS2x*Delta2 - Delta1_prmS2x*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmS2x + 2*etaKminus1_prmS2x) + etaKminus1_prmS2x*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmS2x = Delta1**3*Delta1_prmS2x - 2*Delta1**3*etaKminus1_prmS2x/3 - 2*Delta1**2*Delta1_prmS2x*etaKminus1 - Delta1**2*Delta2_prmS2x - 2*Delta1*Delta1_prmS2x*Delta2 + Delta1*(2*Delta2*etaKminus1_prmS2x + 2*Delta2_prmS2x*etaKminus1 + Delta3_prmS2x) + Delta1_prmS2x*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmS2x - 2*Delta3*etaKminus1_prmS2x - 2*Delta3_prmS2x*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmS2x - 2*Delta2_prmS2x)/2 + a**2*etaKminus1*etaKminus1_prmS2x*(Delta1**2 - 2*Delta2) + a*a_prmS2x*etaKminus1**2*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmS2x*(376 - 123*np.pi**2/8)/6
    Delta5_prmS2x = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmS2x - 3*Delta1*Delta2_prmS2x - 3*Delta1_prmS2x*Delta2 + 3*Delta3_prmS2x)/3 + a*a_prmS2x*(-2*Delta1**3 + 6*Delta1*Delta2 - 6*Delta3)/3 + (4*Delta1**3*Delta1_prmS2x - 4*Delta1**2*Delta2_prmS2x - 8*Delta1*Delta1_prmS2x*Delta2 + 4*Delta1*Delta3_prmS2x + 4*Delta1_prmS2x*Delta3 + 4*Delta2*Delta2_prmS2x - 4*Delta4_prmS2x)/(2*etaKminus1) - etaKminus1_prmS2x*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmS2x - 5*Delta1**3*Delta2_prmS2x - 15*Delta1**2*Delta1_prmS2x*Delta2 + 5*Delta1**2*Delta3_prmS2x + 10*Delta1*Delta1_prmS2x*Delta3 + 10*Delta1*Delta2*Delta2_prmS2x - 5*Delta1*Delta4_prmS2x + 5*Delta1_prmS2x*Delta2**2 - 5*Delta1_prmS2x*Delta4 - 5*Delta2*Delta3_prmS2x - 5*Delta2_prmS2x*Delta3)/(5*etaKminus1**2) + etaKminus1_prmS2x*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmS2x*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmS2x = 128*etaKminus1*etaKminus1_prmS2x/5
    logarg_prmS2x = u*(Delta1_prmS2x + u*(Delta2_prmS2x + u*(Delta3_prmS2x + u*(Delta4_prmS2x + u*(Delta5l_prmS2x*np.log(u) + Delta5_prmS2x)))))
    Deltaucalib_prmS2x = eta*(Delta0_prmS2x + logarg_prmS2x*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmS2x = eta*logarg_prmS2x*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmS2x + u*(2*Delta2_prmS2x + u*(3*Delta3_prmS2x + u*(4*Delta4_prmS2x + u*(5*Delta5l_prmS2x*np.log(u) + 5*Delta5_prmS2x)))))/(logarg + 1)
    Deltaubar_prmS2x = 2*a*a_prmS2x*u**2 + etaKminus1_prmS2x*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmS2x/etaKminus1**3
    Deltaubarprime_prmS2x = -4*a*a_prmS2x*u**3 + 2*etaKminus1_prmS2x*u**2/etaKminus1**2
    Deltau_prmS2x = (Deltaubar*Deltaucalib_prmS2x + Deltaubar_prmS2x*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmS2x = Deltaubar*Deltaucalibprime_prmS2x + Deltaubarprime*Deltaucalib_prmS2x + Deltaubarprime_prmS2x*Deltaucalib + Deltaubar_prmS2x*Deltaucalibprime
    Deltatprime_prmS2x = Deltauprime_prmS2x*r**2 + 2*Deltau_prmS2x*r
    Deltat_prmS2x = Deltau_prmS2x*r**2
    Deltar_prmS2x = Deltat_prmS2x*Dinv
    Deltarprime_prmS2x = Deltatprime_prmS2x*Dinv + Deltat_prmS2x*Dinvprime
    Lambt_prmS2x = (Deltat*a**2*sin2theta_prmS2x + 2*Deltat*a*a_prmS2x*sin2theta + Deltat_prmS2x*a**2*sin2theta - 2*w2*w2_prmS2x)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmS2x = (Deltar*Deltat_prmS2x + Deltar_prmS2x*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmS2x*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmS2x = 4.0*r*w2_prmS2x*np.sqrt(Deltar*Deltat)/w2**3 + (Deltar*Deltatprime_prmS2x + Deltarprime*Deltat_prmS2x + Deltarprime_prmS2x*Deltat + Deltar_prmS2x*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmS2x*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmS2x/2 + Deltar_prmS2x*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmS2x/2 - Deltar_prmS2x*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmS2x = csi_prmS2x*(1 - np.abs(tortoise - 1))
    csi2_prmS2x = csi_prmS2x*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmS2x = csi2_prmS2x*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmS2x = n3*prT_prmS2x*(-1 + 1/csi1) - csi1_prmS2x*n3*prT/csi1**2
    phat2_prmS2x = n2*prT_prmS2x*(-1 + 1/csi1) - csi1_prmS2x*n2*prT/csi1**2
    phat1_prmS2x = n1*prT_prmS2x*(-1 + 1/csi1) - csi1_prmS2x*n1*prT/csi1**2
    pdotxir_prmS2x = r*(phat1*xi1_prmS2x + phat1_prmS2x*xi1 + phat2*xi2_prmS2x + phat2_prmS2x*xi2 + phat3*xi3_prmS2x + phat3_prmS2x*xi3)
    pdotn_prmS2x = n1*phat1_prmS2x + n2*phat2_prmS2x + n3*phat3_prmS2x
    pdotvr_prmS2x = r*(phat1*v1_prmS2x + phat1_prmS2x*v1 + phat2*v2_prmS2x + phat2_prmS2x*v2 + phat3*v3_prmS2x + phat3_prmS2x*v3)
    pphi_prmS2x = pdotxir_prmS2x
    Qcoeff2_prmS2x = -sin2theta_prmS2x/(Sigma*sin2theta**2) - Sigma_prmS2x/(Sigma**2*sin2theta)
    Qcoeff1_prmS2x = -Sigma*sin2theta_prmS2x/(Lambt*sin2theta**2) + Sigma_prmS2x/(Lambt*sin2theta) - Lambt_prmS2x*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmS2x = 2*Deltar*pdotn*pdotn_prmS2x/Sigma - Deltar*Sigma_prmS2x*pdotn**2/Sigma**2 + Deltar_prmS2x*pdotn**2/Sigma
    Q_prmS2x = DrSipn2_prmS2x + 2*Qcoeff1*pdotxir*pdotxir_prmS2x + Qcoeff1_prmS2x*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmS2x + Qcoeff2_prmS2x*pdotvr**2
    Qminus1_prmS2x = Q_prmS2x
    Jtilde_prmS2x = Deltar_prmS2x/(2*np.sqrt(Deltar))
    exp2mu_prmS2x = Sigma_prmS2x
    expmu_prmS2x = exp2mu_prmS2x/(2*np.sqrt(exp2mu))
    Brtilde_prmS2x = (np.sqrt(Deltar)*Deltatprime_prmS2x - 2*Deltat_prmS2x + Deltar_prmS2x*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmS2x/2 - Deltar_prmS2x*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmS2x = Deltat_prmS2x/(2*np.sqrt(Deltat))
    exp2nu_prmS2x = Deltat*Sigma_prmS2x/Lambt - Deltat*Lambt_prmS2x*Sigma/Lambt**2 + Deltat_prmS2x*Sigma/Lambt
    expnu_prmS2x = exp2nu_prmS2x/(2*np.sqrt(exp2nu))
    omega_prmS2x = omegatilde_prmS2x/Lambt - Lambt_prmS2x*omegatilde/Lambt**2
    omegatildeprime_prmS2x = 2*a_prmS2x
    Lambtprime_prmS2x = -Deltatprime*a**2*sin2theta_prmS2x - 2*Deltatprime*a*a_prmS2x*sin2theta - Deltatprime_prmS2x*a**2*sin2theta + 8*a*a_prmS2x*r
    mucostheta_prmS2x = a**2*costheta_prmS2x/Sigma + 2*a*a_prmS2x*costheta/Sigma - Sigma_prmS2x*a**2*costheta/Sigma**2
    nucostheta_prmS2x = a**2*costheta*w2*(-Deltat_prmS2x + w2_prmS2x)/(Lambt*Sigma) + a**2*costheta*w2_prmS2x*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmS2x*w2*(-Deltat + w2)/(Lambt*Sigma) + a*a_prmS2x*costheta*w2*(-2*Deltat + 2*w2)/(Lambt*Sigma) - Sigma_prmS2x*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmS2x*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmS2x = -2*Deltat*a**2*costheta*omegatilde_prmS2x/Lambt**2 - 2*Deltat*a**2*costheta_prmS2x*omegatilde/Lambt**2 - 4*Deltat*a*a_prmS2x*costheta*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmS2x*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmS2x*a**2*costheta*omegatilde/Lambt**2
    mur_prmS2x = -Sigma_prmS2x*r/Sigma**2 + Deltar_prmS2x/(2*Deltar**(3/2))
    nur_prmS2x = -Sigma_prmS2x*r/Sigma**2 + w2*(Deltatprime*w2_prmS2x + Deltatprime_prmS2x*w2 - 4*Deltat_prmS2x*r)/(2*Deltat*Lambt) + w2_prmS2x*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmS2x*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmS2x*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmS2x = (Lambt*omegatildeprime_prmS2x - Lambtprime*omegatilde_prmS2x - Lambtprime_prmS2x*omegatilde + Lambt_prmS2x*omegatildeprime)/Lambt**2 + Lambt_prmS2x*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmS2x = 442.443*chi**2*chi_prmS2x*eta**2 - 1705.953*chi**2*chi_prmS2x*eta + 198.5961*chi**2*chi_prmS2x - 686.626*chi*chi_prmS2x*eta + 2495.29*chi_prmS2x*eta**2
    sigmacoeffTerm3_prmS2x = dSO_prmS2x*eta*u**3
    sigmacoeffTerm2_prmS2x = eta*(eta*r*(-6.125*DrSipn2_prmS2x*u**2 + 1.41666666666667*Qminus1_prmS2x*u**2 + r*(11.25*DrSipn2*DrSipn2_prmS2x*u**2 - 1.625*DrSipn2*Qminus1_prmS2x*u**2 - 1.625*DrSipn2_prmS2x*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmS2x*u**2 - 3.02777777777778*Qminus1_prmS2x*u**2 + r*(0.25*DrSipn2*Qminus1_prmS2x*u**2 + 0.25*DrSipn2_prmS2x*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmS2x*u**2)))
    sigmacoeffTerm1_prmS2x = eta*(-3*DrSipn2_prmS2x + Qminus1_prmS2x/4)
    sigmacoeff_prmS2x = sigmacoeffTerm1_prmS2x + sigmacoeffTerm2_prmS2x + sigmacoeffTerm3_prmS2x
    sigmastarcoeffTerm2_prmS2x = eta*(eta*r*(-324*DrSipn2_prmS2x + 120*Qminus1_prmS2x + r*(720*DrSipn2*DrSipn2_prmS2x + Qminus1*(-126*DrSipn2_prmS2x - 3*Qminus1_prmS2x) + Qminus1_prmS2x*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmS2x + Qminus1*r*(96*DrSipn2_prmS2x - 23*Qminus1_prmS2x) + Qminus1_prmS2x*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmS2x))/(72*r**2)
    sigmastarcoeffTerm1_prmS2x = eta*(-5*DrSipn2_prmS2x/2 + Qminus1_prmS2x/3)
    sigmastarcoeff_prmS2x = sigmastarcoeffTerm1_prmS2x + sigmastarcoeffTerm2_prmS2x
    Deltasigmastar3_prmS2x = sigma3*sigmacoeff_prmS2x + sigmastar3*sigmastarcoeff_prmS2x
    Deltasigmastar2_prmS2x = sigma2*sigmacoeff_prmS2x + sigmastar2*sigmastarcoeff_prmS2x
    Deltasigmastar1_prmS2x = sigma1*sigmacoeff_prmS2x + sigma1_prmS2x*sigmacoeff + sigmastar1*sigmastarcoeff_prmS2x + sigmastar1_prmS2x*sigmastarcoeff
    Sstar3_prmS2x = Deltasigmastar3_prmS2x
    Sstar2_prmS2x = Deltasigmastar2_prmS2x
    Sstar1_prmS2x = Deltasigmastar1_prmS2x + sigmastar1_prmS2x
    S3_prmS2x = Sstar3_prmS2x
    S2_prmS2x = Sstar2_prmS2x
    S1_prmS2x = Sstar1_prmS2x
    Sstardotn_prmS2x = Sstar1_prmS2x*n1 + Sstar2_prmS2x*n2 + Sstar3_prmS2x*n3
    Sdote3_prmS2x = S1*e31_prmS2x + S1_prmS2x*e31 + S2*e32_prmS2x + S2_prmS2x*e32 + S3*e33_prmS2x + S3_prmS2x*e33
    Sdotn_prmS2x = S1_prmS2x*n1 + S2_prmS2x*n2 + S3_prmS2x*n3
    Sdotv_prmS2x = S1*v1_prmS2x + S1_prmS2x*v1 + S2*v2_prmS2x + S2_prmS2x*v2 + S3*v3_prmS2x + S3_prmS2x*v3
    Sdotxi_prmS2x = S1*xi1_prmS2x + S1_prmS2x*xi1 + S2*xi2_prmS2x + S2_prmS2x*xi2 + S3*xi3_prmS2x + S3_prmS2x*xi3
    HdsumTerm2_prmS2x = 6*Sstardotn*Sstardotn_prmS2x
    HdsumTerm1_prmS2x = 2*Sstar1*Sstar1_prmS2x + 2*Sstar2*Sstar2_prmS2x + 2*Sstar3*Sstar3_prmS2x
    Hdsum_prmS2x = HdsumTerm1_prmS2x - HdsumTerm2_prmS2x
    Q4_prmS2x = eta*prT**3*prT_prmS2x*u**2*(32 - 24*eta)
    gammappsum_prmS2x = 2*Deltar*pdotn*pdotn_prmS2x/Sigma - Deltar*Sigma_prmS2x*pdotn**2/Sigma**2 + Deltar_prmS2x*pdotn**2/Sigma - pdotvr**2*sin2theta_prmS2x/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmS2x/(Sigma*sin2theta) - Sigma_prmS2x*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmS2x/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmS2x/(Lambt*sin2theta) + Sigma_prmS2x*pdotxir**2/(Lambt*sin2theta) - Lambt_prmS2x*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmS2x = Q4_prmS2x + gammappsum_prmS2x
    alpha_prmS2x = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmS2x/(2*Lambt) - Deltat*Lambt_prmS2x*Sigma/(2*Lambt**2) + Deltat_prmS2x*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmS2x = omegatilde*pphi_prmS2x/Lambt + omegatilde_prmS2x*pphi/Lambt - Lambt_prmS2x*omegatilde*pphi/Lambt**2
    HssTerm3_prmS2x = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmS2x - Q_prmS2x/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmS2x*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmS2x*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmS2x*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmS2x - Jtilde*Sdotv_prmS2x*pdotn - Jtilde_prmS2x*Sdotv*pdotn + Sdotn*pdotvr_prmS2x + Sdotn_prmS2x*pdotvr) + pdotvr_prmS2x*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmS2x*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmS2x + Btilde*Jtilde*Sdotxi_prmS2x*pdotn + Btilde*Jtilde_prmS2x*Sdotxi*pdotn + Btilde_prmS2x*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmS2x - Sdotn*expmu*expnu_prmS2x*pdotxir - Sdotn*expmu_prmS2x*expnu*pdotxir - Sdotn_prmS2x*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmS2x*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmS2x*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmS2x*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmS2x = omegacostheta*(-Q_prmS2x - Q_prmS2x/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmS2x/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmS2x*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmS2x*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmS2x*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS2x*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmS2x = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmS2x - Jtilde*Sdotv_prmS2x*pdotn - Jtilde_prmS2x*Sdotv*pdotn + Sdotn*pdotvr_prmS2x + Sdotn_prmS2x*pdotvr) + Jtilde*pdotn_prmS2x*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmS2x*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmS2x + Q_prmS2x/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmS2x*(np.sqrt(Q) + Q) + Sdotv_prmS2x*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmS2x*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmS2x*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmS2x - Btilde*Sdotxi*expnu_prmS2x*pdotvr - Btilde*Sdotxi_prmS2x*expnu*pdotvr - Btilde_prmS2x*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmS2x + Sdotv*exp2nu*expmu_prmS2x*pdotxir + Sdotv*exp2nu_prmS2x*expmu*pdotxir + Sdotv_prmS2x*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmS2x*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmS2x*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmS2x = Jtilde*omegar*(-Q_prmS2x - Q_prmS2x/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmS2x/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmS2x/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmS2x*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmS2x*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmS2x*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmS2x*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS2x*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmS2x = Sdote3*omega_prmS2x + Sdote3_prmS2x*omega
    Hss_prmS2x = HssTerm1_prmS2x + HssTerm2*HssTerm2coeff_prmS2x + HssTerm2coeff*HssTerm2_prmS2x + HssTerm3*HssTerm3coeff_prmS2x + HssTerm3coeff*HssTerm3_prmS2x
    HsoTerm2c_prmS2x = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmS2x*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmS2x*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmS2x*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmS2x*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmS2x*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmS2x*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmS2x*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmS2x = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmS2x + Jtilde*Sdotv_prmS2x*nur + Jtilde_prmS2x*Sdotv*nur - Sdotn*nucostheta*xisq_prmS2x - Sdotn*nucostheta_prmS2x*xisq - Sdotn_prmS2x*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmS2x*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmS2x*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmS2x*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmS2x*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmS2x*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmS2x = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmS2x + nur_prmS2x*pdotvr + pdotn*xisq*(mucostheta_prmS2x - nucostheta_prmS2x) + pdotn*xisq_prmS2x*(mucostheta - nucostheta) + pdotn_prmS2x*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmS2x - mucostheta*pdotn_prmS2x*xisq - mucostheta_prmS2x*pdotn*xisq + mur*pdotvr_prmS2x*(np.sqrt(Q) + 1) + mur_prmS2x*pdotvr*(np.sqrt(Q) + 1) + Q_prmS2x*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmS2x*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmS2x*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmS2x*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmS2x*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmS2x = HsoTerm2a_prmS2x + HsoTerm2b_prmS2x - HsoTerm2c_prmS2x
    HsoTerm2coeff_prmS2x = expnu*(-Q_prmS2x - Q_prmS2x/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmS2x/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmS2x/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmS2x*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmS2x*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmS2x = Sdote3*exp2nu*pdotxir*(-Btilde_prmS2x + expmu*expnu_prmS2x + expmu_prmS2x*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmS2x*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmS2x*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmS2x*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmS2x*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmS2x*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmS2x*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmS2x*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmS2x = HsoTerm1_prmS2x + HsoTerm2*HsoTerm2coeff_prmS2x + HsoTerm2coeff*HsoTerm2_prmS2x
    Hd_prmS2x = Hdcoeff*Hdsum_prmS2x
    Hns_prmS2x = np.sqrt(Hnsradicand)*alpha_prmS2x + betapsum_prmS2x + Hnsradicand_prmS2x*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmS2x = Hso_prmS2x + Hss_prmS2x
    dSS_prmS2x = 1585.533*chi**2*chi_prmS2x*eta**2 - 123.0009*chi**2*chi_prmS2x*eta + 2323.56*chi*chi_prmS2x*eta**3 - 652.65*chi*chi_prmS2x*eta**2 + 37.1964*chi_prmS2x*eta
    Heff_prmS2x = -Hd_prmS2x + Hns_prmS2x + Hs_prmS2x + 2*S2x*dSS*eta*u**4 + dSS_prmS2x*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmS2x = Heff_prmS2x*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmS2x

def v4P_compute_ham_S2y_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    sigmastar2_prmS2y = m1/(M**2*m2)
    sigma2_prmS2y = M**(-2)
    Skerr2_prmS2y = sigma2_prmS2y
    Skerrmag_prmS2y = Skerr2*Skerr2_prmS2y/np.sqrt(Skerr1**2 + Skerr2**2 + Skerr3**2)
    Skerrhat3_prmS2y = -Skerr3*Skerrmag_prmS2y/Skerrmag**2
    Skerrhat2_prmS2y = -Skerr2*Skerrmag_prmS2y/Skerrmag**2 + Skerr2_prmS2y/Skerrmag
    Skerrhat1_prmS2y = -Skerr1*Skerrmag_prmS2y/Skerrmag**2
    a_prmS2y = Skerrmag_prmS2y
    S2dotLhat_prmS2y = Lhat2
    S2perp3_prmS2y = -Lhat3*S2dotLhat_prmS2y
    S2perp2_prmS2y = -Lhat2*S2dotLhat_prmS2y + 1
    S2perp1_prmS2y = -Lhat1*S2dotLhat_prmS2y
    Sperp3_prmS2y = S2perp3_prmS2y
    Sperp2_prmS2y = S2perp2_prmS2y
    Sperp1_prmS2y = S2perp1_prmS2y
    condition_e3prov_lhs_prmS2y = a_prmS2y
    e3prov_gt_bound_prmS2y = -condition_e3prov_lhs_prmS2y*(condition_e3prov_lhs/2 - condition_e3prov_rhs/2 + np.abs(condition_e3prov_lhs - condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS2y*np.sign(condition_e3prov_lhs - condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS2y/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov_leq_bound_prmS2y = -condition_e3prov_lhs_prmS2y*(-TINYDOUBLE/2 + condition_e3prov_lhs/2 - condition_e3prov_rhs/2 - np.abs(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS2y*np.sign(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS2y/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov1_prmS2y = Skerrhat1*e3prov_gt_bound_prmS2y + Skerrhat1_prmS2y*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2y
    e3prov2_prmS2y = Skerrhat2*e3prov_gt_bound_prmS2y + Skerrhat2_prmS2y*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2y
    e3prov3_prmS2y = Skerrhat3*e3prov_gt_bound_prmS2y + Skerrhat3_prmS2y*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2y
    lambdahat_dot_e3prov_prmS2y = e3prov1_prmS2y*lambdahat1 + e3prov2_prmS2y*lambdahat2 + e3prov3_prmS2y*lambdahat3
    lambdahat_cross_e3prov3_prmS2y = -e3prov1_prmS2y*lambdahat2 + e3prov2_prmS2y*lambdahat1
    lambdahat_cross_e3prov2_prmS2y = e3prov1_prmS2y*lambdahat3 - e3prov3_prmS2y*lambdahat1
    lambdahat_cross_e3prov1_prmS2y = -e3prov2_prmS2y*lambdahat3 + e3prov3_prmS2y*lambdahat2
    e3prov_dot_n_prmS2y = e3prov1_prmS2y*n1 + e3prov2_prmS2y*n2 + e3prov3_prmS2y*n3
    condition_e3_lhs_prmS2y = -e3prov_dot_n_prmS2y*np.sign(e3prov_dot_n)
    e3_gt_bound_prmS2y = -condition_e3_lhs_prmS2y*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS2y*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmS2y/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmS2y = -condition_e3_lhs_prmS2y*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS2y*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmS2y/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmS2y = e3_gt_bound*e3prov1_prmS2y + e3_gt_bound_prmS2y*e3prov1 + e3_leq_bound*(cos_0_1_deg*e3prov1_prmS2y + lambdahat1*lambdahat_dot_e3prov_prmS2y*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmS2y*sin_0_1_deg) + e3_leq_bound_prmS2y*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmS2y = e3_gt_bound*e3prov2_prmS2y + e3_gt_bound_prmS2y*e3prov2 + e3_leq_bound*(cos_0_1_deg*e3prov2_prmS2y + lambdahat2*lambdahat_dot_e3prov_prmS2y*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmS2y*sin_0_1_deg) + e3_leq_bound_prmS2y*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmS2y = e3_gt_bound*e3prov3_prmS2y + e3_gt_bound_prmS2y*e3prov3 + e3_leq_bound*(cos_0_1_deg*e3prov3_prmS2y + lambdahat3*lambdahat_dot_e3prov_prmS2y*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmS2y*sin_0_1_deg) + e3_leq_bound_prmS2y*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmS2y = e31_prmS2y*n2 - e32_prmS2y*n1
    xi2_prmS2y = -e31_prmS2y*n3 + e33_prmS2y*n1
    xi1_prmS2y = e32_prmS2y*n3 - e33_prmS2y*n2
    v3_prmS2y = n1*xi2_prmS2y - n2*xi1_prmS2y
    v2_prmS2y = -n1*xi3_prmS2y + n3*xi1_prmS2y
    v1_prmS2y = n2*xi3_prmS2y - n3*xi2_prmS2y
    costheta_prmS2y = e31_prmS2y*n1 + e32_prmS2y*n2 + e33_prmS2y*n3
    sin2theta_prmS2y = -2*costheta*costheta_prmS2y
    xisq_prmS2y = sin2theta_prmS2y
    w2_prmS2y = 2*a*a_prmS2y
    Sigma_prmS2y = 2*a**2*costheta*costheta_prmS2y + 2*a*a_prmS2y*costheta**2
    omegatilde_prmS2y = 2*a_prmS2y*r
    chi_prmS2y = Lhat2*Skerr2_prmS2y/(1 - 2*eta) + (Skerr1*Sperp1_prmS2y/2 + Skerr2*Sperp2_prmS2y/2 + Skerr2_prmS2y*Sperp2/2 + Skerr3*Sperp3_prmS2y/2)/(Skerrmag*(1.0 - 2.0*eta)) + Skerrmag_prmS2y*(-Skerr1*Sperp1/2 - Skerr2*Sperp2/2 - Skerr3*Sperp3/2)/(Skerrmag**2*(1.0 - 2.0*eta))
    K_prmS2y = -177.4974*chi**2*chi_prmS2y*eta**3 - 1.280874*chi**2*chi_prmS2y*eta + 4.30977*chi**2*chi_prmS2y + 62.3492*chi*chi_prmS2y*eta**3 + 12.32932*chi*chi_prmS2y*eta**2 - 2.76172*chi*chi_prmS2y - 27.5201*chi_prmS2y*eta**3 + 17.3736*chi_prmS2y*eta**2 + 2.26831*chi_prmS2y*eta - 1.62045*chi_prmS2y
    etaKminus1_prmS2y = K_prmS2y*eta
    Delta0_prmS2y = K*K_prmS2y*eta + K_prmS2y*(K*eta - 2)
    Delta1_prmS2y = etaKminus1*(-2*Delta0_prmS2y - 2*K_prmS2y) + etaKminus1_prmS2y*(-2*Delta0 - 2*K)
    Delta2_prmS2y = -2*Delta0*a**2*etaKminus1*etaKminus1_prmS2y - 2*Delta0*a*a_prmS2y*etaKminus1**2 - Delta0_prmS2y*a**2*etaKminus1**2 + Delta1*(Delta1_prmS2y/2 - 2*etaKminus1_prmS2y) + Delta1_prmS2y*(Delta1/2 - 2*etaKminus1)
    Delta3_prmS2y = -Delta1**2*Delta1_prmS2y + Delta1**2*etaKminus1_prmS2y + 2*Delta1*Delta1_prmS2y*etaKminus1 + Delta1*Delta2_prmS2y - 2*Delta1*a**2*etaKminus1*etaKminus1_prmS2y - 2*Delta1*a*a_prmS2y*etaKminus1**2 + Delta1_prmS2y*Delta2 - Delta1_prmS2y*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmS2y + 2*etaKminus1_prmS2y) + etaKminus1_prmS2y*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmS2y = Delta1**3*Delta1_prmS2y - 2*Delta1**3*etaKminus1_prmS2y/3 - 2*Delta1**2*Delta1_prmS2y*etaKminus1 - Delta1**2*Delta2_prmS2y - 2*Delta1*Delta1_prmS2y*Delta2 + Delta1*(2*Delta2*etaKminus1_prmS2y + 2*Delta2_prmS2y*etaKminus1 + Delta3_prmS2y) + Delta1_prmS2y*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmS2y - 2*Delta3*etaKminus1_prmS2y - 2*Delta3_prmS2y*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmS2y - 2*Delta2_prmS2y)/2 + a**2*etaKminus1*etaKminus1_prmS2y*(Delta1**2 - 2*Delta2) + a*a_prmS2y*etaKminus1**2*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmS2y*(376 - 123*np.pi**2/8)/6
    Delta5_prmS2y = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmS2y - 3*Delta1*Delta2_prmS2y - 3*Delta1_prmS2y*Delta2 + 3*Delta3_prmS2y)/3 + a*a_prmS2y*(-2*Delta1**3 + 6*Delta1*Delta2 - 6*Delta3)/3 + (4*Delta1**3*Delta1_prmS2y - 4*Delta1**2*Delta2_prmS2y - 8*Delta1*Delta1_prmS2y*Delta2 + 4*Delta1*Delta3_prmS2y + 4*Delta1_prmS2y*Delta3 + 4*Delta2*Delta2_prmS2y - 4*Delta4_prmS2y)/(2*etaKminus1) - etaKminus1_prmS2y*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmS2y - 5*Delta1**3*Delta2_prmS2y - 15*Delta1**2*Delta1_prmS2y*Delta2 + 5*Delta1**2*Delta3_prmS2y + 10*Delta1*Delta1_prmS2y*Delta3 + 10*Delta1*Delta2*Delta2_prmS2y - 5*Delta1*Delta4_prmS2y + 5*Delta1_prmS2y*Delta2**2 - 5*Delta1_prmS2y*Delta4 - 5*Delta2*Delta3_prmS2y - 5*Delta2_prmS2y*Delta3)/(5*etaKminus1**2) + etaKminus1_prmS2y*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmS2y*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmS2y = 128*etaKminus1*etaKminus1_prmS2y/5
    logarg_prmS2y = u*(Delta1_prmS2y + u*(Delta2_prmS2y + u*(Delta3_prmS2y + u*(Delta4_prmS2y + u*(Delta5l_prmS2y*np.log(u) + Delta5_prmS2y)))))
    Deltaucalib_prmS2y = eta*(Delta0_prmS2y + logarg_prmS2y*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmS2y = eta*logarg_prmS2y*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmS2y + u*(2*Delta2_prmS2y + u*(3*Delta3_prmS2y + u*(4*Delta4_prmS2y + u*(5*Delta5l_prmS2y*np.log(u) + 5*Delta5_prmS2y)))))/(logarg + 1)
    Deltaubar_prmS2y = 2*a*a_prmS2y*u**2 + etaKminus1_prmS2y*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmS2y/etaKminus1**3
    Deltaubarprime_prmS2y = -4*a*a_prmS2y*u**3 + 2*etaKminus1_prmS2y*u**2/etaKminus1**2
    Deltau_prmS2y = (Deltaubar*Deltaucalib_prmS2y + Deltaubar_prmS2y*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmS2y = Deltaubar*Deltaucalibprime_prmS2y + Deltaubarprime*Deltaucalib_prmS2y + Deltaubarprime_prmS2y*Deltaucalib + Deltaubar_prmS2y*Deltaucalibprime
    Deltatprime_prmS2y = Deltauprime_prmS2y*r**2 + 2*Deltau_prmS2y*r
    Deltat_prmS2y = Deltau_prmS2y*r**2
    Deltar_prmS2y = Deltat_prmS2y*Dinv
    Deltarprime_prmS2y = Deltatprime_prmS2y*Dinv + Deltat_prmS2y*Dinvprime
    Lambt_prmS2y = (Deltat*a**2*sin2theta_prmS2y + 2*Deltat*a*a_prmS2y*sin2theta + Deltat_prmS2y*a**2*sin2theta - 2*w2*w2_prmS2y)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmS2y = (Deltar*Deltat_prmS2y + Deltar_prmS2y*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmS2y*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmS2y = 4.0*r*w2_prmS2y*np.sqrt(Deltar*Deltat)/w2**3 + (Deltar*Deltatprime_prmS2y + Deltarprime*Deltat_prmS2y + Deltarprime_prmS2y*Deltat + Deltar_prmS2y*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmS2y*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmS2y/2 + Deltar_prmS2y*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmS2y/2 - Deltar_prmS2y*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmS2y = csi_prmS2y*(1 - np.abs(tortoise - 1))
    csi2_prmS2y = csi_prmS2y*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmS2y = csi2_prmS2y*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmS2y = n3*prT_prmS2y*(-1 + 1/csi1) - csi1_prmS2y*n3*prT/csi1**2
    phat2_prmS2y = n2*prT_prmS2y*(-1 + 1/csi1) - csi1_prmS2y*n2*prT/csi1**2
    phat1_prmS2y = n1*prT_prmS2y*(-1 + 1/csi1) - csi1_prmS2y*n1*prT/csi1**2
    pdotxir_prmS2y = r*(phat1*xi1_prmS2y + phat1_prmS2y*xi1 + phat2*xi2_prmS2y + phat2_prmS2y*xi2 + phat3*xi3_prmS2y + phat3_prmS2y*xi3)
    pdotn_prmS2y = n1*phat1_prmS2y + n2*phat2_prmS2y + n3*phat3_prmS2y
    pdotvr_prmS2y = r*(phat1*v1_prmS2y + phat1_prmS2y*v1 + phat2*v2_prmS2y + phat2_prmS2y*v2 + phat3*v3_prmS2y + phat3_prmS2y*v3)
    pphi_prmS2y = pdotxir_prmS2y
    Qcoeff2_prmS2y = -sin2theta_prmS2y/(Sigma*sin2theta**2) - Sigma_prmS2y/(Sigma**2*sin2theta)
    Qcoeff1_prmS2y = -Sigma*sin2theta_prmS2y/(Lambt*sin2theta**2) + Sigma_prmS2y/(Lambt*sin2theta) - Lambt_prmS2y*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmS2y = 2*Deltar*pdotn*pdotn_prmS2y/Sigma - Deltar*Sigma_prmS2y*pdotn**2/Sigma**2 + Deltar_prmS2y*pdotn**2/Sigma
    Q_prmS2y = DrSipn2_prmS2y + 2*Qcoeff1*pdotxir*pdotxir_prmS2y + Qcoeff1_prmS2y*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmS2y + Qcoeff2_prmS2y*pdotvr**2
    Qminus1_prmS2y = Q_prmS2y
    Jtilde_prmS2y = Deltar_prmS2y/(2*np.sqrt(Deltar))
    exp2mu_prmS2y = Sigma_prmS2y
    expmu_prmS2y = exp2mu_prmS2y/(2*np.sqrt(exp2mu))
    Brtilde_prmS2y = (np.sqrt(Deltar)*Deltatprime_prmS2y - 2*Deltat_prmS2y + Deltar_prmS2y*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmS2y/2 - Deltar_prmS2y*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmS2y = Deltat_prmS2y/(2*np.sqrt(Deltat))
    exp2nu_prmS2y = Deltat*Sigma_prmS2y/Lambt - Deltat*Lambt_prmS2y*Sigma/Lambt**2 + Deltat_prmS2y*Sigma/Lambt
    expnu_prmS2y = exp2nu_prmS2y/(2*np.sqrt(exp2nu))
    omega_prmS2y = omegatilde_prmS2y/Lambt - Lambt_prmS2y*omegatilde/Lambt**2
    omegatildeprime_prmS2y = 2*a_prmS2y
    Lambtprime_prmS2y = -Deltatprime*a**2*sin2theta_prmS2y - 2*Deltatprime*a*a_prmS2y*sin2theta - Deltatprime_prmS2y*a**2*sin2theta + 8*a*a_prmS2y*r
    mucostheta_prmS2y = a**2*costheta_prmS2y/Sigma + 2*a*a_prmS2y*costheta/Sigma - Sigma_prmS2y*a**2*costheta/Sigma**2
    nucostheta_prmS2y = a**2*costheta*w2*(-Deltat_prmS2y + w2_prmS2y)/(Lambt*Sigma) + a**2*costheta*w2_prmS2y*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmS2y*w2*(-Deltat + w2)/(Lambt*Sigma) + a*a_prmS2y*costheta*w2*(-2*Deltat + 2*w2)/(Lambt*Sigma) - Sigma_prmS2y*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmS2y*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmS2y = -2*Deltat*a**2*costheta*omegatilde_prmS2y/Lambt**2 - 2*Deltat*a**2*costheta_prmS2y*omegatilde/Lambt**2 - 4*Deltat*a*a_prmS2y*costheta*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmS2y*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmS2y*a**2*costheta*omegatilde/Lambt**2
    mur_prmS2y = -Sigma_prmS2y*r/Sigma**2 + Deltar_prmS2y/(2*Deltar**(3/2))
    nur_prmS2y = -Sigma_prmS2y*r/Sigma**2 + w2*(Deltatprime*w2_prmS2y + Deltatprime_prmS2y*w2 - 4*Deltat_prmS2y*r)/(2*Deltat*Lambt) + w2_prmS2y*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmS2y*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmS2y*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmS2y = (Lambt*omegatildeprime_prmS2y - Lambtprime*omegatilde_prmS2y - Lambtprime_prmS2y*omegatilde + Lambt_prmS2y*omegatildeprime)/Lambt**2 + Lambt_prmS2y*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmS2y = 442.443*chi**2*chi_prmS2y*eta**2 - 1705.953*chi**2*chi_prmS2y*eta + 198.5961*chi**2*chi_prmS2y - 686.626*chi*chi_prmS2y*eta + 2495.29*chi_prmS2y*eta**2
    sigmacoeffTerm3_prmS2y = dSO_prmS2y*eta*u**3
    sigmacoeffTerm2_prmS2y = eta*(eta*r*(-6.125*DrSipn2_prmS2y*u**2 + 1.41666666666667*Qminus1_prmS2y*u**2 + r*(11.25*DrSipn2*DrSipn2_prmS2y*u**2 - 1.625*DrSipn2*Qminus1_prmS2y*u**2 - 1.625*DrSipn2_prmS2y*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmS2y*u**2 - 3.02777777777778*Qminus1_prmS2y*u**2 + r*(0.25*DrSipn2*Qminus1_prmS2y*u**2 + 0.25*DrSipn2_prmS2y*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmS2y*u**2)))
    sigmacoeffTerm1_prmS2y = eta*(-3*DrSipn2_prmS2y + Qminus1_prmS2y/4)
    sigmacoeff_prmS2y = sigmacoeffTerm1_prmS2y + sigmacoeffTerm2_prmS2y + sigmacoeffTerm3_prmS2y
    sigmastarcoeffTerm2_prmS2y = eta*(eta*r*(-324*DrSipn2_prmS2y + 120*Qminus1_prmS2y + r*(720*DrSipn2*DrSipn2_prmS2y + Qminus1*(-126*DrSipn2_prmS2y - 3*Qminus1_prmS2y) + Qminus1_prmS2y*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmS2y + Qminus1*r*(96*DrSipn2_prmS2y - 23*Qminus1_prmS2y) + Qminus1_prmS2y*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmS2y))/(72*r**2)
    sigmastarcoeffTerm1_prmS2y = eta*(-5*DrSipn2_prmS2y/2 + Qminus1_prmS2y/3)
    sigmastarcoeff_prmS2y = sigmastarcoeffTerm1_prmS2y + sigmastarcoeffTerm2_prmS2y
    Deltasigmastar3_prmS2y = sigma3*sigmacoeff_prmS2y + sigmastar3*sigmastarcoeff_prmS2y
    Deltasigmastar2_prmS2y = sigma2*sigmacoeff_prmS2y + sigma2_prmS2y*sigmacoeff + sigmastar2*sigmastarcoeff_prmS2y + sigmastar2_prmS2y*sigmastarcoeff
    Deltasigmastar1_prmS2y = sigma1*sigmacoeff_prmS2y + sigmastar1*sigmastarcoeff_prmS2y
    Sstar3_prmS2y = Deltasigmastar3_prmS2y
    Sstar2_prmS2y = Deltasigmastar2_prmS2y + sigmastar2_prmS2y
    Sstar1_prmS2y = Deltasigmastar1_prmS2y
    S3_prmS2y = Sstar3_prmS2y
    S2_prmS2y = Sstar2_prmS2y
    S1_prmS2y = Sstar1_prmS2y
    Sstardotn_prmS2y = Sstar1_prmS2y*n1 + Sstar2_prmS2y*n2 + Sstar3_prmS2y*n3
    Sdote3_prmS2y = S1*e31_prmS2y + S1_prmS2y*e31 + S2*e32_prmS2y + S2_prmS2y*e32 + S3*e33_prmS2y + S3_prmS2y*e33
    Sdotn_prmS2y = S1_prmS2y*n1 + S2_prmS2y*n2 + S3_prmS2y*n3
    Sdotv_prmS2y = S1*v1_prmS2y + S1_prmS2y*v1 + S2*v2_prmS2y + S2_prmS2y*v2 + S3*v3_prmS2y + S3_prmS2y*v3
    Sdotxi_prmS2y = S1*xi1_prmS2y + S1_prmS2y*xi1 + S2*xi2_prmS2y + S2_prmS2y*xi2 + S3*xi3_prmS2y + S3_prmS2y*xi3
    HdsumTerm2_prmS2y = 6*Sstardotn*Sstardotn_prmS2y
    HdsumTerm1_prmS2y = 2*Sstar1*Sstar1_prmS2y + 2*Sstar2*Sstar2_prmS2y + 2*Sstar3*Sstar3_prmS2y
    Hdsum_prmS2y = HdsumTerm1_prmS2y - HdsumTerm2_prmS2y
    Q4_prmS2y = eta*prT**3*prT_prmS2y*u**2*(32 - 24*eta)
    gammappsum_prmS2y = 2*Deltar*pdotn*pdotn_prmS2y/Sigma - Deltar*Sigma_prmS2y*pdotn**2/Sigma**2 + Deltar_prmS2y*pdotn**2/Sigma - pdotvr**2*sin2theta_prmS2y/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmS2y/(Sigma*sin2theta) - Sigma_prmS2y*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmS2y/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmS2y/(Lambt*sin2theta) + Sigma_prmS2y*pdotxir**2/(Lambt*sin2theta) - Lambt_prmS2y*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmS2y = Q4_prmS2y + gammappsum_prmS2y
    alpha_prmS2y = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmS2y/(2*Lambt) - Deltat*Lambt_prmS2y*Sigma/(2*Lambt**2) + Deltat_prmS2y*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmS2y = omegatilde*pphi_prmS2y/Lambt + omegatilde_prmS2y*pphi/Lambt - Lambt_prmS2y*omegatilde*pphi/Lambt**2
    HssTerm3_prmS2y = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmS2y - Q_prmS2y/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmS2y*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmS2y*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmS2y*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmS2y - Jtilde*Sdotv_prmS2y*pdotn - Jtilde_prmS2y*Sdotv*pdotn + Sdotn*pdotvr_prmS2y + Sdotn_prmS2y*pdotvr) + pdotvr_prmS2y*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmS2y*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmS2y + Btilde*Jtilde*Sdotxi_prmS2y*pdotn + Btilde*Jtilde_prmS2y*Sdotxi*pdotn + Btilde_prmS2y*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmS2y - Sdotn*expmu*expnu_prmS2y*pdotxir - Sdotn*expmu_prmS2y*expnu*pdotxir - Sdotn_prmS2y*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmS2y*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmS2y*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmS2y*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmS2y = omegacostheta*(-Q_prmS2y - Q_prmS2y/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmS2y/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmS2y*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmS2y*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmS2y*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS2y*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmS2y = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmS2y - Jtilde*Sdotv_prmS2y*pdotn - Jtilde_prmS2y*Sdotv*pdotn + Sdotn*pdotvr_prmS2y + Sdotn_prmS2y*pdotvr) + Jtilde*pdotn_prmS2y*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmS2y*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmS2y + Q_prmS2y/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmS2y*(np.sqrt(Q) + Q) + Sdotv_prmS2y*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmS2y*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmS2y*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmS2y - Btilde*Sdotxi*expnu_prmS2y*pdotvr - Btilde*Sdotxi_prmS2y*expnu*pdotvr - Btilde_prmS2y*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmS2y + Sdotv*exp2nu*expmu_prmS2y*pdotxir + Sdotv*exp2nu_prmS2y*expmu*pdotxir + Sdotv_prmS2y*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmS2y*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmS2y*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmS2y = Jtilde*omegar*(-Q_prmS2y - Q_prmS2y/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmS2y/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmS2y/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmS2y*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmS2y*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmS2y*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmS2y*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS2y*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmS2y = Sdote3*omega_prmS2y + Sdote3_prmS2y*omega
    Hss_prmS2y = HssTerm1_prmS2y + HssTerm2*HssTerm2coeff_prmS2y + HssTerm2coeff*HssTerm2_prmS2y + HssTerm3*HssTerm3coeff_prmS2y + HssTerm3coeff*HssTerm3_prmS2y
    HsoTerm2c_prmS2y = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmS2y*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmS2y*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmS2y*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmS2y*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmS2y*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmS2y*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmS2y*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmS2y = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmS2y + Jtilde*Sdotv_prmS2y*nur + Jtilde_prmS2y*Sdotv*nur - Sdotn*nucostheta*xisq_prmS2y - Sdotn*nucostheta_prmS2y*xisq - Sdotn_prmS2y*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmS2y*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmS2y*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmS2y*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmS2y*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmS2y*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmS2y = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmS2y + nur_prmS2y*pdotvr + pdotn*xisq*(mucostheta_prmS2y - nucostheta_prmS2y) + pdotn*xisq_prmS2y*(mucostheta - nucostheta) + pdotn_prmS2y*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmS2y - mucostheta*pdotn_prmS2y*xisq - mucostheta_prmS2y*pdotn*xisq + mur*pdotvr_prmS2y*(np.sqrt(Q) + 1) + mur_prmS2y*pdotvr*(np.sqrt(Q) + 1) + Q_prmS2y*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmS2y*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmS2y*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmS2y*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmS2y*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmS2y = HsoTerm2a_prmS2y + HsoTerm2b_prmS2y - HsoTerm2c_prmS2y
    HsoTerm2coeff_prmS2y = expnu*(-Q_prmS2y - Q_prmS2y/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmS2y/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmS2y/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmS2y*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmS2y*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmS2y = Sdote3*exp2nu*pdotxir*(-Btilde_prmS2y + expmu*expnu_prmS2y + expmu_prmS2y*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmS2y*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmS2y*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmS2y*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmS2y*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmS2y*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmS2y*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmS2y*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmS2y = HsoTerm1_prmS2y + HsoTerm2*HsoTerm2coeff_prmS2y + HsoTerm2coeff*HsoTerm2_prmS2y
    Hd_prmS2y = Hdcoeff*Hdsum_prmS2y
    Hns_prmS2y = np.sqrt(Hnsradicand)*alpha_prmS2y + betapsum_prmS2y + Hnsradicand_prmS2y*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmS2y = Hso_prmS2y + Hss_prmS2y
    dSS_prmS2y = 1585.533*chi**2*chi_prmS2y*eta**2 - 123.0009*chi**2*chi_prmS2y*eta + 2323.56*chi*chi_prmS2y*eta**3 - 652.65*chi*chi_prmS2y*eta**2 + 37.1964*chi_prmS2y*eta
    Heff_prmS2y = -Hd_prmS2y + Hns_prmS2y + Hs_prmS2y + 2*S2y*dSS*eta*u**4 + dSS_prmS2y*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmS2y = Heff_prmS2y*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmS2y

def v4P_compute_ham_S2z_deriv(m1, m2, tortoise, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z):
    EMgamma = 0.577215664901532860606512090082402431
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = (m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y+m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x+m1/m2*S2x)/M/M
    sigma3 = (S1z+S2z)/M/M
    sigma2 = (S1y+S2y)/M/M
    sigma1 = (S1x+S2x)/M/M
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    L3 = x*p2-y*p1
    L2 = z*p1-x*p3
    L1 = y*p3-z*p2
    Lnorm = np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3 = L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat = S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1+S1y*Lhat2+S1z*Lhat3
    S1perp3 = S1z-S1dotLhat*Lhat3
    S1perp2 = S1y-S1dotLhat*Lhat2
    S1perp1 = S1x-S1dotLhat*Lhat1
    S2perp3 = S2z-S2dotLhat*Lhat3
    S2perp2 = S2y-S2dotLhat*Lhat2
    S2perp1 = S2x-S2dotLhat*Lhat1
    Sperp3 = S1perp3+S2perp3
    Sperp2 = S1perp2+S2perp2
    Sperp1 = S1perp1+S2perp1
    n3 = z/r
    n2 = y/r
    n1 = x/r
    TINYDOUBLE = 1e-100
    condition_e3prov_lhs = a
    condition_e3prov_rhs = 1e-16
    e3prov_gt_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs+np.abs(condition_e3prov_lhs-condition_e3prov_rhs))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov_leq_bound = np.true_divide(1,2)*(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE-np.abs(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE))/(condition_e3prov_lhs-condition_e3prov_rhs-TINYDOUBLE)
    e3prov1 = Skerrhat1*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov2 = Skerrhat2*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    e3prov3 = Skerrhat3*e3prov_gt_bound+e3prov_leq_bound/np.sqrt(3.)
    lambdavec3 = Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1-Lhat1*n3
    lambdavec1 = Lhat2*n3-Lhat3*n2
    lambdavecnorm = np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3 = lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_e3prov = lambdahat1*e3prov1+lambdahat2*e3prov2+lambdahat3*e3prov3
    lambdahat_cross_e3prov3 = lambdahat1*e3prov2-lambdahat2*e3prov1
    lambdahat_cross_e3prov2 = lambdahat3*e3prov1-lambdahat1*e3prov3
    lambdahat_cross_e3prov1 = lambdahat2*e3prov3-lambdahat3*e3prov2
    e3prov_dot_n = e3prov1*n1+e3prov2*n2+e3prov3*n3
    cos_0_1_deg = 0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    condition_e3_lhs = 1-np.abs(e3prov_dot_n)
    condition_e3_rhs = 1e-8
    e3_gt_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs+np.abs(condition_e3_lhs-condition_e3_rhs))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e3_leq_bound = np.true_divide(1,2)*(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE-np.abs(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE))/(condition_e3_lhs-condition_e3_rhs-TINYDOUBLE)
    e31 = e3prov1*e3_gt_bound+(e3prov1*cos_0_1_deg+lambdahat_cross_e3prov1*sin_0_1_deg+lambdahat1*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e32 = e3prov2*e3_gt_bound+(e3prov2*cos_0_1_deg+lambdahat_cross_e3prov2*sin_0_1_deg+lambdahat2*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    e33 = e3prov3*e3_gt_bound+(e3prov3*cos_0_1_deg+lambdahat_cross_e3prov3*sin_0_1_deg+lambdahat3*lambdahat_dot_e3prov*(1-cos_0_1_deg))*e3_leq_bound
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log1p(6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u+6*(26-3*eta)*eta*u*u)/(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    chi = (Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.true_divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0 = 267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K = -59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*(np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)+(np.true_divide(41,32)*np.pi*np.pi-np.true_divide(221,6))*eta)
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(np.abs(1+logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Deltarprime = Deltatprime*Dinv+Deltat*Dinvprime
    Lambt = np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi = np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar+Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2)-2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    csi1 = 1+(1-np.abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3-prT*(1-1/csi1)*n3
    phat2 = p2-prT*(1-1/csi1)*n2
    phat1 = p1-prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    Qminus1 = Q-1
    Jtilde = np.sqrt(Deltar)
    exp2mu = Sigma
    expmu = np.sqrt(exp2mu)
    Brtilde = (np.sqrt(Deltar)*Deltatprime-2*Deltat)/(2*np.sqrt(Deltar*Deltat))
    Btilde = np.sqrt(Deltat)
    exp2nu = Deltat*Sigma/Lambt
    expnu = np.sqrt(exp2nu)
    omega = omegatilde/Lambt
    omegatildeprime = 2*a
    Lambtprime = 4*(a*a+r*r)*r-a*a*Deltatprime*sin2theta
    mucostheta = a*a*costheta/Sigma
    nucostheta = a*a*w2*costheta*(w2-Deltat)/(Lambt*Sigma)
    omegacostheta = -2*a*a*costheta*Deltat*omegatilde/(Lambt*Lambt)
    mur = r/Sigma-1/np.sqrt(Deltar)
    nur = r/Sigma+w2*(w2*Deltatprime-4*r*Deltat)/(2*Lambt*Deltat)
    omegar = (Lambt*omegatildeprime-Lambtprime*omegatilde)/(Lambt*Lambt)
    dSO = 147.481*chi*chi*chi*eta*eta-568.651*chi*chi*chi*eta+66.1987*chi*chi*chi-343.313*chi*chi*eta+2495.29*chi*eta*eta-44.5324
    sigmacoeffTerm3 = eta*dSO*u*u*u
    sigmacoeffTerm2 = (-56.0/9.0*u*u+(-2.0/3.0*DrSipn2*u*u-109.0/36.0*Qminus1*u*u+(DrSipn2*Qminus1*u*u/4.0-5.0/16.0*Qminus1*Qminus1*u*u)*r)*r+(-7.0/3.0*u*u+(-49.0/8.0*DrSipn2*u*u+17.0/12.0*Qminus1*u*u+(45.0/8.0*DrSipn2*DrSipn2*u*u-13.0/8.0*DrSipn2*Qminus1*u*u)*r)*r)*eta)*eta
    sigmacoeffTerm1 = eta/12*(-8/r+3*Qminus1-36*DrSipn2)
    sigmacoeff = sigmacoeffTerm1+sigmacoeffTerm2+sigmacoeffTerm3
    sigmastarcoeffTerm2 = eta/(72*r*r)*(706+r*(-206*Qminus1+282*DrSipn2+r*Qminus1*(96*DrSipn2-23*Qminus1))+eta*(-54+r*(120*Qminus1-324*DrSipn2+r*(360*DrSipn2*DrSipn2+Qminus1*(-126*DrSipn2-3*Qminus1)))))
    sigmastarcoeffTerm1 = eta/12*(14/r+4*Qminus1-30*DrSipn2)
    sigmastarcoeff = sigmastarcoeffTerm1+sigmastarcoeffTerm2
    Deltasigmastar3 = sigmastar3*sigmastarcoeff+sigma3*sigmacoeff
    Deltasigmastar2 = sigmastar2*sigmastarcoeff+sigma2*sigmacoeff
    Deltasigmastar1 = sigmastar1*sigmastarcoeff+sigma1*sigmacoeff
    Sstar3 = sigmastar3+Deltasigmastar3
    Sstar2 = sigmastar2+Deltasigmastar2
    Sstar1 = sigmastar1+Deltasigmastar1
    S3 = Sstar3
    S2 = Sstar2
    S1 = Sstar1
    Sstardotn = Sstar1*n1+Sstar2*n2+Sstar3*n3
    Sdote3 = S1*e31+S2*e32+S3*e33
    Sdotn = S1*n1+S2*n2+S3*n3
    Sdotv = S1*v1+S2*v2+S3*v3
    Sdotxi = S1*xi1+S2*xi2+S3*xi3
    HdsumTerm2 = 3*Sstardotn*Sstardotn
    HdsumTerm1 = Sstar1*Sstar1+Sstar2*Sstar2+Sstar3*Sstar3
    Hdsum = HdsumTerm1-HdsumTerm2
    Hdcoeff = np.true_divide(1,2)/(r*r*r)
    Q4 = 2*prT*prT*prT*prT*u*u*(4-3*eta)*eta
    gammappsum = Deltar/Sigma*pdotn*pdotn+1/Sigma*pdotvr*pdotvr/sin2theta+Sigma/Lambt/sin2theta*pdotxir*pdotxir
    Hnsradicand = 1+gammappsum+Q4
    alpha = np.sqrt(Deltat*Sigma/Lambt)
    betapsum = omegatilde*pphi/Lambt
    HssTerm3 = expmu*expnu*pdotxir*(Jtilde*pdotn*Sdotxi*Btilde-expmu*expnu*pdotxir*Sdotn)+(pdotvr*(Sdotn*pdotvr-Jtilde*pdotn*Sdotv)-exp2mu*(np.sqrt(Q)+Q)*Sdotn*xisq)*Btilde*Btilde
    HssTerm3coeff = omegacostheta/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q)))
    HssTerm2 = expmu*pdotxir*(expmu*exp2nu*pdotxir*Sdotv-expnu*pdotvr*Sdotxi*Btilde)+xisq*Btilde*Btilde*(exp2mu*(np.sqrt(Q)+Q)*Sdotv+Jtilde*pdotn*(pdotvr*Sdotn-Jtilde*pdotn*Sdotv))
    HssTerm2coeff = Jtilde*omegar/(2*exp2mu*expmu*expnu*Btilde*(Q+np.sqrt(Q))*xisq)
    HssTerm1 = omega*Sdote3
    Hss = HssTerm1+HssTerm2coeff*HssTerm2+HssTerm3coeff*HssTerm3
    HsoTerm2c = Jtilde*Brtilde*expmu*expnu*pdotxir*(np.sqrt(Q)+1)*Sdotv
    HsoTerm2b = expmu*expnu*pdotxir*(2*np.sqrt(Q)+1)*(Jtilde*nur*Sdotv-nucostheta*Sdotn*xisq)*Btilde
    HsoTerm2a = Sdotxi*Jtilde*(mur*pdotvr*(np.sqrt(Q)+1)-mucostheta*pdotn*xisq-np.sqrt(Q)*(nur*pdotvr+(mucostheta-nucostheta)*pdotn*xisq))*Btilde*Btilde
    HsoTerm2 = HsoTerm2a+HsoTerm2b-HsoTerm2c
    HsoTerm2coeff = expnu/(exp2mu*Deltat*(Q+np.sqrt(Q))*xisq)
    HsoTerm1 = exp2nu*(expmu*expnu-Btilde)*pdotxir*Sdote3/(expmu*Deltat*np.sqrt(Q)*xisq)
    Hso = HsoTerm1+HsoTerm2coeff*HsoTerm2
    Hd = Hdcoeff*Hdsum
    Hns = betapsum+alpha*np.sqrt(Hnsradicand)
    Hs = Hso+Hss
    dSS = 528.511*chi*chi*chi*eta*eta-41.0003*chi*chi*chi*eta+1161.78*chi*chi*eta*eta*eta-326.325*chi*chi*eta*eta+37.1964*chi*eta+706.958*eta*eta*eta-36.0272*eta+6.06807
    Heff = Hs+Hns-Hd+dSS*eta*u*u*u*u*(S1x*S1x+S1y*S1y+S1z*S1z+S2x*S2x+S2y*S2y+S2z*S2z)
    Hreal = np.sqrt(1+2*eta*(np.abs(Heff)-1))

    sigmastar3_prmS2z = m1/(M**2*m2)
    sigma3_prmS2z = M**(-2)
    Skerr3_prmS2z = sigma3_prmS2z
    Skerrmag_prmS2z = Skerr3*Skerr3_prmS2z/np.sqrt(Skerr1**2 + Skerr2**2 + Skerr3**2)
    Skerrhat3_prmS2z = -Skerr3*Skerrmag_prmS2z/Skerrmag**2 + Skerr3_prmS2z/Skerrmag
    Skerrhat2_prmS2z = -Skerr2*Skerrmag_prmS2z/Skerrmag**2
    Skerrhat1_prmS2z = -Skerr1*Skerrmag_prmS2z/Skerrmag**2
    a_prmS2z = Skerrmag_prmS2z
    S2dotLhat_prmS2z = Lhat3
    S2perp3_prmS2z = -Lhat3*S2dotLhat_prmS2z + 1
    S2perp2_prmS2z = -Lhat2*S2dotLhat_prmS2z
    S2perp1_prmS2z = -Lhat1*S2dotLhat_prmS2z
    Sperp3_prmS2z = S2perp3_prmS2z
    Sperp2_prmS2z = S2perp2_prmS2z
    Sperp1_prmS2z = S2perp1_prmS2z
    condition_e3prov_lhs_prmS2z = a_prmS2z
    e3prov_gt_bound_prmS2z = -condition_e3prov_lhs_prmS2z*(condition_e3prov_lhs/2 - condition_e3prov_rhs/2 + np.abs(condition_e3prov_lhs - condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS2z*np.sign(condition_e3prov_lhs - condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS2z/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov_leq_bound_prmS2z = -condition_e3prov_lhs_prmS2z*(-TINYDOUBLE/2 + condition_e3prov_lhs/2 - condition_e3prov_rhs/2 - np.abs(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)**2 + (condition_e3prov_lhs_prmS2z*np.sign(TINYDOUBLE - condition_e3prov_lhs + condition_e3prov_rhs)/2 + condition_e3prov_lhs_prmS2z/2)/(-TINYDOUBLE + condition_e3prov_lhs - condition_e3prov_rhs)
    e3prov1_prmS2z = Skerrhat1*e3prov_gt_bound_prmS2z + Skerrhat1_prmS2z*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2z
    e3prov2_prmS2z = Skerrhat2*e3prov_gt_bound_prmS2z + Skerrhat2_prmS2z*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2z
    e3prov3_prmS2z = Skerrhat3*e3prov_gt_bound_prmS2z + Skerrhat3_prmS2z*e3prov_gt_bound + 0.577350269189626*e3prov_leq_bound_prmS2z
    lambdahat_dot_e3prov_prmS2z = e3prov1_prmS2z*lambdahat1 + e3prov2_prmS2z*lambdahat2 + e3prov3_prmS2z*lambdahat3
    lambdahat_cross_e3prov3_prmS2z = -e3prov1_prmS2z*lambdahat2 + e3prov2_prmS2z*lambdahat1
    lambdahat_cross_e3prov2_prmS2z = e3prov1_prmS2z*lambdahat3 - e3prov3_prmS2z*lambdahat1
    lambdahat_cross_e3prov1_prmS2z = -e3prov2_prmS2z*lambdahat3 + e3prov3_prmS2z*lambdahat2
    e3prov_dot_n_prmS2z = e3prov1_prmS2z*n1 + e3prov2_prmS2z*n2 + e3prov3_prmS2z*n3
    condition_e3_lhs_prmS2z = -e3prov_dot_n_prmS2z*np.sign(e3prov_dot_n)
    e3_gt_bound_prmS2z = -condition_e3_lhs_prmS2z*(condition_e3_lhs/2 - condition_e3_rhs/2 + np.abs(condition_e3_lhs - condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS2z*np.sign(condition_e3_lhs - condition_e3_rhs)/2 + condition_e3_lhs_prmS2z/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e3_leq_bound_prmS2z = -condition_e3_lhs_prmS2z*(-TINYDOUBLE/2 + condition_e3_lhs/2 - condition_e3_rhs/2 - np.abs(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)**2 + (condition_e3_lhs_prmS2z*np.sign(TINYDOUBLE - condition_e3_lhs + condition_e3_rhs)/2 + condition_e3_lhs_prmS2z/2)/(-TINYDOUBLE + condition_e3_lhs - condition_e3_rhs)
    e31_prmS2z = e3_gt_bound*e3prov1_prmS2z + e3_gt_bound_prmS2z*e3prov1 + e3_leq_bound*(cos_0_1_deg*e3prov1_prmS2z + lambdahat1*lambdahat_dot_e3prov_prmS2z*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1_prmS2z*sin_0_1_deg) + e3_leq_bound_prmS2z*(cos_0_1_deg*e3prov1 + lambdahat1*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov1*sin_0_1_deg)
    e32_prmS2z = e3_gt_bound*e3prov2_prmS2z + e3_gt_bound_prmS2z*e3prov2 + e3_leq_bound*(cos_0_1_deg*e3prov2_prmS2z + lambdahat2*lambdahat_dot_e3prov_prmS2z*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2_prmS2z*sin_0_1_deg) + e3_leq_bound_prmS2z*(cos_0_1_deg*e3prov2 + lambdahat2*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov2*sin_0_1_deg)
    e33_prmS2z = e3_gt_bound*e3prov3_prmS2z + e3_gt_bound_prmS2z*e3prov3 + e3_leq_bound*(cos_0_1_deg*e3prov3_prmS2z + lambdahat3*lambdahat_dot_e3prov_prmS2z*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3_prmS2z*sin_0_1_deg) + e3_leq_bound_prmS2z*(cos_0_1_deg*e3prov3 + lambdahat3*lambdahat_dot_e3prov*(1 - cos_0_1_deg) + lambdahat_cross_e3prov3*sin_0_1_deg)
    xi3_prmS2z = e31_prmS2z*n2 - e32_prmS2z*n1
    xi2_prmS2z = -e31_prmS2z*n3 + e33_prmS2z*n1
    xi1_prmS2z = e32_prmS2z*n3 - e33_prmS2z*n2
    v3_prmS2z = n1*xi2_prmS2z - n2*xi1_prmS2z
    v2_prmS2z = -n1*xi3_prmS2z + n3*xi1_prmS2z
    v1_prmS2z = n2*xi3_prmS2z - n3*xi2_prmS2z
    costheta_prmS2z = e31_prmS2z*n1 + e32_prmS2z*n2 + e33_prmS2z*n3
    sin2theta_prmS2z = -2*costheta*costheta_prmS2z
    xisq_prmS2z = sin2theta_prmS2z
    w2_prmS2z = 2*a*a_prmS2z
    Sigma_prmS2z = 2*a**2*costheta*costheta_prmS2z + 2*a*a_prmS2z*costheta**2
    omegatilde_prmS2z = 2*a_prmS2z*r
    chi_prmS2z = Lhat3*Skerr3_prmS2z/(1 - 2*eta) + (Skerr1*Sperp1_prmS2z/2 + Skerr2*Sperp2_prmS2z/2 + Skerr3*Sperp3_prmS2z/2 + Skerr3_prmS2z*Sperp3/2)/(Skerrmag*(1.0 - 2.0*eta)) + Skerrmag_prmS2z*(-Skerr1*Sperp1/2 - Skerr2*Sperp2/2 - Skerr3*Sperp3/2)/(Skerrmag**2*(1.0 - 2.0*eta))
    K_prmS2z = -177.4974*chi**2*chi_prmS2z*eta**3 - 1.280874*chi**2*chi_prmS2z*eta + 4.30977*chi**2*chi_prmS2z + 62.3492*chi*chi_prmS2z*eta**3 + 12.32932*chi*chi_prmS2z*eta**2 - 2.76172*chi*chi_prmS2z - 27.5201*chi_prmS2z*eta**3 + 17.3736*chi_prmS2z*eta**2 + 2.26831*chi_prmS2z*eta - 1.62045*chi_prmS2z
    etaKminus1_prmS2z = K_prmS2z*eta
    Delta0_prmS2z = K*K_prmS2z*eta + K_prmS2z*(K*eta - 2)
    Delta1_prmS2z = etaKminus1*(-2*Delta0_prmS2z - 2*K_prmS2z) + etaKminus1_prmS2z*(-2*Delta0 - 2*K)
    Delta2_prmS2z = -2*Delta0*a**2*etaKminus1*etaKminus1_prmS2z - 2*Delta0*a*a_prmS2z*etaKminus1**2 - Delta0_prmS2z*a**2*etaKminus1**2 + Delta1*(Delta1_prmS2z/2 - 2*etaKminus1_prmS2z) + Delta1_prmS2z*(Delta1/2 - 2*etaKminus1)
    Delta3_prmS2z = -Delta1**2*Delta1_prmS2z + Delta1**2*etaKminus1_prmS2z + 2*Delta1*Delta1_prmS2z*etaKminus1 + Delta1*Delta2_prmS2z - 2*Delta1*a**2*etaKminus1*etaKminus1_prmS2z - 2*Delta1*a*a_prmS2z*etaKminus1**2 + Delta1_prmS2z*Delta2 - Delta1_prmS2z*a**2*etaKminus1**2 + etaKminus1*(-2*Delta2_prmS2z + 2*etaKminus1_prmS2z) + etaKminus1_prmS2z*(-2*Delta2 + 2*etaKminus1)
    Delta4_prmS2z = Delta1**3*Delta1_prmS2z - 2*Delta1**3*etaKminus1_prmS2z/3 - 2*Delta1**2*Delta1_prmS2z*etaKminus1 - Delta1**2*Delta2_prmS2z - 2*Delta1*Delta1_prmS2z*Delta2 + Delta1*(2*Delta2*etaKminus1_prmS2z + 2*Delta2_prmS2z*etaKminus1 + Delta3_prmS2z) + Delta1_prmS2z*(2*Delta2*etaKminus1 + Delta3) + Delta2*Delta2_prmS2z - 2*Delta3*etaKminus1_prmS2z - 2*Delta3_prmS2z*etaKminus1 + a**2*etaKminus1**2*(2*Delta1*Delta1_prmS2z - 2*Delta2_prmS2z)/2 + a**2*etaKminus1*etaKminus1_prmS2z*(Delta1**2 - 2*Delta2) + a*a_prmS2z*etaKminus1**2*(Delta1**2 - 2*Delta2) + etaKminus1*etaKminus1_prmS2z*(376 - 123*np.pi**2/8)/6
    Delta5_prmS2z = etaKminus1**2*(-a**2*(3*Delta1**2*Delta1_prmS2z - 3*Delta1*Delta2_prmS2z - 3*Delta1_prmS2z*Delta2 + 3*Delta3_prmS2z)/3 + a*a_prmS2z*(-2*Delta1**3 + 6*Delta1*Delta2 - 6*Delta3)/3 + (4*Delta1**3*Delta1_prmS2z - 4*Delta1**2*Delta2_prmS2z - 8*Delta1*Delta1_prmS2z*Delta2 + 4*Delta1*Delta3_prmS2z + 4*Delta1_prmS2z*Delta3 + 4*Delta2*Delta2_prmS2z - 4*Delta4_prmS2z)/(2*etaKminus1) - etaKminus1_prmS2z*(Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/(2*etaKminus1**2) - (5*Delta1**4*Delta1_prmS2z - 5*Delta1**3*Delta2_prmS2z - 15*Delta1**2*Delta1_prmS2z*Delta2 + 5*Delta1**2*Delta3_prmS2z + 10*Delta1*Delta1_prmS2z*Delta3 + 10*Delta1*Delta2*Delta2_prmS2z - 5*Delta1*Delta4_prmS2z + 5*Delta1_prmS2z*Delta2**2 - 5*Delta1_prmS2z*Delta4 - 5*Delta2*Delta3_prmS2z - 5*Delta2_prmS2z*Delta3)/(5*etaKminus1**2) + etaKminus1_prmS2z*(2*Delta1**5 - 10*Delta1**3*Delta2 + 10*Delta1**2*Delta3 + 10*Delta1*Delta2**2 - 10*Delta1*Delta4 - 10*Delta2*Delta3)/(5*etaKminus1**3)) + etaKminus1*etaKminus1_prmS2z*(256*EMgamma/5 + 2*a**2*(-Delta1**3 + 3*Delta1*Delta2 - 3*Delta3)/3 + 2*eta*(-221/6 + 41*np.pi**2/32) - 4237/30 + 512*np.log(2)/5 + 2275*np.pi**2/256 + (Delta1**4 - 4*Delta1**2*Delta2 + 4*Delta1*Delta3 + 2*Delta2**2 - 4*Delta4)/etaKminus1 - 2*(Delta1**5 - 5*Delta1**3*Delta2 + 5*Delta1**2*Delta3 + 5*Delta1*Delta2**2 - 5*Delta1*Delta4 - 5*Delta2*Delta3)/(5*etaKminus1**2))
    Delta5l_prmS2z = 128*etaKminus1*etaKminus1_prmS2z/5
    logarg_prmS2z = u*(Delta1_prmS2z + u*(Delta2_prmS2z + u*(Delta3_prmS2z + u*(Delta4_prmS2z + u*(Delta5l_prmS2z*np.log(u) + Delta5_prmS2z)))))
    Deltaucalib_prmS2z = eta*(Delta0_prmS2z + logarg_prmS2z*np.sign(logarg + 1)/np.abs(logarg + 1))
    Deltaucalibprime_prmS2z = eta*logarg_prmS2z*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(Delta1_prmS2z + u*(2*Delta2_prmS2z + u*(3*Delta3_prmS2z + u*(4*Delta4_prmS2z + u*(5*Delta5l_prmS2z*np.log(u) + 5*Delta5_prmS2z)))))/(logarg + 1)
    Deltaubar_prmS2z = 2*a*a_prmS2z*u**2 + etaKminus1_prmS2z*(-2*u - 1/etaKminus1)/etaKminus1**2 - etaKminus1_prmS2z/etaKminus1**3
    Deltaubarprime_prmS2z = -4*a*a_prmS2z*u**3 + 2*etaKminus1_prmS2z*u**2/etaKminus1**2
    Deltau_prmS2z = (Deltaubar*Deltaucalib_prmS2z + Deltaubar_prmS2z*Deltaucalib)*np.sign(Deltaubar*Deltaucalib)
    Deltauprime_prmS2z = Deltaubar*Deltaucalibprime_prmS2z + Deltaubarprime*Deltaucalib_prmS2z + Deltaubarprime_prmS2z*Deltaucalib + Deltaubar_prmS2z*Deltaucalibprime
    Deltatprime_prmS2z = Deltauprime_prmS2z*r**2 + 2*Deltau_prmS2z*r
    Deltat_prmS2z = Deltau_prmS2z*r**2
    Deltar_prmS2z = Deltat_prmS2z*Dinv
    Deltarprime_prmS2z = Deltatprime_prmS2z*Dinv + Deltat_prmS2z*Dinvprime
    Lambt_prmS2z = (Deltat*a**2*sin2theta_prmS2z + 2*Deltat*a*a_prmS2z*sin2theta + Deltat_prmS2z*a**2*sin2theta - 2*w2*w2_prmS2z)*np.sign(Deltat*a**2*sin2theta - w2**2)
    csi_prmS2z = (Deltar*Deltat_prmS2z + Deltar_prmS2z*Deltat)*np.sign(Deltar*Deltat)/(2*w2*np.sqrt(np.abs(Deltar*Deltat))) - w2_prmS2z*np.sqrt(np.abs(Deltar*Deltat))/w2**2
    csiprime_prmS2z = 4.0*r*w2_prmS2z*np.sqrt(Deltar*Deltat)/w2**3 + (Deltar*Deltatprime_prmS2z + Deltarprime*Deltat_prmS2z + Deltarprime_prmS2z*Deltat + Deltar_prmS2z*Deltatprime)/(2*w2*np.sqrt(Deltar*Deltat)) - w2_prmS2z*(Deltar*Deltatprime + Deltarprime*Deltat)/(2*w2**2*np.sqrt(Deltar*Deltat)) - 2.0*r*np.sqrt(Deltar*Deltat)*(Deltar*Deltat_prmS2z/2 + Deltar_prmS2z*Deltat/2)/(Deltar*Deltat*w2**2) + (Deltar*Deltatprime + Deltarprime*Deltat)*(-Deltar*Deltat_prmS2z/2 - Deltar_prmS2z*Deltat/2)/(2*Deltar*Deltat*w2*np.sqrt(Deltar*Deltat))
    csi1_prmS2z = csi_prmS2z*(1 - np.abs(tortoise - 1))
    csi2_prmS2z = csi_prmS2z*(1/2 - np.sign(3/2 - tortoise)/2)
    prT_prmS2z = csi2_prmS2z*(n1*p1 + n2*p2 + n3*p3)
    phat3_prmS2z = n3*prT_prmS2z*(-1 + 1/csi1) - csi1_prmS2z*n3*prT/csi1**2
    phat2_prmS2z = n2*prT_prmS2z*(-1 + 1/csi1) - csi1_prmS2z*n2*prT/csi1**2
    phat1_prmS2z = n1*prT_prmS2z*(-1 + 1/csi1) - csi1_prmS2z*n1*prT/csi1**2
    pdotxir_prmS2z = r*(phat1*xi1_prmS2z + phat1_prmS2z*xi1 + phat2*xi2_prmS2z + phat2_prmS2z*xi2 + phat3*xi3_prmS2z + phat3_prmS2z*xi3)
    pdotn_prmS2z = n1*phat1_prmS2z + n2*phat2_prmS2z + n3*phat3_prmS2z
    pdotvr_prmS2z = r*(phat1*v1_prmS2z + phat1_prmS2z*v1 + phat2*v2_prmS2z + phat2_prmS2z*v2 + phat3*v3_prmS2z + phat3_prmS2z*v3)
    pphi_prmS2z = pdotxir_prmS2z
    Qcoeff2_prmS2z = -sin2theta_prmS2z/(Sigma*sin2theta**2) - Sigma_prmS2z/(Sigma**2*sin2theta)
    Qcoeff1_prmS2z = -Sigma*sin2theta_prmS2z/(Lambt*sin2theta**2) + Sigma_prmS2z/(Lambt*sin2theta) - Lambt_prmS2z*Sigma/(Lambt**2*sin2theta)
    DrSipn2_prmS2z = 2*Deltar*pdotn*pdotn_prmS2z/Sigma - Deltar*Sigma_prmS2z*pdotn**2/Sigma**2 + Deltar_prmS2z*pdotn**2/Sigma
    Q_prmS2z = DrSipn2_prmS2z + 2*Qcoeff1*pdotxir*pdotxir_prmS2z + Qcoeff1_prmS2z*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvr_prmS2z + Qcoeff2_prmS2z*pdotvr**2
    Qminus1_prmS2z = Q_prmS2z
    Jtilde_prmS2z = Deltar_prmS2z/(2*np.sqrt(Deltar))
    exp2mu_prmS2z = Sigma_prmS2z
    expmu_prmS2z = exp2mu_prmS2z/(2*np.sqrt(exp2mu))
    Brtilde_prmS2z = (np.sqrt(Deltar)*Deltatprime_prmS2z - 2*Deltat_prmS2z + Deltar_prmS2z*Deltatprime/(2*np.sqrt(Deltar)))/(2*np.sqrt(Deltar*Deltat)) + (np.sqrt(Deltar)*Deltatprime - 2*Deltat)*(-Deltar*Deltat_prmS2z/2 - Deltar_prmS2z*Deltat/2)/(2*Deltar*Deltat*np.sqrt(Deltar*Deltat))
    Btilde_prmS2z = Deltat_prmS2z/(2*np.sqrt(Deltat))
    exp2nu_prmS2z = Deltat*Sigma_prmS2z/Lambt - Deltat*Lambt_prmS2z*Sigma/Lambt**2 + Deltat_prmS2z*Sigma/Lambt
    expnu_prmS2z = exp2nu_prmS2z/(2*np.sqrt(exp2nu))
    omega_prmS2z = omegatilde_prmS2z/Lambt - Lambt_prmS2z*omegatilde/Lambt**2
    omegatildeprime_prmS2z = 2*a_prmS2z
    Lambtprime_prmS2z = -Deltatprime*a**2*sin2theta_prmS2z - 2*Deltatprime*a*a_prmS2z*sin2theta - Deltatprime_prmS2z*a**2*sin2theta + 8*a*a_prmS2z*r
    mucostheta_prmS2z = a**2*costheta_prmS2z/Sigma + 2*a*a_prmS2z*costheta/Sigma - Sigma_prmS2z*a**2*costheta/Sigma**2
    nucostheta_prmS2z = a**2*costheta*w2*(-Deltat_prmS2z + w2_prmS2z)/(Lambt*Sigma) + a**2*costheta*w2_prmS2z*(-Deltat + w2)/(Lambt*Sigma) + a**2*costheta_prmS2z*w2*(-Deltat + w2)/(Lambt*Sigma) + a*a_prmS2z*costheta*w2*(-2*Deltat + 2*w2)/(Lambt*Sigma) - Sigma_prmS2z*a**2*costheta*w2*(-Deltat + w2)/(Lambt*Sigma**2) - Lambt_prmS2z*a**2*costheta*w2*(-Deltat + w2)/(Lambt**2*Sigma)
    omegacostheta_prmS2z = -2*Deltat*a**2*costheta*omegatilde_prmS2z/Lambt**2 - 2*Deltat*a**2*costheta_prmS2z*omegatilde/Lambt**2 - 4*Deltat*a*a_prmS2z*costheta*omegatilde/Lambt**2 + 4*Deltat*Lambt_prmS2z*a**2*costheta*omegatilde/Lambt**3 - 2*Deltat_prmS2z*a**2*costheta*omegatilde/Lambt**2
    mur_prmS2z = -Sigma_prmS2z*r/Sigma**2 + Deltar_prmS2z/(2*Deltar**(3/2))
    nur_prmS2z = -Sigma_prmS2z*r/Sigma**2 + w2*(Deltatprime*w2_prmS2z + Deltatprime_prmS2z*w2 - 4*Deltat_prmS2z*r)/(2*Deltat*Lambt) + w2_prmS2z*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt) - Lambt_prmS2z*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat*Lambt**2) - Deltat_prmS2z*w2*(-4*Deltat*r + Deltatprime*w2)/(2*Deltat**2*Lambt)
    omegar_prmS2z = (Lambt*omegatildeprime_prmS2z - Lambtprime*omegatilde_prmS2z - Lambtprime_prmS2z*omegatilde + Lambt_prmS2z*omegatildeprime)/Lambt**2 + Lambt_prmS2z*(-2*Lambt*omegatildeprime + 2*Lambtprime*omegatilde)/Lambt**3
    dSO_prmS2z = 442.443*chi**2*chi_prmS2z*eta**2 - 1705.953*chi**2*chi_prmS2z*eta + 198.5961*chi**2*chi_prmS2z - 686.626*chi*chi_prmS2z*eta + 2495.29*chi_prmS2z*eta**2
    sigmacoeffTerm3_prmS2z = dSO_prmS2z*eta*u**3
    sigmacoeffTerm2_prmS2z = eta*(eta*r*(-6.125*DrSipn2_prmS2z*u**2 + 1.41666666666667*Qminus1_prmS2z*u**2 + r*(11.25*DrSipn2*DrSipn2_prmS2z*u**2 - 1.625*DrSipn2*Qminus1_prmS2z*u**2 - 1.625*DrSipn2_prmS2z*Qminus1*u**2)) + r*(-0.666666666666667*DrSipn2_prmS2z*u**2 - 3.02777777777778*Qminus1_prmS2z*u**2 + r*(0.25*DrSipn2*Qminus1_prmS2z*u**2 + 0.25*DrSipn2_prmS2z*Qminus1*u**2 - 0.625*Qminus1*Qminus1_prmS2z*u**2)))
    sigmacoeffTerm1_prmS2z = eta*(-3*DrSipn2_prmS2z + Qminus1_prmS2z/4)
    sigmacoeff_prmS2z = sigmacoeffTerm1_prmS2z + sigmacoeffTerm2_prmS2z + sigmacoeffTerm3_prmS2z
    sigmastarcoeffTerm2_prmS2z = eta*(eta*r*(-324*DrSipn2_prmS2z + 120*Qminus1_prmS2z + r*(720*DrSipn2*DrSipn2_prmS2z + Qminus1*(-126*DrSipn2_prmS2z - 3*Qminus1_prmS2z) + Qminus1_prmS2z*(-126*DrSipn2 - 3*Qminus1))) + r*(282*DrSipn2_prmS2z + Qminus1*r*(96*DrSipn2_prmS2z - 23*Qminus1_prmS2z) + Qminus1_prmS2z*r*(96*DrSipn2 - 23*Qminus1) - 206*Qminus1_prmS2z))/(72*r**2)
    sigmastarcoeffTerm1_prmS2z = eta*(-5*DrSipn2_prmS2z/2 + Qminus1_prmS2z/3)
    sigmastarcoeff_prmS2z = sigmastarcoeffTerm1_prmS2z + sigmastarcoeffTerm2_prmS2z
    Deltasigmastar3_prmS2z = sigma3*sigmacoeff_prmS2z + sigma3_prmS2z*sigmacoeff + sigmastar3*sigmastarcoeff_prmS2z + sigmastar3_prmS2z*sigmastarcoeff
    Deltasigmastar2_prmS2z = sigma2*sigmacoeff_prmS2z + sigmastar2*sigmastarcoeff_prmS2z
    Deltasigmastar1_prmS2z = sigma1*sigmacoeff_prmS2z + sigmastar1*sigmastarcoeff_prmS2z
    Sstar3_prmS2z = Deltasigmastar3_prmS2z + sigmastar3_prmS2z
    Sstar2_prmS2z = Deltasigmastar2_prmS2z
    Sstar1_prmS2z = Deltasigmastar1_prmS2z
    S3_prmS2z = Sstar3_prmS2z
    S2_prmS2z = Sstar2_prmS2z
    S1_prmS2z = Sstar1_prmS2z
    Sstardotn_prmS2z = Sstar1_prmS2z*n1 + Sstar2_prmS2z*n2 + Sstar3_prmS2z*n3
    Sdote3_prmS2z = S1*e31_prmS2z + S1_prmS2z*e31 + S2*e32_prmS2z + S2_prmS2z*e32 + S3*e33_prmS2z + S3_prmS2z*e33
    Sdotn_prmS2z = S1_prmS2z*n1 + S2_prmS2z*n2 + S3_prmS2z*n3
    Sdotv_prmS2z = S1*v1_prmS2z + S1_prmS2z*v1 + S2*v2_prmS2z + S2_prmS2z*v2 + S3*v3_prmS2z + S3_prmS2z*v3
    Sdotxi_prmS2z = S1*xi1_prmS2z + S1_prmS2z*xi1 + S2*xi2_prmS2z + S2_prmS2z*xi2 + S3*xi3_prmS2z + S3_prmS2z*xi3
    HdsumTerm2_prmS2z = 6*Sstardotn*Sstardotn_prmS2z
    HdsumTerm1_prmS2z = 2*Sstar1*Sstar1_prmS2z + 2*Sstar2*Sstar2_prmS2z + 2*Sstar3*Sstar3_prmS2z
    Hdsum_prmS2z = HdsumTerm1_prmS2z - HdsumTerm2_prmS2z
    Q4_prmS2z = eta*prT**3*prT_prmS2z*u**2*(32 - 24*eta)
    gammappsum_prmS2z = 2*Deltar*pdotn*pdotn_prmS2z/Sigma - Deltar*Sigma_prmS2z*pdotn**2/Sigma**2 + Deltar_prmS2z*pdotn**2/Sigma - pdotvr**2*sin2theta_prmS2z/(Sigma*sin2theta**2) + 2*pdotvr*pdotvr_prmS2z/(Sigma*sin2theta) - Sigma_prmS2z*pdotvr**2/(Sigma**2*sin2theta) - Sigma*pdotxir**2*sin2theta_prmS2z/(Lambt*sin2theta**2) + 2*Sigma*pdotxir*pdotxir_prmS2z/(Lambt*sin2theta) + Sigma_prmS2z*pdotxir**2/(Lambt*sin2theta) - Lambt_prmS2z*Sigma*pdotxir**2/(Lambt**2*sin2theta)
    Hnsradicand_prmS2z = Q4_prmS2z + gammappsum_prmS2z
    alpha_prmS2z = Lambt*np.sqrt(Deltat*Sigma/Lambt)*(Deltat*Sigma_prmS2z/(2*Lambt) - Deltat*Lambt_prmS2z*Sigma/(2*Lambt**2) + Deltat_prmS2z*Sigma/(2*Lambt))/(Deltat*Sigma)
    betapsum_prmS2z = omegatilde*pphi_prmS2z/Lambt + omegatilde_prmS2z*pphi/Lambt - Lambt_prmS2z*omegatilde*pphi/Lambt**2
    HssTerm3_prmS2z = Btilde**2*(Sdotn*exp2mu*xisq*(-Q_prmS2z - Q_prmS2z/(2*np.sqrt(Q))) + Sdotn*exp2mu*xisq_prmS2z*(-np.sqrt(Q) - Q) + Sdotn*exp2mu_prmS2z*xisq*(-np.sqrt(Q) - Q) + Sdotn_prmS2z*exp2mu*xisq*(-np.sqrt(Q) - Q) + pdotvr*(-Jtilde*Sdotv*pdotn_prmS2z - Jtilde*Sdotv_prmS2z*pdotn - Jtilde_prmS2z*Sdotv*pdotn + Sdotn*pdotvr_prmS2z + Sdotn_prmS2z*pdotvr) + pdotvr_prmS2z*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + Btilde*Btilde_prmS2z*(-2*Sdotn*exp2mu*xisq*(np.sqrt(Q) + Q) + 2*pdotvr*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr)) + expmu*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn_prmS2z + Btilde*Jtilde*Sdotxi_prmS2z*pdotn + Btilde*Jtilde_prmS2z*Sdotxi*pdotn + Btilde_prmS2z*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir_prmS2z - Sdotn*expmu*expnu_prmS2z*pdotxir - Sdotn*expmu_prmS2z*expnu*pdotxir - Sdotn_prmS2z*expmu*expnu*pdotxir) + expmu*expnu*pdotxir_prmS2z*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu*expnu_prmS2z*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir) + expmu_prmS2z*expnu*pdotxir*(Btilde*Jtilde*Sdotxi*pdotn - Sdotn*expmu*expnu*pdotxir)
    HssTerm3coeff_prmS2z = omegacostheta*(-Q_prmS2z - Q_prmS2z/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*(np.sqrt(Q) + Q)**2) + omegacostheta_prmS2z/(Btilde*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - expnu_prmS2z*omegacostheta/(Btilde*exp2mu*expmu*expnu**2*(2*np.sqrt(Q) + 2*Q)) - expmu_prmS2z*omegacostheta/(Btilde*exp2mu*expmu**2*expnu*(2*np.sqrt(Q) + 2*Q)) - exp2mu_prmS2z*omegacostheta/(Btilde*exp2mu**2*expmu*expnu*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS2z*omegacostheta/(Btilde**2*exp2mu*expmu*expnu*(2*np.sqrt(Q) + 2*Q))
    HssTerm2_prmS2z = Btilde**2*xisq*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn_prmS2z - Jtilde*Sdotv_prmS2z*pdotn - Jtilde_prmS2z*Sdotv*pdotn + Sdotn*pdotvr_prmS2z + Sdotn_prmS2z*pdotvr) + Jtilde*pdotn_prmS2z*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Jtilde_prmS2z*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(Q_prmS2z + Q_prmS2z/(2*np.sqrt(Q))) + Sdotv*exp2mu_prmS2z*(np.sqrt(Q) + Q) + Sdotv_prmS2z*exp2mu*(np.sqrt(Q) + Q)) + Btilde**2*xisq_prmS2z*(Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + Sdotv*exp2mu*(np.sqrt(Q) + Q)) + Btilde*Btilde_prmS2z*xisq*(2*Jtilde*pdotn*(-Jtilde*Sdotv*pdotn + Sdotn*pdotvr) + 2*Sdotv*exp2mu*(np.sqrt(Q) + Q)) + expmu*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr_prmS2z - Btilde*Sdotxi*expnu_prmS2z*pdotvr - Btilde*Sdotxi_prmS2z*expnu*pdotvr - Btilde_prmS2z*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir_prmS2z + Sdotv*exp2nu*expmu_prmS2z*pdotxir + Sdotv*exp2nu_prmS2z*expmu*pdotxir + Sdotv_prmS2z*exp2nu*expmu*pdotxir) + expmu*pdotxir_prmS2z*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir) + expmu_prmS2z*pdotxir*(-Btilde*Sdotxi*expnu*pdotvr + Sdotv*exp2nu*expmu*pdotxir)
    HssTerm2coeff_prmS2z = Jtilde*omegar*(-Q_prmS2z - Q_prmS2z/(2*np.sqrt(Q)))/(2*Btilde*exp2mu*expmu*expnu*xisq*(np.sqrt(Q) + Q)**2) - Jtilde*omegar*xisq_prmS2z/(Btilde*exp2mu*expmu*expnu*xisq**2*(2*np.sqrt(Q) + 2*Q)) + Jtilde*omegar_prmS2z/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expnu_prmS2z*omegar/(Btilde*exp2mu*expmu*expnu**2*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*expmu_prmS2z*omegar/(Btilde*exp2mu*expmu**2*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Jtilde*exp2mu_prmS2z*omegar/(Btilde*exp2mu**2*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) + Jtilde_prmS2z*omegar/(Btilde*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q)) - Btilde_prmS2z*Jtilde*omegar/(Btilde**2*exp2mu*expmu*expnu*xisq*(2*np.sqrt(Q) + 2*Q))
    HssTerm1_prmS2z = Sdote3*omega_prmS2z + Sdote3_prmS2z*omega
    Hss_prmS2z = HssTerm1_prmS2z + HssTerm2*HssTerm2coeff_prmS2z + HssTerm2coeff*HssTerm2_prmS2z + HssTerm3*HssTerm3coeff_prmS2z + HssTerm3coeff*HssTerm3_prmS2z
    HsoTerm2c_prmS2z = Brtilde*Jtilde*Sdotv*expmu*expnu*pdotxir_prmS2z*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu*expnu_prmS2z*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv*expmu_prmS2z*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Sdotv_prmS2z*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde*Jtilde*Q_prmS2z*Sdotv*expmu*expnu*pdotxir/(2*np.sqrt(Q)) + Brtilde*Jtilde_prmS2z*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1) + Brtilde_prmS2z*Jtilde*Sdotv*expmu*expnu*pdotxir*(np.sqrt(Q) + 1)
    HsoTerm2b_prmS2z = Btilde*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur_prmS2z + Jtilde*Sdotv_prmS2z*nur + Jtilde_prmS2z*Sdotv*nur - Sdotn*nucostheta*xisq_prmS2z - Sdotn*nucostheta_prmS2z*xisq - Sdotn_prmS2z*nucostheta*xisq) + Btilde*expmu*expnu*pdotxir_prmS2z*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu*expnu_prmS2z*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*expmu_prmS2z*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq) + Btilde*Q_prmS2z*expmu*expnu*pdotxir*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)/np.sqrt(Q) + Btilde_prmS2z*expmu*expnu*pdotxir*(2*np.sqrt(Q) + 1)*(Jtilde*Sdotv*nur - Sdotn*nucostheta*xisq)
    HsoTerm2a_prmS2z = Btilde**2*Jtilde*Sdotxi*(-np.sqrt(Q)*(nur*pdotvr_prmS2z + nur_prmS2z*pdotvr + pdotn*xisq*(mucostheta_prmS2z - nucostheta_prmS2z) + pdotn*xisq_prmS2z*(mucostheta - nucostheta) + pdotn_prmS2z*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq_prmS2z - mucostheta*pdotn_prmS2z*xisq - mucostheta_prmS2z*pdotn*xisq + mur*pdotvr_prmS2z*(np.sqrt(Q) + 1) + mur_prmS2z*pdotvr*(np.sqrt(Q) + 1) + Q_prmS2z*mur*pdotvr/(2*np.sqrt(Q)) + Q_prmS2z*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta))/(2*np.sqrt(Q))) + Btilde**2*Jtilde*Sdotxi_prmS2z*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde**2*Jtilde_prmS2z*Sdotxi*(np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - mucostheta*pdotn*xisq + mur*pdotvr*(np.sqrt(Q) + 1)) + Btilde*Btilde_prmS2z*Jtilde*Sdotxi*(2*np.sqrt(Q)*(-nur*pdotvr - pdotn*xisq*(mucostheta - nucostheta)) - 2*mucostheta*pdotn*xisq + 2*mur*pdotvr*(np.sqrt(Q) + 1))
    HsoTerm2_prmS2z = HsoTerm2a_prmS2z + HsoTerm2b_prmS2z - HsoTerm2c_prmS2z
    HsoTerm2coeff_prmS2z = expnu*(-Q_prmS2z - Q_prmS2z/(2*np.sqrt(Q)))/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)**2) - expnu*xisq_prmS2z/(Deltat*exp2mu*xisq**2*(np.sqrt(Q) + Q)) + expnu_prmS2z/(Deltat*exp2mu*xisq*(np.sqrt(Q) + Q)) - exp2mu_prmS2z*expnu/(Deltat*exp2mu**2*xisq*(np.sqrt(Q) + Q)) - Deltat_prmS2z*expnu/(Deltat**2*exp2mu*xisq*(np.sqrt(Q) + Q))
    HsoTerm1_prmS2z = Sdote3*exp2nu*pdotxir*(-Btilde_prmS2z + expmu*expnu_prmS2z + expmu_prmS2z*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3*exp2nu*pdotxir*xisq_prmS2z*(Btilde - expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq**2) + Sdote3*exp2nu*pdotxir_prmS2z*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Sdote3*exp2nu*expmu_prmS2z*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu**2*xisq) + Sdote3*exp2nu_prmS2z*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) + Sdote3_prmS2z*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat*np.sqrt(Q)*expmu*xisq) - Q_prmS2z*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(2*Deltat*Q**(3/2)*expmu*xisq) - Deltat_prmS2z*Sdote3*exp2nu*pdotxir*(-Btilde + expmu*expnu)/(Deltat**2*np.sqrt(Q)*expmu*xisq)
    Hso_prmS2z = HsoTerm1_prmS2z + HsoTerm2*HsoTerm2coeff_prmS2z + HsoTerm2coeff*HsoTerm2_prmS2z
    Hd_prmS2z = Hdcoeff*Hdsum_prmS2z
    Hns_prmS2z = np.sqrt(Hnsradicand)*alpha_prmS2z + betapsum_prmS2z + Hnsradicand_prmS2z*alpha/(2*np.sqrt(Hnsradicand))
    Hs_prmS2z = Hso_prmS2z + Hss_prmS2z
    dSS_prmS2z = 1585.533*chi**2*chi_prmS2z*eta**2 - 123.0009*chi**2*chi_prmS2z*eta + 2323.56*chi*chi_prmS2z*eta**3 - 652.65*chi*chi_prmS2z*eta**2 + 37.1964*chi_prmS2z*eta
    Heff_prmS2z = -Hd_prmS2z + Hns_prmS2z + Hs_prmS2z + 2*S2z*dSS*eta*u**4 + dSS_prmS2z*eta*u**4*(S1x**2 + S1y**2 + S1z**2 + S2x**2 + S2y**2 + S2z**2)
    Hreal_prmS2z = Heff_prmS2z*eta*np.sign(Heff)/np.sqrt(eta*(2*np.abs(Heff) - 2) + 1)
    return Hreal_prmS2z

