import numpy as np
def v4P_compute_csi_dcsi(m1=23., m2=10., tortoise=1, x=2.129681018601393e+01, y=0.000000000000000e+00, z=0.000000000000000e+00, p1=0.000000000000000e+00, p2=2.335391115580442e-01, p3=-4.235164736271502e-22, S1x=4.857667584940312e-03, S1y=9.715161660389764e-03, S1z=-1.457311842632286e-02, S2x=3.673094582185491e-03, S2y=-4.591302628615413e-03, S2z=5.509696538546906e-03):
    EMgamma = 0.577215664901532860606512090082402431
    M=m1+m2
    mu=m1*m2/M
    eta=mu/M
    r=np.sqrt(x*x+y*y+z*z)
    u=1/r
    sigmastar3=(m2/m1*S1z+m1/m2*S2z)/M/M
    sigmastar2 = (m2/m1*S1y + m1/m2*S2y)/M/M
    sigmastar1 = (m2/m1*S1x + m1/m2*S2x)/M/M
    sigma3=(S1z+S2z)/M/M
    sigma2 = (S1y + S2y)/M/M
    sigma1 = (S1x + S2x)/M/M
    Skerr3=sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag=np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3=Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a=Skerrmag
    L3=x*p2-y*p1
    L2 = z*p1 - x*p3
    L1 = y*p3 - z*p2
    Lnorm=np.sqrt(L1*L1+L2*L2+L3*L3)
    Lhat3=L3/Lnorm
    Lhat2 = L2/Lnorm
    Lhat1 = L1/Lnorm
    S2dotLhat=S2x*Lhat1+S2y*Lhat2+S2z*Lhat3
    S1dotLhat = S1x*Lhat1 + S1y*Lhat2 + S1z*Lhat3
    S1perp3=S1z-S1dotLhat*Lhat3
    S1perp2 = S1y - S1dotLhat*Lhat2
    S1perp1 = S1x - S1dotLhat*Lhat1
    S2perp3=S2z-S2dotLhat*Lhat3
    S2perp2 = S2y - S2dotLhat*Lhat2
    S2perp1 = S2x - S2dotLhat*Lhat1
    Sperp3=S1perp3+S2perp3
    Sperp2 = S1perp2 + S2perp2
    Sperp1 = S1perp1 + S2perp1
    n3=z/r
    n2 = y/r
    n1 = x/r
    lambdavec3=Lhat1*n2-Lhat2*n3
    lambdavec2 = Lhat3*n1 - Lhat1*n3
    lambdavec1 = Lhat2*n3 - Lhat3*n2
    lambdavecnorm=np.sqrt(lambdavec1*lambdavec1+lambdavec2*lambdavec2+lambdavec3*lambdavec3)
    lambdahat3=lambdavec3/lambdavecnorm
    lambdahat2 = lambdavec2/lambdavecnorm
    lambdahat1 = lambdavec1/lambdavecnorm
    lambdahat_dot_Skerrhat=lambdahat1*Skerrhat1+lambdahat2*Skerrhat2+lambdahat3*Skerrhat3
    lambdahat_cross_Skerrhat3=lambdahat1*Skerrhat2-lambdahat2*Skerrhat1
    lambdahat_cross_Skerrhat2 = lambdahat3*Skerrhat1 - lambdahat1*Skerrhat3
    lambdahat_cross_Skerrhat1 = lambdahat2*Skerrhat3 - lambdahat3*Skerrhat2
    Skerrhat_dot_n=Skerrhat1*n1+Skerrhat2*n2+Skerrhat3*n3
    cos_0_1_deg=0.9999983800004374
    sin_0_1_deg = 0.0017999990280001574
    TINYDOUBLE = 1e-100
    condition_lhs = 1 - np.abs(Skerrhat_dot_n)
    condition_rhs = 1e-8
    greaterthan_bound = np.divide(1,2)*(condition_lhs - condition_rhs + np.abs(condition_lhs - condition_rhs))/(condition_lhs - condition_rhs - TINYDOUBLE)
    lesserthan_equal_bound = np.divide(1,2)*(condition_lhs - condition_rhs - TINYDOUBLE - np.abs(condition_lhs - condition_rhs - TINYDOUBLE))/(condition_lhs - condition_rhs - TINYDOUBLE)
    e31 = Skerrhat1*greaterthan_bound + (Skerrhat1*cos_0_1_deg + lambdahat_cross_Skerrhat1*sin_0_1_deg + lambdahat1*lambdahat_dot_Skerrhat*(1 - cos_0_1_deg))*lesserthan_equal_bound
    e32 = Skerrhat2*greaterthan_bound + (Skerrhat2*cos_0_1_deg + lambdahat_cross_Skerrhat2*sin_0_1_deg + lambdahat2*lambdahat_dot_Skerrhat*(1 - cos_0_1_deg))*lesserthan_equal_bound
    e33 = Skerrhat3*greaterthan_bound + (Skerrhat3*cos_0_1_deg + lambdahat_cross_Skerrhat3*sin_0_1_deg + lambdahat3*lambdahat_dot_Skerrhat*(1 - cos_0_1_deg))*lesserthan_equal_bound
    xi3=e31*n2-e32*n1
    xi2 = -e31*n3 + e33*n1
    xi1 = e32*n3 - e33*n2
    v3=n1*xi2-n2*xi1
    v2 = n3*xi1 - n1*xi3
    v1 = n2*xi3 - n3*xi2
    costheta=e31*n1+e32*n2+e33*n3
    sin2theta=1-costheta*costheta
    xisq = sin2theta
    w2=a*a+r*r
    Sigma=r*r+a*a*costheta*costheta
    Dinv=1+np.log(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    Dinvprime = -u*u*(12*eta*u + 6*(26 - 3*eta)*eta*u*u)/(1 + 6*eta*u*u + 2*(26 - 3*eta)*eta*u*u*u)
    omegatilde=2*a*r
    chi=(Skerr1*Lhat1+Skerr2*Lhat2+Skerr3*Lhat3)/(1-2*eta)+np.divide(1,2)*(Sperp1*Skerr1+Sperp2*Skerr2+Sperp3*Skerr3)/(Skerrmag*(1.-2.*eta))
    Kchi0=267.788*eta*eta*eta-126.687*eta*eta+10.2573*eta+1.7336
    K=-59.1658*chi*chi*chi*eta*eta*eta-0.426958*chi*chi*chi*eta+1.43659*chi*chi*chi+31.1746*chi*chi*eta*eta*eta+6.16466*chi*chi*eta*eta-1.38086*chi*chi-27.5201*chi*eta*eta*eta+17.3736*chi*eta*eta+2.26831*chi*eta-1.62045*chi+Kchi0
    etaKminus1 = eta*K - 1
    Delta0=K*(eta*K-2)
    Delta1=-2*etaKminus1*(K+Delta0)
    Delta2=np.divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3=-np.divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4=np.divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.divide(94,3)-np.divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5=etaKminus1*etaKminus1*(np.divide(-4237,60)+np.divide(128,5)*EMgamma+np.divide(2275,512)*np.pi*np.pi-np.divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.divide(256,5)*np.log(2)+(np.divide(41,32)*np.pi*np.pi-np.divide(221,6))*eta)
    Delta5l=etaKminus1*etaKminus1*np.divide(64,5)
    logarg=u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1 + eta*(Delta0 + np.log(np.abs(1 + logarg)))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar=a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u - 2*u*u/(etaKminus1)
    Deltau=np.abs(Deltaubar*Deltaucalib)
    Deltauprime = Deltaubarprime*Deltaucalib + Deltaubar*Deltaucalibprime
    Deltatprime=2*r*Deltau+r*r*Deltauprime
    Deltat=r*r*Deltau
    Deltar=Deltat*Dinv
    Deltarprime = Deltatprime*Dinv + Deltat*Dinvprime
    Lambdat=np.abs(w2*w2-a*a*Deltat*sin2theta)
    csi=np.sqrt(np.abs(Deltar*Deltat))/w2
    csiprime = (Deltatprime*Deltar + Deltarprime*Deltat)/(2*np.sqrt(Deltar*Deltat)*w2) - 2.*r*np.sqrt(Deltat*Deltar)/(w2*w2)
    return [csi, csiprime] 