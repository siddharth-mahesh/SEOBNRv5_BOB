import numpy as np
def v5HM_optimized_hamiltonian_first_derivatives(m1 , m2, r , prstar , pphi , chi1 , chi2 , a6 , dSO):
    tmp0 = ((r)*(r)*(r))
    tmp1 = m1 + m2
    tmp16 = ((r)*(r))
    tmp23 = (1.0/(r))
    tmp27 = ((pphi)*(pphi))
    tmp29 = ((m1)*(m1))
    tmp30 = ((m2)*(m2))
    tmp36 = ((r)*(r)*(r)*(r))
    tmp38 = ((pphi)*(pphi)*(pphi)*(pphi))
    tmp49 = ((prstar)*(prstar)*(prstar)*(prstar))
    tmp50 = np.power(r, -4.5)
    tmp52 = np.power(prstar, 6)
    tmp53 = np.power(r, -3.5)
    tmp55 = np.power(r, -2.5)
    tmp56 = np.power(prstar, 8)
    tmp62 = ((m1)*(m1)*(m1))
    tmp63 = ((m2)*(m2)*(m2))
    tmp70 = np.log(r)
    tmp100 = ((r)*(r)*(r)*(r)*(r))
    tmp104 = 8.0*r
    tmp106 = 7680.0*a6
    tmp107 = 128.0*r
    tmp108 = 7704.0*r
    tmp109 = 148.04406601634*r
    tmp110 = 113485.217444961*r
    tmp144 = ((prstar)*(prstar))
    tmp181 = np.power(r, -6)
    tmp200 = ((prstar)*(prstar)*(prstar))
    tmp201 = ((prstar)*(prstar)*(prstar)*(prstar)*(prstar))
    tmp202 = np.power(prstar, 7)
    tmp2 = (1.0/((tmp1)*(tmp1)))
    tmp5 = chi1*m1 + chi2*m2
    tmp10 = (1.0/(tmp0))
    tmp13 = (1.0/((tmp1)*(tmp1)*(tmp1)))
    tmp17 = (1.0/(tmp16))
    tmp18 = (1.0/((tmp1)*(tmp1)*(tmp1)*(tmp1)))
    tmp19 = chi1*m1 - chi2*m2
    tmp37 = (1.0/(tmp36))
    tmp59 = 0.12195486878044901*tmp56
    tmp64 = np.power(tmp1, -6)
    tmp73 = ((m1)*(m1)*(m1)*(m1))*((m2)*(m2)*(m2)*(m2))/np.power(tmp1, 8)
    tmp78 = 2*tmp23 + 1
    tmp88 = ((tmp70)*(tmp70))
    tmp105 = 2.0*tmp0 + tmp104 + 4.0*tmp16 + 16.0
    tmp143 = (1.0/(tmp100))
    tmp187 = tmp104 + 6.0*tmp16 + 8.0
    tmp196 = 11575876386816.0*tmp70
    tmp203 = 4*tmp200
    tmp6 = ((tmp5)*(tmp5))
    tmp20 = tmp19*(m1 - m2)
    tmp24 = m1*m2*tmp2
    tmp28 = tmp17*tmp27
    tmp32 = tmp18*tmp29*tmp30
    tmp34 = tmp10*tmp27
    tmp40 = tmp5/tmp1
    tmp65 = tmp62*tmp63*tmp64
    tmp139 = ((tmp19)*(tmp19))*tmp2
    tmp146 = 5787938193408.0*tmp88
    tmp172 = 3*tmp37
    tmp174 = 2*tmp10
    tmp176 = 4*tmp143
    tmp207 = 2*pphi*tmp17
    tmp209 = 4*((pphi)*(pphi)*(pphi))*tmp37
    tmp7 = tmp2*tmp6
    tmp15 = dSO*m1*m2*tmp13*tmp5
    tmp21 = -tmp13*((tmp5)*(tmp5)*(tmp5)) + tmp18*tmp20*tmp6
    tmp25 = (23.0/32.0)*tmp24 - 3.0/32.0
    tmp26 = -45.0/32.0*tmp24 - 15.0/32.0
    tmp31 = (109.0/192.0)*tmp18*tmp29*tmp30 - 177.0/32.0*tmp24 - 5.0/64.0
    tmp33 = -267.0/128.0*tmp24 - 1591.0/768.0*tmp32 + 59.0/256.0
    tmp35 = (75.0/128.0)*tmp24 + (345.0/256.0)*tmp32 + 105.0/256.0
    tmp41 = (11.0/32.0)*tmp24 + 3.0/32.0
    tmp42 = 15.0/32.0 - 9.0/32.0*tmp24
    tmp43 = -1.0/32.0*tmp24 + (103.0/192.0)*tmp32 + 5.0/64.0
    tmp44 = -35.0/128.0*tmp24 - 613.0/768.0*tmp32 - 59.0/256.0
    tmp45 = (75.0/256.0)*tmp18*tmp29*tmp30 - 45.0/128.0*tmp24 - 105.0/256.0
    tmp46 = tmp2*tmp20
    tmp58 = tmp23*tmp24
    tmp60 = 8.0*m1*m2*tmp2 - 6.0*tmp32
    tmp66 = 92.711044284954397*tmp24 - 131.0*tmp32 + 10.0*tmp65
    tmp68 = -2.7830076369500598*tmp24 - 5.4000000000000004*tmp32 + 6.0*tmp62*tmp63*tmp64
    tmp71 = tmp24*(452.54216699669303 - 51.695238095238103*tmp70) + tmp32*(118.40000000000001*tmp70 - 1796.13660498019) + 602.31854041656402*tmp65
    tmp74 = -33.978212217043598*tmp24 - 89.529832736123396*tmp32 + 188.0*tmp62*tmp63*tmp64 - 14.0*tmp73
    tmp76 = 1.3897775099612799*tmp24 + 3.3384202364832198*tmp32 + 3.4285714285714302*tmp65 - 6.0*tmp73
    tmp89 = r*tmp24
    tmp91 = 14700.0*tmp24 + 42911.0
    tmp93 = r*tmp32
    tmp95 = 5041721180160.0*tmp32
    tmp102 = tmp65*(-163683964.82255101*r - 17833256.898554999*tmp16 - 1188987459.03162)
    tmp103 = tmp32*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.11560404*a6 + 122635399361.987*r - 6178501407.5375795*tmp0 + 1426660551.8843999*tmp100 + 2064783811.32587*tmp16 - 3089250703.7687898*tmp36 + 276057889687.01099)
    tmp111 = tmp24*(tmp106*(tmp105 + tmp36) + tmp107*(13218.7851094412*r + 4264.6962773603*tmp0 + 8529.3925547206109*tmp16 - 6852.3481386801504*tmp36 - 33722.4297811176) + tmp109*(1926.0*tmp0 + tmp108 + 3852.0*tmp16 + 349.0*tmp36 + 36400.0) + tmp110*(tmp105 - tmp36))
    tmp112 = 588.0*tmp24 + 1079.0
    tmp113 = 756.0*tmp24
    tmp117 = tmp24*tmp70
    tmp126 = -630116198.87329912*tmp24 - 197773496.79353401*tmp32 + 5805304367.8791304
    tmp128 = -2675575.66847905*tmp24 - 138240.0*tmp32 - 5278341.3229328999
    tmp130 = tmp24*(-2510664218.2812872*tmp24 - 42636451.603233099*tmp32 + 14515200.0*tmp65 + 1002013764.01019)
    tmp131 = ((1 - 0.49694878161693501*tmp24)*(1 - 0.49694878161693501*tmp24))
    tmp138 = tmp13*tmp20*tmp5
    tmp148 = 1822680546449.21*tmp32
    tmp173 = 2*tmp34
    tmp190 = -1759846072320.0*r - 4161798144000.0*tmp24 - 12148770078720.0
    tmp8 = tmp0 + tmp7*(r + 2)
    tmp22 = (1.0/4.0)*tmp17*tmp21
    tmp47 = tmp40*(tmp17*tmp31 + tmp23*tmp25 + tmp26*tmp28 + tmp33*tmp34 + tmp35*tmp37*tmp38 + 7.0/4.0) + tmp46*(tmp17*tmp43 + tmp23*tmp41 + tmp28*tmp42 + tmp34*tmp44 + tmp37*tmp38*tmp45 + 1.0/4.0)
    tmp85 = tmp17*tmp7
    tmp92 = r*tmp91
    tmp114 = tmp113 + 1079.0
    tmp120 = 336.0*r + tmp113 + 407.0
    tmp132 = 86618264430493.297*tmp131 + 43393301259014.688*tmp24 + 43133561885859.406*tmp32 + 5927865218923.0195*tmp65 + 188440788778196.0
    tmp134 = 49152.0*r*(409207698.13607502*tmp24 + 102574080.0*tmp32 - 2119671837.3603799) + 879923036160.0*tmp0 + 283115520.0*tmp16*tmp91 - 1698693120.0*tmp24*(11592.0*tmp24 + 69847.0)
    tmp140 = tmp138*((45.0/8.0)*tmp24 - 5.0/16.0) + tmp139*((75.0/32.0)*m1*m2*tmp2 - 15.0/8.0*tmp32 - 15.0/32.0) + tmp7*((165.0/32.0)*tmp24 - 5*tmp32 + 25.0/32.0)
    tmp154 = -21.0/8.0*tmp138 + tmp139*((3.0/4.0)*tmp24 - 3.0/16.0) + tmp7*(3*tmp24 + 45.0/16.0)
    tmp155 = tmp138*((13.0/16.0)*tmp24 + 449.0/32.0) + tmp139*((115.0/64.0)*tmp24 + (1.0/16.0)*tmp32 - 37.0/64.0) + tmp7*(-1171.0/64.0*tmp24 - 861.0/64.0)
    tmp164 = tmp138*(117.0/32.0 - 39.0/16.0*tmp24) + tmp139*((21.0/16.0)*tmp18*tmp29*tmp30 - 81.0/64.0*tmp24 - 9.0/64.0) + tmp7*(-175.0/64.0*tmp24 - 225.0/64.0)
    tmp165 = -5.0/4.0*tmp138 + tmp139*((1.0/2.0)*tmp24 + 1.0/8.0) + (9.0/8.0)*tmp7
    tmp180 = -tmp174*tmp7
    tmp9 = (1.0/(tmp8))
    tmp48 = pphi*tmp10*tmp15 + pphi*tmp22 + pphi*tmp47
    tmp80 = tmp16 + tmp7*tmp78
    tmp86 = tmp85 + 1
    tmp96 = -879923036160.0*tmp16 - 25392914995744.301*tmp24 - 283115520.0*tmp92 - tmp95 + 104186110149937.0
    tmp121 = 2048.0*m1*m2*tmp120*tmp2*tmp70 + 28.0*m1*m2*tmp2*(1920.0*a6 + 733955.30746303697) - 7.0*r*(938918.40015631705*m1*m2*tmp2 - 185763.09269328101*tmp32 - 245760.0) - 5416406.5954118604*tmp32 - 3440640.0
    tmp162 = tmp78*tmp85 + 1
    tmp193 = tmp70*(2639769108480.0*tmp16 + 20113376778784.359*tmp24 + 566231040.0*tmp92 + tmp95 - 104186110149937.39)
    tmp81 = (1.0/(tmp80))
    tmp87 = ((tmp86)*(tmp86)*(tmp86)*(tmp86))
    tmp116 = 240.0*r*(-7466.2706106620599*tmp24 - 3024.0*tmp32 + 17264.0) + 960.0*tmp0*tmp114 + 161280.0*tmp100 + 1920.0*tmp112*tmp16 + 480.0*tmp114*tmp36 - 38842241.476950698*tmp24 - 1882456.2366397199*tmp32 + 13447680.0
    tmp136 = 1.7277309580446458e-13*r*tmp132 + r*tmp88 - 1.6718906934806428e-7*tmp0*tmp128 - 1.5922768509339455e-9*tmp126*tmp16 + 9.5536611056036724e-9*tmp130 + 1.7277309580446458e-13*tmp134*tmp70
    tmp145 = ((tmp86)*(tmp86))
    tmp147 = r*tmp132 + r*tmp146 - 967680.0*tmp0*tmp128 - 9216.0*tmp126*tmp16 + 55296.0*tmp130 + tmp134*tmp70
    tmp163 = (1.0/(tmp162))
    tmp197 = -18432.0*r*tmp126 - 2903040.0*tmp128*tmp16 + tmp132 + tmp134*tmp23 + tmp146 + tmp193 + tmp196
    tmp198 = 10215490662751.42*r + tmp148 - tmp190*tmp70 + tmp196*tmp23 - tmp23*tmp96 + 5807150888816.3545*tmp24 + 5178202125747.6201*tmp89 + 267544166400.0*tmp93 - 53501685054374.008
    tmp83 = -tmp78*tmp81
    tmp98 = -0.14352105046684044*r + 0.0094128916415248589*tmp16*tmp24 + 0.00048633950287942822*tmp16*tmp32 + 0.018569631763766858*tmp16 - 0.04380844244600398*tmp24 + 0.29106204142837921*tmp32 + 0.024469282648975563*tmp65 - 3.6355829351353647e-15*tmp70*tmp96 + 0.021042529325572337*tmp88 + 0.038579573843421422*tmp89 - 1.18824456940711e-6*tmp92 + 0.0066265062908739489*tmp93 + 1
    tmp137 = ((tmp136)*(tmp136))
    tmp149 = r*tmp148 - 39476764256925.602*r + tmp146 + 2589101062873.8101*tmp16*tmp24 + 133772083200.0*tmp16*tmp32 + 5107745331375.71*tmp16 - 12049908701745.199*tmp24 + 80059249540278.203*tmp32 + 6730497718123.0195*tmp65 - tmp70*tmp96 + 10611661054566.199*tmp89 - 326837426.24148601*tmp92 + 275059053208689.0
    tmp157 = (1.0/(tmp147))
    tmp99 = (1.0/((tmp98)*(tmp98)))
    tmp119 = (1.0/(13212057600.0*tmp100 + 1120.0*tmp102 + 7.0*tmp103 + 53760.0*tmp111 + 32768.0*tmp116*tmp117 + 67645734912.0*tmp32*tmp88 + 241555486248.80701*tmp73))
    tmp150 = (1.0/(tmp149))
    tmp158 = tmp149*tmp157
    tmp188 = tmp121*(-32768.0*tmp116*tmp58 - 32768.0*tmp117*(3840.0*r*tmp112 + 1920.0*tmp0*tmp114 + 2880.0*tmp114*tmp16 - 1791904.9465588944*tmp24 - 725760.0*tmp32 + 806400.0*tmp36 + 4143360.0) - 135291469824.0*tmp23*tmp32*tmp70 - 53760.0*tmp24*(3740417.7181580453*r + 1057984.4295395112*tmp0 + tmp106*(4*tmp0 + tmp187) + tmp107*(17058.785109441222*r - 27409.392554720602*tmp0 + 12794.088832080899*tmp16 + 13218.7851094412) + tmp109*(1396.0*tmp0 + tmp108 + 5778.0*tmp16 + 7704.0) + tmp110*(-4*tmp0 + tmp187) + 2115968.8590790238*tmp16 - 938918.40015631751*tmp36 + 2888096.4701310992) - 7.0*tmp32*(-117964800.0*a6 + 4129567622.6517401*r - 12357002815.075159*tmp0 - 18535504222.61274*tmp16 + 7133302759.421999*tmp36 + 122635399361.987) - 66060288000.0*tmp36 - 1120.0*tmp65*(-35666513.797109999*r - 163683964.82255101))/((0.054695746327994038*tmp100 + 4.6366158657492777e-9*tmp102 + 2.8978849160932984e-11*tmp103 + 2.2255756155596532e-7*tmp111 + 1.3565413275792173e-7*tmp116*tmp117 + 0.28004222119932948*tmp32*tmp88 + tmp73)*(0.054695746327994038*tmp100 + 4.6366158657492777e-9*tmp102 + 2.8978849160932984e-11*tmp103 + 2.2255756155596532e-7*tmp111 + 1.3565413275792173e-7*tmp116*tmp117 + 0.28004222119932948*tmp32*tmp88 + tmp73))
    tmp122 = tmp119*tmp121
    tmp159 = 7680.0*tmp158
    tmp182 = tmp119*(688128.0*tmp117 + 2048.0*tmp120*tmp58 - 6572428.8010942191*tmp24 + 1300341.6488529672*tmp32 + 1720320.0)
    tmp189 = tmp188*tmp36
    tmp123 = tmp122*tmp36
    tmp152 = tmp147*tmp150*tmp23
    tmp156 = tmp100*tmp122
    tmp183 = tmp182*tmp36
    tmp184 = tmp0*tmp122
    tmp124 = tmp123 + 0.00013020833333333333*tmp85
    tmp160 = tmp10*tmp154 + tmp155*tmp37 + tmp156*tmp159 + tmp85
    tmp166 = 7680.0*tmp123 + tmp85
    tmp125 = (1.0/((tmp124)*(tmp124)*(tmp124)*(tmp124)))
    tmp153 = (1.0/((tmp124)*(tmp124)))
    tmp167 = tmp143*tmp164 + tmp165*tmp37 + tmp166
    tmp141 = tmp125*tmp137*tmp140*tmp49*tmp99
    tmp161 = tmp10*tmp49*tmp66 + tmp10*tmp52*tmp74 + 1.2727731413908503e-19*tmp141*tmp143*tmp87 + 1.6954210069444444e-8*tmp144*tmp145*tmp152*tmp153*tmp160 + tmp17*tmp49*tmp60 + tmp17*tmp52*tmp68 + tmp17*tmp56*tmp76 + 147.44375299014601*tmp24*tmp49*tmp50 - 11.317508579186301*tmp24*tmp52*tmp53 + 1.4827534202436501*tmp24*tmp55*tmp56 + tmp28*tmp7*tmp83 + tmp28 + tmp37*tmp49*tmp71 + tmp58*tmp59 + 1
    tmp169 = np.sqrt(tmp161*tmp163*tmp167)
    tmp170 = np.sqrt(2*tmp24*(tmp169 + tmp48*tmp9 - 1) + 1)
    tmp199 = tmp169/tmp161
    tmp171 = (1.0/(tmp170))
    Hreal = tmp170
    xi = tmp166*np.sqrt(r*tmp158)/tmp86
    dHreal_dr = tmp171*(tmp162*tmp199*((1.0/2.0)*tmp161*tmp163*(-5*tmp164*tmp181 - tmp165*tmp176 + tmp180 + 7680.0*tmp183 + 30720.0*tmp184 + 1.3162167359092606e-19*tmp189) + (1.0/2.0)*tmp161*tmp167*(tmp174*tmp7*tmp78 + 2*tmp37*tmp7)/((tmp162)*(tmp162)) + (1.0/2.0)*tmp163*tmp167*(39.611280027152056*m1*m2*tmp2*tmp50*tmp52 - 663.49688845565709*np.power(r, -5.5)*tmp24*tmp49 - 2*tmp10*tmp49*tmp60 + 1.2727731413908503e-19*tmp125*tmp136*tmp140*tmp143*tmp49*tmp87*tmp99*(-6.3691074037357819e-9*r*tmp126 - 1.0031344160883857e-6*tmp128*tmp16 + 29.930611397732129*tmp131 + 3.4554619160892917e-13*tmp134*tmp23 + 3.4554619160892917e-13*tmp193 + 14.994389991391477*tmp24 + 14.904638040186779*tmp32 + 2.0483512507698807*tmp65 + 4*tmp70 + 2*tmp88 + 65.114996906088265) + 1.2727731413908503e-19*tmp125*tmp137*tmp140*tmp143*tmp49*tmp87*(-0.074278527055067434*r + 7.2711658702707293e-15*tmp190*tmp70 - 0.084170117302289349*tmp23*tmp70 + 7.2711658702707293e-15*tmp23*tmp96 - 0.04222475734627381*tmp24 - 0.013253012581747898*tmp32 - 0.037651566566099436*tmp89 - 0.0019453580115177129*tmp93 + 0.38901962636933785)/((tmp98)*(tmp98)*(tmp98)) - 6.3638657069542515e-19*tmp141*tmp181*tmp87 + 1.6954210069444444e-8*tmp144*tmp145*tmp147*tmp150*tmp153*tmp23*(1.3162167359092606e-19*tmp100*tmp158*tmp188 + tmp100*tmp159*tmp182 + 38400.0*tmp123*tmp158 - tmp154*tmp172 - tmp155*tmp176 + 7680.0*tmp156*tmp157*tmp198 + tmp180 - 2.2925216742803477e-22*tmp149*tmp156*tmp197/tmp137) + 1.6954210069444444e-8*tmp144*tmp145*tmp153*tmp160*(-tmp147*tmp150*tmp17 - 1.3217463278247474e-29*tmp147*tmp198*tmp23*tmp99 + tmp150*tmp197*tmp23) - 6.7816840277777778e-8*tmp144*tmp147*tmp150*tmp153*tmp160*tmp37*tmp7*tmp86 - tmp17*tmp2*tmp27*tmp6*tmp78*(-2*r + 2*tmp17*tmp2*tmp6)/((tmp80)*(tmp80)) - tmp17*tmp24*tmp59 - tmp172*tmp52*tmp74 - tmp173*tmp7*tmp83 - tmp173 - tmp174*tmp52*tmp68 - tmp174*tmp56*tmp76 - tmp176*tmp49*tmp71 + 2*tmp2*tmp27*tmp37*tmp6*tmp81 - 3.7068835506091253*tmp24*tmp53*tmp56 - 3*tmp37*tmp49*tmp66 + tmp37*tmp49*(118.40000000000001*tmp23*tmp32 - 51.695238095238103*tmp58) + 1.6954210069444444e-8*tmp144*tmp145*tmp147*tmp150*tmp160*tmp23*(0.00052083333333333333*tmp10*tmp2*tmp6 - 2*tmp183 - 8*tmp184 - 3.4276477497636993e-23*tmp189)/((tmp124)*(tmp124)*(tmp124)) + 1.2727731413908503e-19*tmp137*tmp140*tmp143*tmp49*tmp87*tmp99*(0.0010416666666666667*tmp10*tmp2*tmp6 - 4*tmp183 - 16*tmp184 - 6.8552954995273987e-23*tmp189)/((tmp124)*(tmp124)*(tmp124)*(tmp124)*(tmp124)) - 1.0182185131126803e-18*tmp141*tmp7*((tmp86)*(tmp86)*(tmp86))/np.power(r, 8)))/tmp167 + tmp48*(-3*tmp16 - tmp7)/((tmp8)*(tmp8)) + tmp9*(-1.0/2.0*pphi*tmp10*tmp21 - pphi*tmp15*tmp172 + pphi*(tmp40*(-tmp17*tmp25 - tmp172*tmp27*tmp33 - tmp173*tmp26 - tmp174*tmp31 - tmp176*tmp35*tmp38) + tmp46*(-tmp17*tmp41 - tmp172*tmp27*tmp44 - tmp173*tmp42 - tmp174*tmp43 - tmp176*tmp38*tmp45))))
    dHreal_dprstar = (1.0/2.0)*tmp171*tmp199*(3.3908420138888889e-8*prstar*tmp145*tmp152*tmp153*tmp160 + 6*tmp10*tmp201*tmp74 + tmp10*tmp203*tmp66 + 5.0910925655634014e-19*tmp125*tmp137*tmp140*tmp143*tmp200*tmp87*tmp99 + 6*tmp17*tmp201*tmp68 + 8*tmp17*tmp202*tmp76 + tmp17*tmp203*tmp60 + 589.77501196058404*tmp200*tmp24*tmp50 - 67.905051475117801*tmp201*tmp24*tmp53 + 11.862027361949201*tmp202*tmp24*tmp55 + 0.97563895024359204*tmp202*tmp58 + tmp203*tmp37*tmp71)
    dHreal_dpphi = tmp171*((1.0/2.0)*tmp199*(2*pphi*tmp83*tmp85 + tmp207) + tmp9*(pphi*(tmp40*(pphi*tmp174*tmp33 + tmp207*tmp26 + tmp209*tmp35) + tmp46*(pphi*tmp174*tmp44 + tmp207*tmp42 + tmp209*tmp45)) + tmp10*tmp15 + tmp22 + tmp47))
    return np.array([dHreal_dr, 0., dHreal_dprstar, dHreal_dpphi]) , Hreal , xi
