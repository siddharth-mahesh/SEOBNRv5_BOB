import numpy as np
def v5HM_optimized_hamiltonian_second_derivatives(m1 , m2, r , prstar , pphi , chi1 , chi2 , a6 , dSO):
    tmp0 = ((r)*(r)*(r))
    tmp1 = m1 + m2
    tmp11 = ((r)*(r)*(r)*(r))
    tmp25 = ((r)*(r))
    tmp30 = ((pphi)*(pphi))
    tmp33 = ((m1)*(m1))
    tmp34 = ((m2)*(m2))
    tmp41 = ((pphi)*(pphi)*(pphi)*(pphi))
    tmp42 = ((r)*(r)*(r)*(r)*(r))
    tmp57 = (1.0/(r))
    tmp65 = ((prstar)*(prstar)*(prstar)*(prstar))
    tmp66 = np.power(r, -4.5)
    tmp69 = np.power(r, -3.5)
    tmp70 = np.power(prstar, 6)
    tmp73 = np.power(prstar, 8)
    tmp80 = ((m1)*(m1)*(m1))
    tmp81 = ((m2)*(m2)*(m2))
    tmp89 = np.log(r)
    tmp141 = 8.0*r
    tmp143 = 7680.0*a6
    tmp144 = 128.0*r
    tmp145 = 7704.0*r
    tmp146 = 148.04406601634*r
    tmp147 = 113485.217444961*r
    tmp166 = ((prstar)*(prstar))
    tmp200 = np.power(r, -6)
    tmp226 = np.power(r, -5.5)
    tmp237 = np.power(r, -8)
    tmp322 = np.power(r, -7)
    tmp331 = 12.0*r + 8.0
    tmp385 = ((pphi)*(pphi)*(pphi))
    tmp6 = chi1*m1 + chi2*m2
    tmp12 = (1.0/(tmp11))
    tmp15 = (1.0/((tmp1)*(tmp1)*(tmp1)))
    tmp19 = (1.0/(tmp0))
    tmp20 = (1.0/((tmp1)*(tmp1)*(tmp1)*(tmp1)))
    tmp21 = chi1*m1 - chi2*m2
    tmp26 = (1.0/(tmp25))
    tmp43 = (1.0/(tmp42))
    tmp77 = 0.12195486878044901*tmp73
    tmp82 = np.power(tmp1, -6)
    tmp93 = ((m1)*(m1)*(m1)*(m1))*((m2)*(m2)*(m2)*(m2))/np.power(tmp1, 8)
    tmp109 = ((tmp89)*(tmp89))
    tmp142 = 2.0*tmp0 + tmp141 + 4.0*tmp25 + 16.0
    tmp210 = tmp57*tmp89
    tmp212 = -117964800.0*a6 + 4129567622.6517401*r - 12357002815.075159*tmp0 + 7133302759.421999*tmp11 - 18535504222.61274*tmp25 + 122635399361.987
    tmp218 = tmp141 + 6.0*tmp25 + 8.0
    tmp262 = 11575876386816.0*tmp89
    tmp307 = 20*tmp200
    tmp347 = 1.2727731413908503e-18*tmp200
    tmp3 = (1.0/((tmp1)*(tmp1)))
    tmp7 = ((tmp6)*(tmp6))
    tmp13 = 3*tmp12
    tmp22 = tmp21*(m1 - m2)
    tmp31 = tmp19*tmp30
    tmp36 = 2*tmp19
    tmp37 = tmp20*tmp33*tmp34
    tmp44 = 4*tmp43
    tmp46 = tmp6/tmp1
    tmp58 = tmp26*tmp30
    tmp83 = tmp80*tmp81*tmp82
    tmp91 = tmp12*tmp65
    tmp99 = 2*tmp57 + 1
    tmp163 = tmp43*tmp65
    tmp168 = 5787938193408.0*tmp109
    tmp219 = 3740417.7181580453*r + 1057984.4295395112*tmp0 - 938918.40015631751*tmp11 + tmp143*(4*tmp0 + tmp218) + tmp144*(17058.785109441222*r - 27409.392554720602*tmp0 + 12794.088832080899*tmp25 + 13218.7851094412) + tmp146*(1396.0*tmp0 + tmp145 + 5778.0*tmp25 + 7704.0) + tmp147*(-4*tmp0 + tmp218) + 2115968.8590790238*tmp25 + 2888096.4701310992
    tmp302 = 12*tmp43
    tmp304 = 6*tmp12
    tmp320 = 4*tmp19
    tmp339 = tmp20*((tmp6)*(tmp6)*(tmp6)*(tmp6))
    tmp381 = ((tmp1)*(tmp1))/(m1*m2)
    tmp383 = 2*pphi*tmp26
    tmp8 = tmp3*tmp7
    tmp17 = dSO*m1*m2*tmp15*tmp6
    tmp23 = -tmp15*((tmp6)*(tmp6)*(tmp6)) + tmp20*tmp22*tmp7
    tmp27 = m1*m2*tmp3
    tmp32 = 2*tmp31
    tmp52 = tmp22*tmp3
    tmp78 = 8.0*m1*m2*tmp3 - 6.0*tmp37
    tmp116 = 5041721180160.0*tmp37
    tmp133 = tmp15*tmp22*tmp6
    tmp134 = ((tmp21)*(tmp21))*tmp3
    tmp139 = tmp83*(-163683964.82255101*r - 17833256.898554999*tmp25 - 1188987459.03162)
    tmp140 = tmp37*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.11560404*a6 + 122635399361.987*r - 6178501407.5375795*tmp0 - 3089250703.7687898*tmp11 + 2064783811.32587*tmp25 + 1426660551.8843999*tmp42 + 276057889687.01099)
    tmp170 = 1822680546449.21*tmp37
    tmp209 = tmp83*(-35666513.797109999*r - 163683964.82255101)
    tmp211 = 135291469824.0*tmp37
    tmp213 = 7.0*tmp37
    tmp229 = 118.40000000000001*tmp37
    tmp233 = -2*r + 2*tmp26*tmp3*tmp7
    tmp242 = 0.0019453580115177129*tmp37
    tmp269 = 267544166400.0*tmp37
    tmp305 = tmp30*tmp304
    tmp306 = tmp30*tmp302
    tmp310 = 0.0067822473297110943*tmp58
    tmp393 = pphi*tmp320
    tmp9 = tmp0 + tmp8*(r + 2)
    tmp24 = (1.0/2.0)*tmp19*tmp23
    tmp28 = (23.0/32.0)*tmp27 - 3.0/32.0
    tmp29 = -45.0/32.0*tmp27 - 15.0/32.0
    tmp35 = (109.0/192.0)*tmp20*tmp33*tmp34 - 177.0/32.0*tmp27 - 5.0/64.0
    tmp38 = -267.0/128.0*tmp27 - 1591.0/768.0*tmp37 + 59.0/256.0
    tmp40 = (75.0/128.0)*tmp27 + (345.0/256.0)*tmp37 + 105.0/256.0
    tmp47 = (11.0/32.0)*tmp27 + 3.0/32.0
    tmp48 = 15.0/32.0 - 9.0/32.0*tmp27
    tmp49 = -1.0/32.0*tmp27 + (103.0/192.0)*tmp37 + 5.0/64.0
    tmp50 = -35.0/128.0*tmp27 - 613.0/768.0*tmp37 - 59.0/256.0
    tmp51 = (75.0/256.0)*tmp20*tmp33*tmp34 - 45.0/128.0*tmp27 - 105.0/256.0
    tmp56 = (1.0/4.0)*tmp23*tmp26
    tmp63 = -3*tmp25 - tmp8
    tmp74 = tmp27*tmp73
    tmp76 = tmp27*tmp57
    tmp79 = tmp26*tmp65*tmp78
    tmp84 = 92.711044284954397*tmp27 - 131.0*tmp37 + 10.0*tmp83
    tmp87 = tmp70*(-2.7830076369500598*tmp27 - 5.4000000000000004*tmp37 + 6.0*tmp80*tmp81*tmp82)
    tmp90 = tmp27*(452.54216699669303 - 51.695238095238103*tmp89) + tmp37*(118.40000000000001*tmp89 - 1796.13660498019) + 602.31854041656402*tmp83
    tmp94 = tmp70*(-33.978212217043598*tmp27 - 89.529832736123396*tmp37 + 188.0*tmp80*tmp81*tmp82 - 14.0*tmp93)
    tmp96 = tmp73*(1.3897775099612799*tmp27 + 3.3384202364832198*tmp37 + 3.4285714285714302*tmp83 - 6.0*tmp93)
    tmp100 = tmp8*tmp99
    tmp105 = -tmp58*tmp99
    tmp106 = tmp26*tmp8
    tmp110 = r*tmp27
    tmp112 = 14700.0*tmp27 + 42911.0
    tmp121 = -630116198.87329912*tmp27 - 197773496.79353401*tmp37 + 5805304367.8791304
    tmp123 = -2675575.66847905*tmp27 - 138240.0*tmp37 - 5278341.3229328999
    tmp125 = tmp27*(-2510664218.2812872*tmp27 - 42636451.603233099*tmp37 + 14515200.0*tmp83 + 1002013764.01019)
    tmp126 = ((1 - 0.49694878161693501*tmp27)*(1 - 0.49694878161693501*tmp27))
    tmp135 = tmp133*((45.0/8.0)*tmp27 - 5.0/16.0) + tmp134*((75.0/32.0)*m1*m2*tmp3 - 15.0/8.0*tmp37 - 15.0/32.0) + tmp8*((165.0/32.0)*tmp27 - 5*tmp37 + 25.0/32.0)
    tmp148 = tmp27*(tmp143*(tmp11 + tmp142) + tmp144*(13218.7851094412*r + 4264.6962773603*tmp0 - 6852.3481386801504*tmp11 + 8529.3925547206109*tmp25 - 33722.4297811176) + tmp146*(1926.0*tmp0 + 349.0*tmp11 + tmp145 + 3852.0*tmp25 + 36400.0) + tmp147*(-tmp11 + tmp142))
    tmp149 = 588.0*tmp27 + 1079.0
    tmp150 = 756.0*tmp27
    tmp154 = tmp27*tmp89
    tmp177 = -21.0/8.0*tmp133 + tmp134*((3.0/4.0)*tmp27 - 3.0/16.0) + tmp8*(3*tmp27 + 45.0/16.0)
    tmp178 = tmp133*((13.0/16.0)*tmp27 + 449.0/32.0) + tmp134*((115.0/64.0)*tmp27 + (1.0/16.0)*tmp37 - 37.0/64.0) + tmp8*(-1171.0/64.0*tmp27 - 861.0/64.0)
    tmp186 = -5.0/4.0*tmp133 + tmp134*((1.0/2.0)*tmp27 + 1.0/8.0) + (9.0/8.0)*tmp8
    tmp188 = tmp133*(117.0/32.0 - 39.0/16.0*tmp27) + tmp134*((21.0/16.0)*tmp20*tmp33*tmp34 - 81.0/64.0*tmp27 - 9.0/64.0) + tmp8*(-175.0/64.0*tmp27 - 225.0/64.0)
    tmp194 = 2*tmp8
    tmp199 = -tmp36*tmp8
    tmp220 = 53760.0*tmp27
    tmp230 = tmp229*tmp57 - 51.695238095238103*tmp27*tmp57
    tmp241 = 0.037651566566099436*tmp27
    tmp243 = -1759846072320.0*r - 4161798144000.0*tmp27 - 12148770078720.0
    tmp257 = tmp12*tmp8
    tmp268 = 5178202125747.6201*tmp27
    tmp351 = tmp89*(5279538216960.0*r + 8323596288000.0*tmp27 + 24297540157440.0)
    tmp10 = (1.0/(tmp9))
    tmp53 = tmp46*(-tmp13*tmp30*tmp38 - tmp26*tmp28 - tmp29*tmp32 - tmp35*tmp36 - tmp40*tmp41*tmp44) + tmp52*(-tmp13*tmp30*tmp50 - tmp26*tmp47 - tmp32*tmp48 - tmp36*tmp49 - tmp41*tmp44*tmp51)
    tmp60 = tmp46*(tmp12*tmp40*tmp41 + tmp26*tmp35 + tmp28*tmp57 + tmp29*tmp58 + tmp31*tmp38 + 7.0/4.0) + tmp52*(tmp12*tmp41*tmp51 + tmp26*tmp49 + tmp31*tmp50 + tmp47*tmp57 + tmp48*tmp58 + 1.0/4.0)
    tmp62 = (1.0/((tmp9)*(tmp9)))
    tmp68 = tmp27*tmp65*tmp66
    tmp72 = tmp27*tmp69*tmp70
    tmp75 = np.power(r, -2.5)*tmp74
    tmp86 = tmp19*tmp65*tmp84
    tmp101 = tmp100 + tmp25
    tmp107 = tmp106 + 1
    tmp113 = r*tmp112
    tmp127 = 86618264430493.297*tmp126 + 43393301259014.688*tmp27 + 43133561885859.406*tmp37 + 5927865218923.0195*tmp83 + 188440788778196.0
    tmp129 = 49152.0*r*(409207698.13607502*tmp27 + 102574080.0*tmp37 - 2119671837.3603799) + 879923036160.0*tmp0 + 283115520.0*tmp112*tmp25 - 1698693120.0*tmp27*(11592.0*tmp27 + 69847.0)
    tmp151 = tmp150 + 1079.0
    tmp157 = 336.0*r + tmp150 + 407.0
    tmp191 = tmp106*tmp99 + 1
    tmp195 = tmp100*tmp36 + tmp12*tmp194
    tmp216 = 32768.0*tmp154
    tmp247 = r*tmp121
    tmp248 = tmp123*tmp25
    tmp390 = 2*pphi*tmp106
    tmp54 = -pphi*tmp13*tmp17 - pphi*tmp24 + pphi*tmp53
    tmp61 = pphi*tmp17*tmp19 + pphi*tmp56 + pphi*tmp60
    tmp64 = tmp62*tmp63
    tmp102 = (1.0/(tmp101))
    tmp108 = ((tmp107)*(tmp107)*(tmp107)*(tmp107))
    tmp117 = -283115520.0*tmp113 - tmp116 - 879923036160.0*tmp25 - 25392914995744.301*tmp27 + 104186110149937.0
    tmp158 = 2048.0*m1*m2*tmp157*tmp3*tmp89 + 28.0*m1*m2*tmp3*(1920.0*a6 + 733955.30746303697) - 7.0*r*(938918.40015631705*m1*m2*tmp3 - 185763.09269328101*tmp37 - 245760.0) - 5416406.5954118604*tmp37 - 3440640.0
    tmp167 = ((tmp107)*(tmp107))
    tmp198 = (1.0/(tmp191))
    tmp201 = 2048.0*tmp157
    tmp234 = (1.0/((tmp101)*(tmp101)))
    tmp238 = ((tmp107)*(tmp107)*(tmp107))
    tmp249 = 566231040.0*tmp113 + tmp116 + 2639769108480.0*tmp25 + 20113376778784.359*tmp27 - 104186110149937.39
    tmp251 = tmp129*tmp57
    tmp258 = 6.7816840277777778e-8*tmp107
    tmp389 = pphi*(tmp46*(pphi*tmp36*tmp38 + 4*tmp12*tmp385*tmp40 + tmp29*tmp383) + tmp52*(pphi*tmp36*tmp50 + 4*tmp12*tmp385*tmp51 + tmp383*tmp48)) + tmp17*tmp19 + tmp56 + tmp60
    tmp103 = tmp102*tmp8
    tmp131 = r*tmp109 + 1.7277309580446458e-13*r*tmp127 - 1.6718906934806428e-7*tmp0*tmp123 - 1.5922768509339455e-9*tmp121*tmp25 + 9.5536611056036724e-9*tmp125 + 1.7277309580446458e-13*tmp129*tmp89
    tmp153 = 240.0*r*(-7466.2706106620599*tmp27 - 3024.0*tmp37 + 17264.0) + 960.0*tmp0*tmp151 + 480.0*tmp11*tmp151 + 1920.0*tmp149*tmp25 - 38842241.476950698*tmp27 - 1882456.2366397199*tmp37 + 161280.0*tmp42 + 13447680.0
    tmp169 = r*tmp127 + r*tmp168 - 967680.0*tmp0*tmp123 - 9216.0*tmp121*tmp25 + 55296.0*tmp125 + tmp129*tmp89
    tmp193 = (1.0/((tmp191)*(tmp191)))
    tmp202 = 688128.0*tmp154 + tmp201*tmp76 - 6572428.8010942191*tmp27 + 1300341.6488529672*tmp37 + 1720320.0
    tmp215 = 3840.0*r*tmp149 + 1920.0*tmp0*tmp151 + 806400.0*tmp11 + 2880.0*tmp151*tmp25 - 1791904.9465588944*tmp27 - 725760.0*tmp37 + 4143360.0
    tmp232 = -tmp102*tmp99
    tmp244 = -r*tmp241 - r*tmp242 - 0.074278527055067434*r + 7.2711658702707293e-15*tmp117*tmp57 - 0.084170117302289349*tmp210 + 7.2711658702707293e-15*tmp243*tmp89 - 0.04222475734627381*tmp27 - 0.013253012581747898*tmp37 + 0.38901962636933785
    tmp250 = tmp249*tmp89
    tmp270 = r*tmp268 + r*tmp269 + 10215490662751.42*r - tmp117*tmp57 + tmp170 - tmp243*tmp89 + tmp262*tmp57 + 5807150888816.3545*tmp27 - 53501685054374.008
    tmp313 = tmp166*tmp167
    tmp341 = tmp108*tmp135
    tmp349 = 2.0364370262253606e-18*tmp237*tmp238*tmp8
    tmp371 = -5806080.0*r*tmp123 - tmp129*tmp26 + 2*tmp249*tmp57 + tmp262*tmp57 + 11614301777632.648*tmp27 + tmp351 + 3645361092898.4189*tmp37 + 11575876386816.0*tmp57 - 107003370108748.13
    tmp119 = 0.0066265062908739489*r*tmp37 - 0.14352105046684044*r + 0.021042529325572337*tmp109 + 0.038579573843421422*tmp110 - 1.18824456940711e-6*tmp113 - 3.6355829351353647e-15*tmp117*tmp89 + 0.0094128916415248589*tmp25*tmp27 + 0.00048633950287942822*tmp25*tmp37 + 0.018569631763766858*tmp25 - 0.04380844244600398*tmp27 + 0.29106204142837921*tmp37 + 0.024469282648975563*tmp83 + 1
    tmp132 = ((tmp131)*(tmp131))
    tmp171 = r*tmp170 - 39476764256925.602*r + 10611661054566.199*tmp110 - 326837426.24148601*tmp113 - tmp117*tmp89 + tmp168 + 2589101062873.8101*tmp25*tmp27 + 133772083200.0*tmp25*tmp37 + 5107745331375.71*tmp25 - 12049908701745.199*tmp27 + 80059249540278.203*tmp37 + 6730497718123.0195*tmp83 + 275059053208689.0
    tmp180 = (1.0/(tmp169))
    tmp221 = -66060288000.0*tmp11 - 32768.0*tmp153*tmp76 - 1120.0*tmp209 - tmp210*tmp211 - tmp212*tmp213 - tmp215*tmp216 - tmp219*tmp220
    tmp252 = 2*tmp109 + 29.930611397732129*tmp126 - 6.3691074037357819e-9*tmp247 - 1.0031344160883857e-6*tmp248 + 3.4554619160892917e-13*tmp250 + 3.4554619160892917e-13*tmp251 + 14.994389991391477*tmp27 + 14.904638040186779*tmp37 + 2.0483512507698807*tmp83 + 4*tmp89 + 65.114996906088265
    tmp263 = tmp127 + tmp168 - 18432.0*tmp247 - 2903040.0*tmp248 + tmp250 + tmp251 + tmp262
    tmp273 = 1.3217463278247474e-29*tmp169
    tmp311 = -tmp103*tmp99
    tmp338 = -tmp233*tmp234*tmp99
    tmp364 = 1.6954210069444444e-8*tmp313
    tmp372 = tmp117*tmp26 - 2*tmp243*tmp57 - 11575876386816.0*tmp26*tmp89 + 11575876386816.0*tmp26 + tmp268 + tmp269 + 1759846072320.0*tmp89 + 10215490662751.42
    tmp391 = tmp232*tmp390 + tmp383
    tmp120 = (1.0/((tmp119)*(tmp119)))
    tmp156 = (1.0/(67645734912.0*tmp109*tmp37 + 1120.0*tmp139 + 7.0*tmp140 + 53760.0*tmp148 + 32768.0*tmp153*tmp154 + 13212057600.0*tmp42 + 241555486248.80701*tmp93))
    tmp172 = (1.0/(tmp171))
    tmp181 = tmp171*tmp180
    tmp206 = 0.28004222119932948*tmp109*tmp37 + 4.6366158657492777e-9*tmp139 + 2.8978849160932984e-11*tmp140 + 2.2255756155596532e-7*tmp148 + 1.3565413275792173e-7*tmp153*tmp154 + 0.054695746327994038*tmp42 + tmp93
    tmp222 = tmp11*tmp221
    tmp245 = (1.0/((tmp119)*(tmp119)*(tmp119)))
    tmp277 = tmp180*tmp270
    tmp280 = (1.0/(tmp132))
    tmp392 = (1.0/2.0)*tmp391
    tmp136 = tmp120*tmp132*tmp135
    tmp159 = tmp156*tmp158
    tmp173 = tmp172*tmp57
    tmp182 = 7680.0*tmp181
    tmp203 = tmp156*tmp202
    tmp207 = (1.0/((tmp206)*(tmp206)))
    tmp253 = tmp169*tmp172
    tmp272 = -tmp120*tmp270*tmp57
    tmp282 = -tmp171*tmp263*tmp280
    tmp323 = tmp156*(-tmp201*tmp26*tmp27 + 1376256.0*tmp76)
    tmp334 = tmp158*(-0.54695746327994033*tmp11 - 2.7130826551584345e-7*tmp153*tmp76 - 2.7130826551584345e-7*tmp154*tmp215 - 9.2732317314985554e-9*tmp209 - 1.1201688847973179*tmp210*tmp37 - 5.7957698321865969e-11*tmp212*tmp37 - 4.4511512311193063e-7*tmp219*tmp27)/((tmp206)*(tmp206)*(tmp206))
    tmp344 = tmp244*tmp245
    tmp356 = tmp131*tmp252*tmp341
    tmp358 = -tmp120*tmp169*tmp270
    tmp376 = 6.8552954995273987e-23*tmp222
    tmp137 = tmp108*tmp136
    tmp160 = tmp11*tmp159
    tmp174 = tmp169*tmp173
    tmp179 = tmp159*tmp42
    tmp204 = tmp11*tmp203
    tmp205 = tmp0*tmp159
    tmp208 = tmp158*tmp207
    tmp264 = tmp173*tmp263
    tmp266 = tmp169*tmp172*tmp26
    tmp286 = 1.3162167359092606e-19*tmp181*tmp42
    tmp324 = tmp11*tmp323
    tmp325 = tmp0*tmp203
    tmp326 = tmp159*tmp25
    tmp327 = tmp202*tmp207
    tmp367 = 1.3563368055555556e-7*tmp107*tmp253*tmp257
    tmp369 = 2.2409164900457549e-37*tmp169*tmp272
    tmp161 = 0.00013020833333333333*tmp106 + tmp160
    tmp183 = tmp106 + tmp12*tmp178 + tmp177*tmp19 + tmp179*tmp182
    tmp190 = tmp106 + tmp12*tmp186 + 7680.0*tmp160 + tmp188*tmp43
    tmp223 = tmp208*tmp222
    tmp274 = tmp264 - tmp266 + tmp272*tmp273
    tmp278 = 7680.0*tmp179
    tmp283 = 2.2925216742803477e-22*tmp179
    tmp284 = tmp208*tmp221
    tmp332 = tmp208*(32768.0*m1*m2*tmp153*tmp26*tmp3 - 264241152000.0*tmp0 + 135291469824.0*tmp20*tmp26*tmp33*tmp34*tmp89 - tmp211*tmp26 - tmp213*(-37071008445.225479*r + 28533211037.687996*tmp0 - 37071008445.225479*tmp25 + 4129567622.6517401) - 65536.0*tmp215*tmp76 - tmp216*(5760.0*r*tmp151 + 3225600.0*tmp0 + 5760.0*tmp151*tmp25 + 2257920.0*tmp27 + 4143360.0) - tmp220*(8463875.4363160953*r - 7511347.2012505401*tmp0 + tmp143*(12*tmp25 + tmp331) + tmp144*(25588.177664161798*r - 82228.177664161805*tmp25 + 17058.785109441222) + tmp146*(11556.0*r + 4188.0*tmp25 + 7704.0) + tmp147*(-12*tmp25 + tmp331) + 6347906.5772370668*tmp25 + 7480835.4363160897) + 39946495452.763199*tmp80*tmp81*tmp82)
    tmp346 = tmp132*tmp341*tmp344
    tmp370 = 1.2727731413908503e-19*tmp137*tmp163
    tmp162 = (1.0/((tmp161)*(tmp161)*(tmp161)*(tmp161)))
    tmp175 = (1.0/((tmp161)*(tmp161)))
    tmp197 = tmp190*tmp193*tmp195
    tmp224 = -tmp186*tmp44 - 5*tmp188*tmp200 + tmp199 + 7680.0*tmp204 + 30720.0*tmp205 + 1.3162167359092606e-19*tmp223
    tmp260 = (1.0/((tmp161)*(tmp161)*(tmp161)*(tmp161)*(tmp161)))
    tmp261 = 0.0010416666666666667*tmp19*tmp3*tmp7 - 4*tmp204 - 16*tmp205 - 6.8552954995273987e-23*tmp223
    tmp275 = (1.0/((tmp161)*(tmp161)*(tmp161)))
    tmp276 = 0.00052083333333333333*tmp19*tmp3*tmp7 - 2*tmp204 - 8*tmp205 - 3.4276477497636993e-23*tmp223
    tmp287 = -tmp13*tmp177 + 38400.0*tmp160*tmp181 - tmp178*tmp44 + tmp182*tmp203*tmp42 + tmp199 + tmp277*tmp278 + tmp282*tmp283 + tmp284*tmp286
    tmp293 = (1.0/(tmp190))
    tmp309 = 1.6954210069444444e-8/((0.00013020833333333333*tmp12*tmp186 + tmp161 + 0.00013020833333333333*tmp188*tmp43)*(0.00013020833333333333*tmp12*tmp186 + tmp161 + 0.00013020833333333333*tmp188*tmp43))
    tmp329 = tmp0*tmp284
    tmp333 = tmp11*tmp332
    tmp164 = tmp162*tmp163
    tmp176 = 1.6954210069444444e-8*tmp175
    tmp225 = tmp198*tmp224
    tmp235 = tmp162*tmp65
    tmp254 = tmp166*tmp175
    tmp291 = (1.0/2.0)*tmp190*tmp198
    tmp360 = tmp260*tmp261
    tmp363 = tmp275*tmp276
    tmp375 = tmp174*tmp183*tmp364
    tmp255 = tmp183*tmp254
    tmp342 = 1.2727731413908503e-19*tmp164*tmp341
    tmp350 = tmp135*tmp235*tmp349
    tmp361 = 2.5455462827817007e-19*tmp163*tmp360
    tmp374 = tmp176*tmp313
    tmp184 = tmp103*tmp105 + 1.2727731413908503e-19*tmp137*tmp164 + tmp166*tmp167*tmp174*tmp176*tmp183 + tmp19*tmp94 + tmp26*tmp87 + tmp26*tmp96 + tmp58 + 147.44375299014601*tmp68 - 11.317508579186301*tmp72 + 1.4827534202436501*tmp75 + tmp76*tmp77 + tmp79 + tmp86 + tmp90*tmp91 + 1
    tmp240 = tmp136*tmp235*tmp238*tmp8
    tmp256 = tmp253*tmp255
    tmp315 = 4.5998878841373274e-5/((8.6322622395260964e-22*tmp137*tmp164 + 1.1498764597085052e-10*tmp174*tmp175*tmp183*tmp313 + 0.0067822473297110943*tmp19*tmp94 + 0.0067822473297110943*tmp26*tmp87 + 0.0067822473297110943*tmp26*tmp96 + tmp310*tmp311 + tmp310 + tmp68 - 0.0767581423401687*tmp72 + 0.0008271280831314672*tmp73*tmp76 + 0.010056400425067488*tmp75 + 0.0067822473297110943*tmp79 + 0.0067822473297110943*tmp86 + 0.0067822473297110943*tmp90*tmp91 + 0.0067822473297110943)*(8.6322622395260964e-22*tmp137*tmp164 + 1.1498764597085052e-10*tmp174*tmp175*tmp183*tmp313 + 0.0067822473297110943*tmp19*tmp94 + 0.0067822473297110943*tmp26*tmp87 + 0.0067822473297110943*tmp26*tmp96 + tmp310*tmp311 + tmp310 + tmp68 - 0.0767581423401687*tmp72 + 0.0008271280831314672*tmp73*tmp76 + 0.010056400425067488*tmp75 + 0.0067822473297110943*tmp79 + 0.0067822473297110943*tmp86 + 0.0067822473297110943*tmp90*tmp91 + 0.0067822473297110943))
    tmp366 = tmp183*tmp363*tmp364
    tmp377 = tmp287*tmp374
    tmp185 = (1.0/2.0)*tmp184
    tmp288 = -39.611280027152056*m1*m2*tmp3*tmp66*tmp70 - 2*tmp102*tmp12*tmp3*tmp30*tmp7 - 1.2727731413908503e-19*tmp108*tmp120*tmp131*tmp135*tmp162*tmp252*tmp43*tmp65 - 1.2727731413908503e-19*tmp108*tmp120*tmp132*tmp135*tmp260*tmp261*tmp43*tmp65 - 1.2727731413908503e-19*tmp108*tmp132*tmp135*tmp162*tmp244*tmp245*tmp43*tmp65 - tmp12*tmp230*tmp65 + tmp13*tmp94 + 6.3638657069542515e-19*tmp137*tmp200*tmp235 - 1.6954210069444444e-8*tmp166*tmp167*tmp169*tmp172*tmp175*tmp287*tmp57 - 1.6954210069444444e-8*tmp166*tmp167*tmp169*tmp172*tmp183*tmp275*tmp276*tmp57 - 1.6954210069444444e-8*tmp166*tmp167*tmp175*tmp183*tmp274 + 2*tmp19*tmp65*tmp78 + tmp194*tmp232*tmp31 + 663.49688845565709*tmp226*tmp27*tmp65 + tmp233*tmp234*tmp26*tmp3*tmp30*tmp7*tmp99 + 1.0182185131126803e-18*tmp237*tmp240 + tmp256*tmp257*tmp258 + tmp26*tmp27*tmp77 + tmp32 + tmp36*tmp87 + tmp36*tmp96 + tmp44*tmp65*tmp90 + 3.7068835506091253*tmp69*tmp74 + 3*tmp84*tmp91
    tmp294 = np.sqrt(tmp184*tmp190*tmp198)
    tmp295 = tmp294/tmp184
    tmp299 = 2*tmp27*(tmp10*tmp61 + tmp294 - 1) + 1
    tmp292 = tmp185*tmp197 + tmp185*tmp225 - tmp288*tmp291
    tmp300 = tmp27/np.power(tmp299, 3.0/2.0)
    tmp301 = (1.0/np.sqrt(tmp299))
    tmp297 = tmp191*tmp293*tmp295
    tmp298 = tmp10*tmp54 + tmp292*tmp297 + tmp61*tmp64
    tmp317 = tmp191*tmp292*tmp293*tmp294*tmp315
    dHreal_dr_dr = tmp381*(-((tmp298)*(tmp298))*tmp300 + tmp301*(-6*r*tmp61*tmp62 + tmp10*((3.0/2.0)*pphi*tmp12*tmp23 + pphi*tmp17*tmp302 + pphi*(tmp46*(tmp28*tmp36 + tmp29*tmp305 + tmp304*tmp35 + tmp306*tmp38 + tmp307*tmp40*tmp41) + tmp52*(tmp304*tmp49 + tmp305*tmp48 + tmp306*tmp50 + tmp307*tmp41*tmp51 + tmp36*tmp47))) + ((tmp191)*(tmp191))*((tmp292)*(tmp292))*tmp294*tmp309*tmp315 - tmp191*tmp224*tmp292*tmp295*tmp309 - tmp195*tmp292*tmp293*tmp295 + tmp288*tmp317 + tmp297*(tmp184*tmp193*tmp195*tmp224 + tmp185*tmp190*tmp193*(-tmp100*tmp304 - tmp302*tmp8) + tmp185*tmp190*tmp195*(tmp100*tmp320 + 4*tmp257)/((tmp191)*(tmp191)*(tmp191)) + tmp185*tmp198*(tmp186*tmp307 + 30*tmp188*tmp322 + 2.6324334718185212e-19*tmp222*tmp327 + 1.3162167359092606e-19*tmp222*tmp334 + tmp304*tmp8 + 7680.0*tmp324 + 61440.0*tmp325 + 92160.0*tmp326 + 1.0529733887274085e-18*tmp329 + 1.3162167359092606e-19*tmp333) - tmp197*tmp288 - tmp225*tmp288 + tmp291*(3649.232886506114*np.power(r, -6.5)*tmp27*tmp65 - tmp103*tmp306 + tmp105*tmp234*tmp8*(-tmp320*tmp8 - 2) - 8.9636659601830196e-37*tmp107*tmp255*tmp257*tmp358 + 2.7126736111111111e-7*tmp107*tmp256*tmp43*tmp8 - tmp120*tmp131*tmp252*tmp350 + tmp120*tmp131*tmp342*(-2.0062688321767713e-6*r*tmp123 - 3.4554619160892917e-13*tmp129*tmp26 + 6.9109238321785833e-13*tmp249*tmp57 + 4.0132777474577779*tmp27 + 3.4554619160892917e-13*tmp351 + 1.2596406426904123*tmp37 + 4*tmp57*tmp89 + 4*tmp57 - 36.974607030398644) - tmp120*tmp235*tmp347*tmp356 + tmp120*tmp252*tmp342*(tmp109 + 14.965305698866064*tmp126 - 3.1845537018678909e-9*tmp247 - 5.0156720804419283e-7*tmp248 + 1.7277309580446458e-13*tmp250 + 1.7277309580446458e-13*tmp251 + 7.4971949956957387*tmp27 + 7.4523190200933893*tmp37 + 1.0241756253849403*tmp83 + 2*tmp89 + 32.557498453044133) + tmp120*tmp356*tmp361 + tmp132*tmp245*tmp342*(-7.2711658702707293e-15*tmp117*tmp26 - tmp241 - tmp242 + 1.4542331740541459e-14*tmp243*tmp57 + 0.084170117302289349*tmp26*tmp89 - 0.084170117302289349*tmp26 - 0.012796132697983178*tmp89 - 0.074278527055067434) - tmp132*tmp344*tmp350 - tmp136*tmp349*tmp360*tmp65 + 3.8183194241725509e-18*tmp137*tmp235*tmp322 - tmp137*tmp347*tmp360*tmp65 + tmp162*tmp276*tmp375*(0.00078125000000000004*tmp19*tmp3*tmp7 - 3*tmp204 - 12*tmp205 - 5.1414716246455493e-23*tmp223) - 8*tmp163*tmp230 + 2.5455462827817007e-19*tmp164*tmp344*tmp356 - tmp166*tmp183*tmp363*tmp367 - tmp172*tmp255*tmp257*tmp258*tmp263 + 3.3908420138888889e-8*tmp174*tmp287*tmp313*tmp363 + tmp174*tmp374*(76800.0*tmp160*tmp277 + 2.2925216742803475e-21*tmp160*tmp282 - tmp171*tmp280*tmp283*tmp371 + tmp177*tmp302 + tmp178*tmp307 - 4.5850433485606953e-22*tmp179*tmp263*tmp270*tmp280 + tmp180*tmp278*tmp372 + 76800.0*tmp181*tmp204 + 153600.0*tmp181*tmp205 + 2.6324334718185212e-19*tmp181*tmp221*tmp327*tmp42 + 1.3162167359092605e-18*tmp181*tmp223 + tmp182*tmp323*tmp42 + 15360.0*tmp203*tmp277*tmp42 + 4.5850433485606953e-22*tmp203*tmp282*tmp42 + tmp221*tmp286*tmp334 + 2.6324334718185212e-19*tmp277*tmp284*tmp42 + 7.8579567581315423e-45*tmp282*tmp284*tmp42 + tmp286*tmp332 + tmp304*tmp8 + tmp171*tmp252*tmp263*tmp283/((tmp131)*(tmp131)*(tmp131))) + tmp175*tmp287*tmp313*tmp369 - tmp183*tmp19*tmp254*tmp258*tmp274*tmp8 + tmp183*tmp274*tmp363*tmp364 + tmp183*tmp313*tmp363*tmp369 + tmp183*tmp374*(-tmp120*tmp273*tmp372*tmp57 - 2*tmp172*tmp26*tmp263 + tmp173*tmp371 + tmp253*tmp36 - 2.6434926556494948e-29*tmp26*tmp358 + 2.6434926556494948e-29*tmp263*tmp272 - tmp270*tmp273*tmp344*tmp57) + 0.24390973756089801*tmp19*tmp74 - 178.25076012218426*tmp226*tmp27*tmp70 + 4*tmp233*tmp234*tmp257*tmp30 - tmp235*tmp346*tmp347 - tmp254*tmp287*tmp367 + 1.3563368055555556e-7*tmp256*tmp322*tmp339 + tmp260*tmp370*(-1.3710590999054797e-22*tmp222*tmp327 - 0.0031250000000000002*tmp257 - 4*tmp324 - 32*tmp325 - 48*tmp326 - 5.4842363996219189e-22*tmp329 - 6.8552954995273987e-23*tmp333 - tmp334*tmp376) + tmp264*tmp366 + tmp264*tmp377 - tmp266*tmp366 - tmp266*tmp377 + 12.974092427131939*tmp27*tmp66*tmp73 + tmp274*tmp377 + tmp275*tmp375*(-3.4276477497636993e-23*tmp222*tmp334 - 0.0015625000000000001*tmp257 - 2*tmp324 - 16*tmp325 - 24*tmp326 - tmp327*tmp376 - 2.7421181998109595e-22*tmp329 - 3.4276477497636993e-23*tmp333) + tmp302*tmp65*tmp84 + tmp302*tmp94 + tmp304*tmp87 + tmp304*tmp96 + tmp305*tmp311 + tmp305 + tmp307*tmp65*tmp90 - 4*tmp31*tmp338*tmp8 + tmp346*tmp361 + 6*tmp78*tmp91 + tmp91*(51.695238095238103*m1*m2*tmp26*tmp3 - tmp229*tmp26) + tmp261*tmp370*(0.0013020833333333333*tmp19*tmp3*tmp7 - 5*tmp204 - 20*tmp205 - 8.569119374409248e-23*tmp223)/np.power(tmp161, 6) + tmp132*tmp244*tmp342*(-0.0029180370172765691*r*tmp37 - 0.11141779058260115*r - 0.05647734984914915*tmp110 + 1.0906748805406095e-14*tmp117*tmp57 - 0.12625517595343402*tmp210 + 1.0906748805406095e-14*tmp243*tmp89 - 0.063337136019410711*tmp27 - 0.019879518872621849*tmp37 + 0.58352943955400671)/((tmp119)*(tmp119)*(tmp119)*(tmp119)) + tmp105*tmp233*tmp8*(-4*r + 4*tmp26*tmp3*tmp7)/((tmp101)*(tmp101)*(tmp101)) + 1.3236840670464843e-17*tmp240/np.power(r, 9) + 6.1093110786760821e-18*tmp136*tmp167*tmp235*tmp339/np.power(r, 11))) + 2*tmp54*tmp64 + tmp61*tmp63*(-tmp194 - 6*tmp25)/((tmp9)*(tmp9)*(tmp9))))
    dHreal_dr_dpphi = tmp381*(-tmp298*tmp300*(tmp10*tmp389 + tmp295*tmp392) + tmp301*(tmp10*(pphi*(tmp46*(-pphi*tmp304*tmp38 - tmp29*tmp393 - 16*tmp385*tmp40*tmp43) + tmp52*(-pphi*tmp304*tmp50 - 16*tmp385*tmp43*tmp51 - tmp393*tmp48)) - tmp13*tmp17 - tmp24 + tmp53) + (1.0/2.0)*tmp191*tmp292*tmp293*tmp294*tmp315*tmp391 + tmp297*(tmp197*tmp392 + tmp225*tmp392 + tmp291*(4*pphi*tmp103*tmp12 - tmp311*tmp393 + tmp338*tmp390 - tmp393)) - tmp317*tmp391 + tmp389*tmp64))
    return np.array([dHreal_dr_dr, dHreal_dr_dpphi])
