import numpy as np
from scipy.special import gamma,factorial
import numpy as np
def v5HM_optimized_flux(m1,m2,r,phi,prstar,pphi,chi1,chi2,Hreal,Omega,Omega_circ):
    tmp0 = np.power(Omega, 4.0/3.0)
    tmp1 = m1 + m2
    tmp5 = ((m1)*(m1))
    tmp6 = ((m2)*(m2))
    tmp9 = ((m1)*(m1)*(m1))
    tmp10 = ((m2)*(m2)*(m2))
    tmp13 = np.power(Omega, 2.0/3.0)
    tmp15 = ((m1)*(m1)*(m1)*(m1)*(m1))
    tmp17 = ((m2)*(m2)*(m2)*(m2)*(m2))
    tmp20 = ((Omega)*(Omega))
    tmp27 = m1 - m2
    tmp34 = np.pi*Hreal*Omega
    tmp93 = ((m2)*(m2)*(m2)*(m2))
    tmp94 = ((m1)*(m1)*(m1)*(m1))
    tmp116 = np.power(Omega, 9)
    tmp117 = np.cbrt(Omega)
    tmp145 = np.power(Omega, 8.0/3.0)
    tmp149 = np.power(Omega, 10.0/3.0)
    tmp150 = np.power(Omega, 5.0/3.0)
    tmp161 = ((np.pi)*(np.pi))
    tmp7 = (1.0/((tmp1)*(tmp1)*(tmp1)*(tmp1)))
    tmp11 = np.power(tmp1, -6)
    tmp16 = (1.0/((tmp1)*(tmp1)*(tmp1)*(tmp1)*(tmp1)))
    tmp22 = ((Hreal)*(Hreal))*tmp20
    tmp28 = (1.0/(tmp1))
    tmp101 = np.power(tmp1, -8)
    tmp104 = np.power(tmp1, -7)
    tmp126 = (1.0/2.0)*chi1 - 1.0/2.0*chi2
    tmp128 = (1.0/2.0)*chi1 + (1.0/2.0)*chi2
    tmp130 = (1.0/((tmp1)*(tmp1)*(tmp1)))
    tmp139 = np.log(2*tmp117)
    tmp148 = np.log(8*tmp117)
    tmp166 = np.log(6*tmp117)
    tmp177 = tmp15*tmp17/np.power(tmp1, 10)
    tmp178 = np.log(10*tmp117)
    tmp3 = (1.0/((tmp1)*(tmp1)))
    tmp8 = tmp5*tmp6*tmp7
    tmp12 = tmp10*tmp11*tmp9
    tmp18 = ((tmp15*tmp16 + tmp16*tmp17)*(tmp15*tmp16 + tmp16*tmp17))/np.power(Omega_circ, 8)
    tmp23 = 64*tmp22
    tmp29 = tmp27*tmp28
    tmp37 = 16*tmp22
    tmp45 = ((np.power(m1, 6)*tmp11 - np.power(m2, 6)*tmp11)*(np.power(m1, 6)*tmp11 - np.power(m2, 6)*tmp11))/np.power(Omega_circ, 28.0/3.0)
    tmp47 = 100*tmp22
    tmp52 = 36*tmp22
    tmp59 = 4*tmp22
    tmp72 = 144*tmp22
    tmp84 = 196*tmp22
    tmp102 = tmp101*tmp93*tmp94
    tmp105 = ((np.power(m1, 7)*tmp104 + np.power(m2, 7)*tmp104)*(np.power(m1, 7)*tmp104 + np.power(m2, 7)*tmp104))/np.power(Omega_circ, 32.0/3.0)
    tmp111 = np.power(Omega, 59.0/3.0)*((np.power(m1, 8)*tmp101 - np.power(m2, 8)*tmp101)*(np.power(m1, 8)*tmp101 - np.power(m2, 8)*tmp101))/np.power(Omega_circ, 12)
    tmp114 = 256*tmp22
    tmp119 = np.log(4*tmp117)
    tmp131 = ((tmp10*tmp130 + tmp130*tmp9)*(tmp10*tmp130 + tmp130*tmp9))/np.power(Omega_circ, 16.0/3.0)
    tmp155 = ((tmp126)*(tmp126))
    tmp157 = ((tmp128)*(tmp128))
    tmp158 = tmp126*tmp128
    tmp162 = ((tmp128)*(tmp128)*(tmp128))
    tmp163 = ((tmp126)*(tmp126)*(tmp126))
    tmp168 = Omega*tmp126
    tmp4 = m1*m2*tmp3
    tmp19 = np.power(Omega, 41.0/3.0)*tmp18
    tmp25 = ((np.pi)*(np.pi)*(np.pi))*Hreal*tmp8
    tmp30 = tmp29 - 1.0e-14
    tmp35 = (tmp23 + 1)*(tmp23 + 4)*(tmp23 + 9)*(tmp23 + 16)/(1 - np.exp(-16*tmp34))
    tmp39 = (tmp37 + 1)*(tmp37 + 4)/(1 - np.exp(-8*tmp34))
    tmp46 = np.power(Omega, 47.0/3.0)*tmp45
    tmp49 = (tmp47 + 1)*(tmp47 + 4)*(tmp47 + 9)*(tmp47 + 16)*(tmp47 + 25)/(1 - np.exp(-20*tmp34))
    tmp55 = (tmp52 + 1)*(tmp52 + 4)*(tmp52 + 9)/(1 - np.exp(-12*tmp34))
    tmp64 = (tmp59 + 1)*(tmp59 + 4)/(1 - np.exp(-4*tmp34))
    tmp69 = np.power(Omega, 13)*tmp18
    tmp73 = (tmp72 + 1)*(tmp72 + 4)*(tmp72 + 9)*(tmp72 + 16)*(tmp72 + 25)*(tmp72 + 36)/(1 - np.exp(-24*tmp34))
    tmp85 = (tmp84 + 1)*(tmp84 + 4)*(tmp84 + 9)*(tmp84 + 16)*(tmp84 + 25)*(tmp84 + 36)*(tmp84 + 49)/(1 - np.exp(-28*tmp34))
    tmp106 = np.power(Omega, 53.0/3.0)*tmp105
    tmp115 = np.power(Omega, 17)*tmp105
    tmp127 = tmp126*tmp29
    tmp165 = tmp128*tmp155
    tmp167 = (887.0/44.0)*m1*m2*tmp3 - 3143.0/132.0*tmp8
    tmp198 = tmp126*((8797.0/1008.0)*m1*m2*tmp3 - 703.0/112.0*tmp8 - 81.0/16.0)
    tmp14 = tmp13/(-68250*tmp4 + 68250*tmp8 + 13650)
    tmp26 = ((pphi)*(pphi))*tmp25
    tmp31 = np.absolute(tmp30)
    tmp42 = (tmp37 + 9)*(tmp37 + 25)
    tmp44 = tmp13/(-576*tmp4 + 432*tmp8 + 144)
    tmp56 = tmp55*(tmp52 + 16)
    tmp68 = tmp13/(-420*tmp4 + 420*tmp8 + 84)
    tmp70 = tmp25*((1 + (1.0/2.0)*((tmp1)*(tmp1))*(((Hreal)*(Hreal)) - 1)/(m1*m2))*(1 + (1.0/2.0)*((tmp1)*(tmp1))*(((Hreal)*(Hreal)) - 1)/(m1*m2)))
    tmp82 = tmp13/(-2856*tmp4 + 2142*tmp8 + 714)
    tmp90 = tmp64*(tmp59 + 9)
    tmp92 = tmp13/(780*tmp4 - 390)
    tmp95 = (1.0/(tmp30))
    tmp107 = tmp13/(104958*tmp12 + 104958*tmp4 - 209916*tmp8 - 14994)
    tmp110 = tmp13/(72960*tmp12 + 109440*tmp4 - 182400*tmp8 - 18240)
    tmp113 = tmp13/(19152*tmp12 + 19152*tmp4 - 38304*tmp8 - 2736)
    tmp120 = 3*tmp4
    tmp132 = tmp131*(tmp37 + 9)
    tmp133 = 2*tmp4
    tmp137 = (5.0/2.0)*tmp4
    tmp160 = (1.0/2.0)*tmp157 + tmp158*tmp29
    tmp169 = -18*tmp4 + (137.0/6.0)*tmp8 + 3
    tmp183 = 6*tmp4
    tmp186 = (19.0/2.0)*tmp4 - 2
    tmp187 = 3 - 12*tmp4
    tmp188 = -593.0/60.0*tmp4 + (407.0/30.0)*tmp8 + 2.0/3.0
    tmp189 = -tmp4 + 44*tmp5*tmp6*tmp7 - 7.0/2.0
    tmp193 = (131.0/84.0)*tmp4 + 61.0/12.0
    tmp194 = (21.0/2.0)*tmp4 - 6
    tmp195 = -1636.0/21.0*tmp4 + (9487.0/504.0)*tmp8 + 4163.0/126.0
    tmp32 = ((tmp30 + tmp31)*(tmp30 + tmp31))/((tmp30)*(tmp30))
    tmp88 = tmp56*(tmp52 + 25)
    tmp91 = tmp90*(tmp59 + 16)*(tmp59 + 25)
    tmp121 = tmp120 - 1
    tmp184 = (1.0/(tmp183 - 3))
    tmp196 = tmp163*(3.0/4.0 - tmp120)
    tmp197 = tmp157*(9.0/4.0 - tmp183)
    tmp33 = tmp26*tmp32
    tmp58 = tmp26*tmp56*(tmp52 + 25)*(tmp52 + 36)
    tmp66 = tmp26*tmp64*(tmp59 + 9)*(tmp59 + 16)
    tmp71 = tmp32*tmp70
    tmp97 = tmp95*((1.0/2.0)*tmp27*tmp28 - 1.0/2.0*tmp31 - 5.0e-15)
    tmp122 = (1.0/(tmp121))
    tmp135 = -1/(tmp133 - 1)
    tmp140 = (1.0/(tmp133 - 1))
    tmp141 = tmp95*((1.0/2.0)*tmp29 + (1.0/2.0)*tmp31 - 5.0e-15)
    tmp36 = tmp33*tmp35*(tmp23 + 25)
    tmp50 = tmp33*tmp49*(tmp47 + 36)
    tmp67 = tmp66*(tmp59 + 25)*(tmp59 + 36)
    tmp83 = np.power(Omega, 15)*tmp45*tmp71
    tmp98 = ((-tmp7*tmp93 + tmp7*tmp94 - 1.0/2.0*tmp97)*(-tmp7*tmp93 + tmp7*tmp94 - 1.0/2.0*tmp97))/np.power(Omega_circ, 20.0/3.0)
    tmp142 = (1.0/(tmp141*tmp29 + tmp97))
    tmp146 = ((tmp3*tmp5 - tmp3*tmp6 - tmp97)*(tmp3*tmp5 - tmp3*tmp6 - tmp97))/((Omega_circ)*(Omega_circ)*(Omega_circ)*(Omega_circ))
    tmp152 = (1.0/((tmp121)*(tmp121)))
    tmp173 = -1/tmp121
    tmp174 = -1/((tmp121)*(tmp121)*(tmp121))
    tmp179 = tmp140*tmp4
    tmp180 = tmp140*tmp8
    tmp43 = tmp33*tmp39*tmp42*(tmp37 + 16)
    tmp77 = tmp35*tmp71*(tmp23 + 25)*(tmp23 + 36)
    tmp80 = tmp39*tmp71*(tmp37 + 16)
    tmp99 = np.power(Omega, 11)*tmp98
    tmp138 = tmp117*tmp135*tmp137
    tmp143 = tmp126*tmp142
    tmp144 = np.power(Omega, 35.0/3.0)*tmp98
    tmp147 = np.power(Omega, 7)*tmp146*tmp70
    tmp154 = tmp128*tmp152
    tmp181 = 30*m1*m2*tmp140*tmp3 - 5*tmp140 - 40*tmp180
    tmp81 = tmp42*tmp80*(tmp37 + 36)
    tmp172 = tmp128*tmp143
    EulerGamma = 0.57721566490153286
    flux = -1.0/8.0*Omega*((959412031562833670717182083.0/13351440429687500000000000000.0)*np.power(Omega, 29.0/3.0)*tmp132*tmp33*tmp39*np.power(Omega*((320.0/81.0)*tmp12*tmp162*tmp174 + tmp127*tmp173*((13.0/9.0)*tmp4 + 2.0/9.0) + tmp154*((607.0/81.0)*tmp12 - 1478.0/405.0*tmp4 + (503.0/81.0)*tmp8 + 2.0/9.0)) + tmp0*(tmp127*tmp154*(-88.0/27.0*tmp4 - 50.0/27.0*tmp8 + 2.0/3.0) + tmp152*((1610009.0/320760.0)*m1*m2*tmp3 + (77141.0/40095.0)*tmp101*tmp93*tmp94 - 508474.0/40095.0*tmp12 - 945121.0/320760.0*tmp8 - 180566.0/200475.0) + tmp155*tmp173*(-tmp120 + 4*tmp8 + 1.0/3.0) + tmp157*tmp174*(-2452.0/243.0*tmp102 - 1997.0/243.0*tmp12 - 43.0/27.0*tmp4 + (1435.0/243.0)*tmp5*tmp6*tmp7 + 1.0/3.0)) + 4*tmp117*tmp128*tmp4/(3 - 9*tmp4) + tmp13*(-16.0/9.0*tmp152*tmp157*tmp8 + tmp173*((223.0/54.0)*m1*m2*tmp3 - 32.0/27.0*tmp8 - 164.0/135.0)) + tmp145*((17056.0/8505.0)*tmp119 - 10607269449358.0/3072140846775.0 + (17056.0/8505.0)*EulerGamma) + tmp149*((18778864.0/12629925.0)*tmp119 - 1312549797426453052.0/176264081083715625.0 + (18778864.0/12629925.0)*EulerGamma) + tmp150*(tmp127*tmp152*((889673.0/106920.0)*tmp12 + (376177.0/35640.0)*tmp4 - 75737.0/5346.0*tmp8 - 2788.0/1215.0) + tmp127*tmp157*tmp174*((608.0/81.0)*tmp12 - 16.0/9.0*tmp4 + (736.0/81.0)*tmp8) + tmp128*tmp174*((20471053.0/962280.0)*m1*m2*tmp3 + (101706029.0/962280.0)*tmp10*tmp11*tmp9 - 40204523.0/962280.0*tmp102 - 1184225.0/96228.0*tmp177 - 14103833.0/192456.0*tmp8 - 2788.0/1215.0) + tmp152*tmp165*(-32.0/3.0*tmp12 - 8.0/9.0*tmp4 + 8*tmp5*tmp6*tmp7) + tmp162*((43528.0/2187.0)*tmp102 - 40232.0/2187.0*tmp12 + (96176.0/2187.0)*tmp177 - 8.0/9.0*tmp4 + (376.0/81.0)*tmp8)/((tmp121)*(tmp121)*(tmp121)*(tmp121))) + tmp20*(-104.0/63.0*tmp119 - 104.0/63.0*EulerGamma + 5849948554.0/940355325.0) + tmp4*(-13.0/2.0*tmp145 + 98*tmp149 + (333.0/1000.0)*tmp20) + 1, 6) + (477464829275686064616544614241.0/1054687500000000000000000000000.0)*np.power(Omega, 23.0/3.0)*tmp146*tmp26*tmp64*((tmp141*(Omega*(tmp128*((79.0/84.0)*tmp4 + 61.0/12.0) + tmp143*tmp193) + tmp0*(tmp155*(-tmp133 - 3) + tmp157*((1.0/2.0)*tmp4 - 3) + tmp172*tmp194) + tmp117*(-3.0/4.0*chi1 - 3.0/4.0*chi2 - 3.0/2.0*tmp143) + tmp150*(tmp128*((1709.0/1008.0)*tmp4 + (613.0/1008.0)*tmp8 - 81.0/16.0) + tmp142*tmp196 + tmp142*tmp198 + tmp143*tmp197 + (3.0/4.0)*tmp162 + tmp165*(9.0/4.0 - tmp120)) + tmp20*(tmp155*(-9287.0/1008.0*tmp4 + (5.0/7.0)*tmp8 + 4163.0/252.0) + tmp157*(-2633.0/1008.0*tmp4 + (139.0/72.0)*tmp8 + 4163.0/252.0) + tmp172*tmp195)) + tmp141*((tmp0*(-10993.0/14112.0*tmp4 + (617.0/4704.0)*tmp5*tmp6*tmp7 - 47009.0/56448.0) + tmp13*((23.0/84.0)*tmp4 - 59.0/56.0) + tmp145*((6313.0/5880.0)*tmp139 - 1168617463883.0/911303737344.0 + (6313.0/5880.0)*EulerGamma) + tmp149*((5029963.0/5927040.0)*tmp139 - 63735873771463.0/16569158860800.0 + (5029963.0/5927040.0)*EulerGamma) + tmp20*(-107.0/105.0*tmp139 - 107.0/105.0*EulerGamma + 7613184941.0/2607897600.0) + tmp4*((53.0/2.0)*tmp145 + 80*tmp149 + (33.0/20.0)*tmp20) + 1)*(tmp0*(-10993.0/14112.0*tmp4 + (617.0/4704.0)*tmp5*tmp6*tmp7 - 47009.0/56448.0) + tmp13*((23.0/84.0)*tmp4 - 59.0/56.0) + tmp145*((6313.0/5880.0)*tmp139 - 1168617463883.0/911303737344.0 + (6313.0/5880.0)*EulerGamma) + tmp149*((5029963.0/5927040.0)*tmp139 - 63735873771463.0/16569158860800.0 + (5029963.0/5927040.0)*EulerGamma) + tmp20*(-107.0/105.0*tmp139 - 107.0/105.0*EulerGamma + 7613184941.0/2607897600.0) + tmp4*((53.0/2.0)*tmp145 + 80*tmp149 + (33.0/20.0)*tmp20) + 1)) + tmp97*(tmp117*(-3.0/4.0*chi1 + (3.0/4.0)*chi2) + tmp126*tmp13*tmp193 + tmp128*tmp168*tmp194 + tmp150*(tmp126*tmp197 + tmp196 + tmp198) + tmp158*tmp195*tmp20))*(tmp141*(Omega*(tmp128*((79.0/84.0)*tmp4 + 61.0/12.0) + tmp143*tmp193) + tmp0*(tmp155*(-tmp133 - 3) + tmp157*((1.0/2.0)*tmp4 - 3) + tmp172*tmp194) + tmp117*(-3.0/4.0*chi1 - 3.0/4.0*chi2 - 3.0/2.0*tmp143) + tmp150*(tmp128*((1709.0/1008.0)*tmp4 + (613.0/1008.0)*tmp8 - 81.0/16.0) + tmp142*tmp196 + tmp142*tmp198 + tmp143*tmp197 + (3.0/4.0)*tmp162 + tmp165*(9.0/4.0 - tmp120)) + tmp20*(tmp155*(-9287.0/1008.0*tmp4 + (5.0/7.0)*tmp8 + 4163.0/252.0) + tmp157*(-2633.0/1008.0*tmp4 + (139.0/72.0)*tmp8 + 4163.0/252.0) + tmp172*tmp195)) + tmp141*((tmp0*(-10993.0/14112.0*tmp4 + (617.0/4704.0)*tmp5*tmp6*tmp7 - 47009.0/56448.0) + tmp13*((23.0/84.0)*tmp4 - 59.0/56.0) + tmp145*((6313.0/5880.0)*tmp139 - 1168617463883.0/911303737344.0 + (6313.0/5880.0)*EulerGamma) + tmp149*((5029963.0/5927040.0)*tmp139 - 63735873771463.0/16569158860800.0 + (5029963.0/5927040.0)*EulerGamma) + tmp20*(-107.0/105.0*tmp139 - 107.0/105.0*EulerGamma + 7613184941.0/2607897600.0) + tmp4*((53.0/2.0)*tmp145 + 80*tmp149 + (33.0/20.0)*tmp20) + 1)*(tmp0*(-10993.0/14112.0*tmp4 + (617.0/4704.0)*tmp5*tmp6*tmp7 - 47009.0/56448.0) + tmp13*((23.0/84.0)*tmp4 - 59.0/56.0) + tmp145*((6313.0/5880.0)*tmp139 - 1168617463883.0/911303737344.0 + (6313.0/5880.0)*EulerGamma) + tmp149*((5029963.0/5927040.0)*tmp139 - 63735873771463.0/16569158860800.0 + (5029963.0/5927040.0)*EulerGamma) + tmp20*(-107.0/105.0*tmp139 - 107.0/105.0*EulerGamma + 7613184941.0/2607897600.0) + tmp4*((53.0/2.0)*tmp145 + 80*tmp149 + (33.0/20.0)*tmp20) + 1)) + tmp97*(tmp117*(-3.0/4.0*chi1 + (3.0/4.0)*chi2) + tmp126*tmp13*tmp193 + tmp128*tmp168*tmp194 + tmp150*(tmp126*tmp197 + tmp196 + tmp198) + tmp158*tmp195*tmp20))) + (77712374556589527328091748723.0/9536743164062500000000000000.0)*((Omega)*(Omega)*(Omega)*(Omega)*(Omega))*tmp39*tmp71*((m1*tmp28 + m2*tmp28)*(m1*tmp28 + m2*tmp28))*((np.power(Omega, 7.0/3.0)*(tmp127*tmp157*(tmp133 + 1) + tmp127*((50140.0/3969.0)*tmp4 + (97865.0/63504.0)*tmp8 + 18733.0/15876.0) + tmp128*((50803.0/63504.0)*tmp12 + (74749.0/5292.0)*tmp4 - 245717.0/63504.0*tmp8 + 18733.0/15876.0) + tmp162*(tmp4 + 1.0/3.0) + tmp163*tmp29*(1.0/3.0 - 4.0/3.0*tmp4) + tmp165*(-tmp121 - 4*tmp8)) + Omega*(-0.33333333333333331*chi1 - 0.33333333333333331*chi2 + 0.66666666666666663*m1*m2*tmp128*tmp3 - 0.66666666666666663*tmp127) + tmp0*(tmp155*(1.0/2.0 - tmp133) + tmp160 - 33025.0/21168.0*tmp4 + (19583.0/42336.0)*tmp8 - 20555.0/10584.0) + tmp13*((55.0/84.0)*tmp4 - 43.0/42.0) + tmp145*((9202.0/2205.0)*tmp119 - 387216563023.0/160190110080.0 + (9202.0/2205.0)*EulerGamma) + tmp149*((439877.0/55566.0)*tmp119 - 16094530514677.0/533967033600.0 + (439877.0/55566.0)*EulerGamma) + tmp150*(tmp127*(-19.0/42.0*tmp4 - 34.0/21.0) + tmp128*((49.0/18.0)*tmp4 + (209.0/126.0)*tmp8 - 34.0/21.0)) + tmp20*(-428.0/105.0*tmp119 + (10620745.0/39118464.0)*tmp12 + tmp155*(-457.0/504.0*tmp4 - 27.0/14.0*tmp8 + 89.0/252.0) + tmp157*(-1817.0/504.0*tmp4 + (10.0/9.0)*tmp8 + 89.0/252.0) + tmp158*tmp29*(89.0/126.0 - 781.0/252.0*tmp4) + (41.0/192.0)*tmp161*tmp4 - 48993925.0/9779616.0*tmp4 - 6292061.0/3259872.0*tmp8 - 428.0/105.0*EulerGamma + 1556919113.0/122245200.0) + tmp4*(21.199999999999999*tmp145 - 411*tmp149) + 1)*(np.power(Omega, 7.0/3.0)*(tmp127*tmp157*(tmp133 + 1) + tmp127*((50140.0/3969.0)*tmp4 + (97865.0/63504.0)*tmp8 + 18733.0/15876.0) + tmp128*((50803.0/63504.0)*tmp12 + (74749.0/5292.0)*tmp4 - 245717.0/63504.0*tmp8 + 18733.0/15876.0) + tmp162*(tmp4 + 1.0/3.0) + tmp163*tmp29*(1.0/3.0 - 4.0/3.0*tmp4) + tmp165*(-tmp121 - 4*tmp8)) + Omega*(-0.33333333333333331*chi1 - 0.33333333333333331*chi2 + 0.66666666666666663*m1*m2*tmp128*tmp3 - 0.66666666666666663*tmp127) + tmp0*(tmp155*(1.0/2.0 - tmp133) + tmp160 - 33025.0/21168.0*tmp4 + (19583.0/42336.0)*tmp8 - 20555.0/10584.0) + tmp13*((55.0/84.0)*tmp4 - 43.0/42.0) + tmp145*((9202.0/2205.0)*tmp119 - 387216563023.0/160190110080.0 + (9202.0/2205.0)*EulerGamma) + tmp149*((439877.0/55566.0)*tmp119 - 16094530514677.0/533967033600.0 + (439877.0/55566.0)*EulerGamma) + tmp150*(tmp127*(-19.0/42.0*tmp4 - 34.0/21.0) + tmp128*((49.0/18.0)*tmp4 + (209.0/126.0)*tmp8 - 34.0/21.0)) + tmp20*(-428.0/105.0*tmp119 + (10620745.0/39118464.0)*tmp12 + tmp155*(-457.0/504.0*tmp4 - 27.0/14.0*tmp8 + 89.0/252.0) + tmp157*(-1817.0/504.0*tmp4 + (10.0/9.0)*tmp8 + 89.0/252.0) + tmp158*tmp29*(89.0/126.0 - 781.0/252.0*tmp4) + (41.0/192.0)*tmp161*tmp4 - 48993925.0/9779616.0*tmp4 - 6292061.0/3259872.0*tmp8 - 428.0/105.0*EulerGamma + 1556919113.0/122245200.0) + tmp4*(21.199999999999999*tmp145 - 411*tmp149) + 1)*(np.power(Omega, 7.0/3.0)*(tmp127*tmp157*(tmp133 + 1) + tmp127*((50140.0/3969.0)*tmp4 + (97865.0/63504.0)*tmp8 + 18733.0/15876.0) + tmp128*((50803.0/63504.0)*tmp12 + (74749.0/5292.0)*tmp4 - 245717.0/63504.0*tmp8 + 18733.0/15876.0) + tmp162*(tmp4 + 1.0/3.0) + tmp163*tmp29*(1.0/3.0 - 4.0/3.0*tmp4) + tmp165*(-tmp121 - 4*tmp8)) + Omega*(-0.33333333333333331*chi1 - 0.33333333333333331*chi2 + 0.66666666666666663*m1*m2*tmp128*tmp3 - 0.66666666666666663*tmp127) + tmp0*(tmp155*(1.0/2.0 - tmp133) + tmp160 - 33025.0/21168.0*tmp4 + (19583.0/42336.0)*tmp8 - 20555.0/10584.0) + tmp13*((55.0/84.0)*tmp4 - 43.0/42.0) + tmp145*((9202.0/2205.0)*tmp119 - 387216563023.0/160190110080.0 + (9202.0/2205.0)*EulerGamma) + tmp149*((439877.0/55566.0)*tmp119 - 16094530514677.0/533967033600.0 + (439877.0/55566.0)*EulerGamma) + tmp150*(tmp127*(-19.0/42.0*tmp4 - 34.0/21.0) + tmp128*((49.0/18.0)*tmp4 + (209.0/126.0)*tmp8 - 34.0/21.0)) + tmp20*(-428.0/105.0*tmp119 + (10620745.0/39118464.0)*tmp12 + tmp155*(-457.0/504.0*tmp4 - 27.0/14.0*tmp8 + 89.0/252.0) + tmp157*(-1817.0/504.0*tmp4 + (10.0/9.0)*tmp8 + 89.0/252.0) + tmp158*tmp29*(89.0/126.0 - 781.0/252.0*tmp4) + (41.0/192.0)*tmp161*tmp4 - 48993925.0/9779616.0*tmp4 - 6292061.0/3259872.0*tmp8 - 428.0/105.0*EulerGamma + 1556919113.0/122245200.0) + tmp4*(21.199999999999999*tmp145 - 411*tmp149) + 1)*(np.power(Omega, 7.0/3.0)*(tmp127*tmp157*(tmp133 + 1) + tmp127*((50140.0/3969.0)*tmp4 + (97865.0/63504.0)*tmp8 + 18733.0/15876.0) + tmp128*((50803.0/63504.0)*tmp12 + (74749.0/5292.0)*tmp4 - 245717.0/63504.0*tmp8 + 18733.0/15876.0) + tmp162*(tmp4 + 1.0/3.0) + tmp163*tmp29*(1.0/3.0 - 4.0/3.0*tmp4) + tmp165*(-tmp121 - 4*tmp8)) + Omega*(-0.33333333333333331*chi1 - 0.33333333333333331*chi2 + 0.66666666666666663*m1*m2*tmp128*tmp3 - 0.66666666666666663*tmp127) + tmp0*(tmp155*(1.0/2.0 - tmp133) + tmp160 - 33025.0/21168.0*tmp4 + (19583.0/42336.0)*tmp8 - 20555.0/10584.0) + tmp13*((55.0/84.0)*tmp4 - 43.0/42.0) + tmp145*((9202.0/2205.0)*tmp119 - 387216563023.0/160190110080.0 + (9202.0/2205.0)*EulerGamma) + tmp149*((439877.0/55566.0)*tmp119 - 16094530514677.0/533967033600.0 + (439877.0/55566.0)*EulerGamma) + tmp150*(tmp127*(-19.0/42.0*tmp4 - 34.0/21.0) + tmp128*((49.0/18.0)*tmp4 + (209.0/126.0)*tmp8 - 34.0/21.0)) + tmp20*(-428.0/105.0*tmp119 + (10620745.0/39118464.0)*tmp12 + tmp155*(-457.0/504.0*tmp4 - 27.0/14.0*tmp8 + 89.0/252.0) + tmp157*(-1817.0/504.0*tmp4 + (10.0/9.0)*tmp8 + 89.0/252.0) + tmp158*tmp29*(89.0/126.0 - 781.0/252.0*tmp4) + (41.0/192.0)*tmp161*tmp4 - 48993925.0/9779616.0*tmp4 - 6292061.0/3259872.0*tmp8 - 428.0/105.0*EulerGamma + 1556919113.0/122245200.0) + tmp4*(21.199999999999999*tmp145 - 411*tmp149) + 1))/np.power(Omega_circ, 8.0/3.0) + (6666197686272648743149580252067.0/1712404052734375000000000000000000000.0)*tmp106*tmp33*tmp73*(tmp72 + 49)*np.power(tmp13*(6104*tmp102 - 29351*tmp12 - 16185*tmp4 + 37828*tmp8 + 2144)/(11662*tmp12 + 11662*tmp4 - 23324*tmp8 - 1666) + 1, 14) + (12729286952369368445651715480361.0/2326774986643285956233739852905273437500.0)*tmp106*tmp36*(tmp23 + 36)*(tmp23 + 49)*np.power(tmp107*(41076*tmp102 - 217959*tmp12 - 131805*tmp4 + 298872*tmp8 + 17756) + 1, 14) + (4143648096474399341626802965321.0/87362644831833243370056152343750000000000000.0)*tmp106*tmp43*(tmp37 + 36)*(tmp37 + 49)*np.power(tmp107*(32760*tmp102 - 190239*tmp12 - 123489*tmp4 + 273924*tmp8 + 16832) + 1, 14) + (8922740565651218513167297198689.0/424921296800000000000000000000000000000000000.0)*tmp111*tmp32*tmp58*(tmp52 + 49)*(tmp52 + 64)*np.power(tmp110*(24520*tmp102 - 149950*tmp12 - 131059*tmp4 + 249018*tmp8 + 20598) + 1, 16) + (63748432253452348706521541130361.0/3326821322972647500000000000000000000000000000000000000.0)*tmp111*tmp32*tmp67*(tmp59 + 49)*(tmp59 + 64)*np.power(tmp110*(21640*tmp102 - 138430*tmp12 - 126451*tmp4 + 236922*tmp8 + 20022) + 1, 16) + (1059891263751551363546942226424840276151521.0/8313589311885000000000000000000000000000000000000.0)*tmp111*tmp33*tmp85*(tmp84 + 64)*np.power(tmp110*(38920*tmp102 - 207550*tmp12 - 154099*tmp4 + 309498*tmp8 + 23478) + 1, 16) + (448968550484498296555338593.0/1503307474922373120000000000000000000.0)*tmp111*tmp50*(tmp47 + 49)*(tmp47 + 64)*np.power(tmp13*(6056*tmp102 - 34598*tmp12 - 28055*tmp4 + 54642*tmp8 + 4350)/(14592*tmp12 + 21888*tmp4 - 36480*tmp8 - 3648) + 1, 16) + (69721657441386791987771542605413907.0/15155846119232177734375000000000000000000000.0)*tmp115*tmp71*tmp73*(tmp72 + 49)*(tmp72 + 64)*np.power(tmp13*(2653*tmp102 - 13055*tmp12 - 7498*tmp4 + 17269*tmp8 + 1002)/(6384*tmp12 + 6384*tmp4 - 12768*tmp8 - 912) + 1, 16) + (870537749976894817763112040803074048.0/426739481684942657011561095714569091796875.0)*tmp115*tmp71*(tmp114 + 1)*(tmp114 + 4)*(tmp114 + 9)*(tmp114 + 16)*(tmp114 + 25)*(tmp114 + 36)*(tmp114 + 49)*(tmp114 + 64)*np.power(tmp113*(12243*tmp102 - 53445*tmp12 - 26778*tmp4 + 64659*tmp8 + 3482) + 1, 16)/(1 - np.exp(-32*tmp34)) + (5651416571920869579318348721.0/3371768744177324697375297546386718750000.0)*tmp115*tmp77*(tmp23 + 49)*(tmp23 + 64)*np.power(tmp113*(4899*tmp102 - 28965*tmp12 - 19434*tmp4 + 42627*tmp8 + 2666) + 1, 16) + (7018886249798228774293767649.0/2415078583220214843750000000000000000000000000.0)*tmp115*tmp81*(tmp37 + 49)*(tmp37 + 64)*np.power(tmp113*(3063*tmp102 - 22845*tmp12 - 17598*tmp4 + 37119*tmp8 + 2462) + 1, 16) + (4895879597065138998508197857569.0/19162237644195556640625000000000.0)*tmp116*tmp131*tmp35*tmp71*np.power(Omega*tmp122*(tmp127*(2.0/3.0 - 13.0/5.0*tmp4) + tmp128*(-41.0/15.0*tmp4 + (14.0/5.0)*tmp8 + 2.0/3.0)) + tmp0*((3976393.0/1006720.0)*tmp102*tmp152 - 801565.0/37752.0*tmp12*tmp152 - tmp133*tmp155 + (32485357.0/4404400.0)*tmp152*tmp4 - 1401149.0/1415700.0*tmp152*tmp8 - 14210377.0/8808800.0*tmp152 + (1.0/2.0)*tmp155 + tmp160) + tmp122*tmp13*(-587.0/132.0*tmp4 + (175.0/88.0)*tmp8 + 269.0/220.0) + tmp145*((845198.0/190575.0)*tmp148 - 172066910136202271.0/19426955708160000.0 + (845198.0/190575.0)*EulerGamma) + tmp149*((22324502267.0/3815311500.0)*tmp148 - 17154485653213713419357.0/568432724020761600000.0 + (22324502267.0/3815311500.0)*EulerGamma) + tmp150*(tmp127*tmp152*((597.0/440.0)*tmp12 + (10679.0/1650.0)*tmp4 - 1933.0/220.0*tmp8 - 69.0/55.0) + tmp154*((591.0/44.0)*tmp102 + (8539.0/440.0)*tmp12 + (16571.0/1650.0)*tmp4 - 2673.0/100.0*tmp8 - 69.0/55.0)) + tmp20*(-12568.0/3465.0*tmp148 - 12568.0/3465.0*EulerGamma + 16600939332793.0/1098809712000.0) + tmp4*((78.0/5.0)*tmp145 - 216*tmp149 - 89.0/25.0*tmp20) + 1, 8) + (31084949822635821896125896262921.0/436047363281250000000000000000000000.0)*tmp116*tmp132*tmp80*np.power(Omega*tmp122*(tmp127*(2.0/3.0 - 7.0/5.0*tmp4) + tmp128*(-59.0/15.0*tmp4 + (26.0/5.0)*tmp8 + 2.0/3.0)) + tmp0*((4108813.0/4404400.0)*m1*m2*tmp3 - 1204847.0/1006720.0*tmp102 - 3628549.0/377520.0*tmp12 + (21506941.0/5662800.0)*tmp5*tmp6*tmp7 - 3190529.0/8808800.0)/((tmp121)*(tmp121)) + tmp122*tmp13*(-353.0/132.0*tmp4 + (19.0/88.0)*tmp8 + 191.0/220.0) + tmp20*(-3142.0/3465.0*tmp119 - 3142.0/3465.0*EulerGamma + 848238724511.0/219761942400.0) + 1, 8) + (1057509992966070739262184940900563.0/19140625000000000000000000000000000.0)*tmp144*tmp26*tmp56*((tmp141*(Omega*tmp135*(tmp128*(-667.0/44.0*tmp4 - 529.0/132.0*tmp8) + tmp143*tmp167) + tmp0*tmp135*(tmp155*(-37.0/3.0*tmp4 + 12*tmp8 + 3.0/2.0) + tmp157*((1.0/3.0)*tmp4 + (35.0/6.0)*tmp8 + 3.0/2.0) + tmp169*tmp172) + tmp117*tmp135*((5.0/2.0)*m1*m2*tmp128*tmp3 - tmp137*tmp143)) + tmp141*((-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)*(-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)*(-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)*(-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)) + tmp97*(tmp0*tmp135*tmp158*tmp169 - tmp126*tmp138 + tmp135*tmp167*tmp168))*(tmp141*(Omega*tmp135*(tmp128*(-667.0/44.0*tmp4 - 529.0/132.0*tmp8) + tmp143*tmp167) + tmp0*tmp135*(tmp155*(-37.0/3.0*tmp4 + 12*tmp8 + 3.0/2.0) + tmp157*((1.0/3.0)*tmp4 + (35.0/6.0)*tmp8 + 3.0/2.0) + tmp169*tmp172) + tmp117*tmp135*((5.0/2.0)*m1*m2*tmp128*tmp3 - tmp137*tmp143)) + tmp141*((-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)*(-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)*(-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)*(-6894273.0/7047040.0*tmp0 + tmp13*tmp135*((547.0/176.0)*m1*m2*tmp3 - 10.0/11.0*tmp8 - 111.0/88.0) + tmp145*((174381.0/67760.0)*tmp166 - 2465107182496333.0/460490801971200.0 + (174381.0/67760.0)*EulerGamma) + tmp20*(-1571.0/770.0*tmp166 - 1571.0/770.0*EulerGamma + 1664224207351.0/195343948800.0) + tmp4*(-327.0/500.0*tmp0 + (37.0/2.0)*tmp145 - 369.0/100.0*tmp20) + 1)) + tmp97*(tmp0*tmp135*tmp158*tmp169 - tmp126*tmp138 + tmp135*tmp167*tmp168))) + (290126198344600777323475443001.0/723515625000000000000000000000000000.0)*tmp144*tmp66*((-tmp126*tmp138*tmp97 + tmp138*tmp141*(tmp128 - tmp143) + tmp141*((-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)*(-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)*(-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)*(-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)))*(-tmp126*tmp138*tmp97 + tmp138*tmp141*(tmp128 - tmp143) + tmp141*((-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)*(-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)*(-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)*(-7775491.0/21141120.0*tmp0 + tmp13*tmp140*(-1385.0/528.0*tmp4 + (6.0/11.0)*tmp8 + 301.0/264.0) + tmp20*(-1571.0/6930.0*tmp139 - 1571.0/6930.0*EulerGamma + 1227423222031.0/1758095539200.0) + 1)))) + (352503330988690246420728313633521.0/47851562500000000000000000000000.0)*tmp147*tmp55*((tmp141*(Omega*(tmp128*(tmp137 - 2) + tmp143*tmp186) + tmp0*(tmp155*(3.0/2.0 - tmp183) + (3.0/2.0)*tmp157 + tmp172*tmp187) + tmp150*(tmp128*((11.0/20.0)*tmp4 + (241.0/30.0)*tmp8 + 2.0/3.0) + tmp143*tmp188) + tmp20*(tmp155*((11.0/2.0)*m1*m2*tmp3 - 12*tmp8 - 7.0/4.0) + tmp157*(-27.0/2.0*tmp4 + 6*tmp5*tmp6*tmp7 - 7.0/4.0) + tmp172*tmp189)) + tmp141*((tmp0*(-1861.0/990.0*tmp4 + (149.0/330.0)*tmp5*tmp6*tmp7 - 6719.0/3960.0) + tmp13*((2.0/3.0)*tmp4 - 7.0/6.0) + tmp145*((13.0/3.0)*tmp166 - 57566572157.0/8562153600.0 + (13.0/3.0)*EulerGamma) + tmp149*((87347.0/13860.0)*tmp166 - 903823148417327.0/30566888352000.0 + (87347.0/13860.0)*EulerGamma) + tmp20*((12011.0/46332.0)*tmp12 - 26.0/7.0*tmp166 + tmp4*((41.0/192.0)*tmp161 - 129509.0/25740.0) - 274621.0/154440.0*tmp8 - 26.0/7.0*EulerGamma + 3203101567.0/227026800.0) + tmp4*(12*tmp145 - 215*tmp149) + 1)*(tmp0*(-1861.0/990.0*tmp4 + (149.0/330.0)*tmp5*tmp6*tmp7 - 6719.0/3960.0) + tmp13*((2.0/3.0)*tmp4 - 7.0/6.0) + tmp145*((13.0/3.0)*tmp166 - 57566572157.0/8562153600.0 + (13.0/3.0)*EulerGamma) + tmp149*((87347.0/13860.0)*tmp166 - 903823148417327.0/30566888352000.0 + (87347.0/13860.0)*EulerGamma) + tmp20*((12011.0/46332.0)*tmp12 - 26.0/7.0*tmp166 + tmp4*((41.0/192.0)*tmp161 - 129509.0/25740.0) - 274621.0/154440.0*tmp8 - 26.0/7.0*EulerGamma + 3203101567.0/227026800.0) + tmp4*(12*tmp145 - 215*tmp149) + 1)*(tmp0*(-1861.0/990.0*tmp4 + (149.0/330.0)*tmp5*tmp6*tmp7 - 6719.0/3960.0) + tmp13*((2.0/3.0)*tmp4 - 7.0/6.0) + tmp145*((13.0/3.0)*tmp166 - 57566572157.0/8562153600.0 + (13.0/3.0)*EulerGamma) + tmp149*((87347.0/13860.0)*tmp166 - 903823148417327.0/30566888352000.0 + (87347.0/13860.0)*EulerGamma) + tmp20*((12011.0/46332.0)*tmp12 - 26.0/7.0*tmp166 + tmp4*((41.0/192.0)*tmp161 - 129509.0/25740.0) - 274621.0/154440.0*tmp8 - 26.0/7.0*EulerGamma + 3203101567.0/227026800.0) + tmp4*(12*tmp145 - 215*tmp149) + 1)) + tmp97*(tmp0*tmp158*tmp187 + tmp126*tmp150*tmp188 + tmp158*tmp189*tmp20 + tmp168*tmp186))*(tmp141*(Omega*(tmp128*(tmp137 - 2) + tmp143*tmp186) + tmp0*(tmp155*(3.0/2.0 - tmp183) + (3.0/2.0)*tmp157 + tmp172*tmp187) + tmp150*(tmp128*((11.0/20.0)*tmp4 + (241.0/30.0)*tmp8 + 2.0/3.0) + tmp143*tmp188) + tmp20*(tmp155*((11.0/2.0)*m1*m2*tmp3 - 12*tmp8 - 7.0/4.0) + tmp157*(-27.0/2.0*tmp4 + 6*tmp5*tmp6*tmp7 - 7.0/4.0) + tmp172*tmp189)) + tmp141*((tmp0*(-1861.0/990.0*tmp4 + (149.0/330.0)*tmp5*tmp6*tmp7 - 6719.0/3960.0) + tmp13*((2.0/3.0)*tmp4 - 7.0/6.0) + tmp145*((13.0/3.0)*tmp166 - 57566572157.0/8562153600.0 + (13.0/3.0)*EulerGamma) + tmp149*((87347.0/13860.0)*tmp166 - 903823148417327.0/30566888352000.0 + (87347.0/13860.0)*EulerGamma) + tmp20*((12011.0/46332.0)*tmp12 - 26.0/7.0*tmp166 + tmp4*((41.0/192.0)*tmp161 - 129509.0/25740.0) - 274621.0/154440.0*tmp8 - 26.0/7.0*EulerGamma + 3203101567.0/227026800.0) + tmp4*(12*tmp145 - 215*tmp149) + 1)*(tmp0*(-1861.0/990.0*tmp4 + (149.0/330.0)*tmp5*tmp6*tmp7 - 6719.0/3960.0) + tmp13*((2.0/3.0)*tmp4 - 7.0/6.0) + tmp145*((13.0/3.0)*tmp166 - 57566572157.0/8562153600.0 + (13.0/3.0)*EulerGamma) + tmp149*((87347.0/13860.0)*tmp166 - 903823148417327.0/30566888352000.0 + (87347.0/13860.0)*EulerGamma) + tmp20*((12011.0/46332.0)*tmp12 - 26.0/7.0*tmp166 + tmp4*((41.0/192.0)*tmp161 - 129509.0/25740.0) - 274621.0/154440.0*tmp8 - 26.0/7.0*EulerGamma + 3203101567.0/227026800.0) + tmp4*(12*tmp145 - 215*tmp149) + 1)*(tmp0*(-1861.0/990.0*tmp4 + (149.0/330.0)*tmp5*tmp6*tmp7 - 6719.0/3960.0) + tmp13*((2.0/3.0)*tmp4 - 7.0/6.0) + tmp145*((13.0/3.0)*tmp166 - 57566572157.0/8562153600.0 + (13.0/3.0)*EulerGamma) + tmp149*((87347.0/13860.0)*tmp166 - 903823148417327.0/30566888352000.0 + (87347.0/13860.0)*EulerGamma) + tmp20*((12011.0/46332.0)*tmp12 - 26.0/7.0*tmp166 + tmp4*((41.0/192.0)*tmp161 - 129509.0/25740.0) - 274621.0/154440.0*tmp8 - 26.0/7.0*EulerGamma + 3203101567.0/227026800.0) + tmp4*(12*tmp145 - 215*tmp149) + 1)) + tmp97*(tmp0*tmp158*tmp187 + tmp126*tmp150*tmp188 + tmp158*tmp189*tmp20 + tmp168*tmp186))) + (290126198344600777323475443001.0/1291992187500000000000000000000000.0)*tmp147*tmp90*((Omega*tmp141*(tmp128*((13.0/2.0)*tmp4 - 2) + tmp143*((11.0/2.0)*tmp4 - 2)) + Omega*tmp97*(-5.0/16.0*chi1 + (5.0/16.0)*chi2) + tmp141*((tmp0*(-1685.0/1782.0*tmp4 - 829.0/1782.0*tmp8 + 101.0/7128.0) - tmp13*((2.0/9.0)*tmp4 + 13.0/18.0) + tmp145*((169.0/567.0)*tmp139 + (169.0/567.0)*EulerGamma + 2606097992581.0/4854741091200.0) + tmp20*(-26.0/63.0*tmp139 - 26.0/63.0*EulerGamma + 11706720301.0/6129723600.0) + 1)*(tmp0*(-1685.0/1782.0*tmp4 - 829.0/1782.0*tmp8 + 101.0/7128.0) - tmp13*((2.0/9.0)*tmp4 + 13.0/18.0) + tmp145*((169.0/567.0)*tmp139 + (169.0/567.0)*EulerGamma + 2606097992581.0/4854741091200.0) + tmp20*(-26.0/63.0*tmp139 - 26.0/63.0*EulerGamma + 11706720301.0/6129723600.0) + 1)*(tmp0*(-1685.0/1782.0*tmp4 - 829.0/1782.0*tmp8 + 101.0/7128.0) - tmp13*((2.0/9.0)*tmp4 + 13.0/18.0) + tmp145*((169.0/567.0)*tmp139 + (169.0/567.0)*EulerGamma + 2606097992581.0/4854741091200.0) + tmp20*(-26.0/63.0*tmp139 - 26.0/63.0*EulerGamma + 11706720301.0/6129723600.0) + 1)))*(Omega*tmp141*(tmp128*((13.0/2.0)*tmp4 - 2) + tmp143*((11.0/2.0)*tmp4 - 2)) + Omega*tmp97*(-5.0/16.0*chi1 + (5.0/16.0)*chi2) + tmp141*((tmp0*(-1685.0/1782.0*tmp4 - 829.0/1782.0*tmp8 + 101.0/7128.0) - tmp13*((2.0/9.0)*tmp4 + 13.0/18.0) + tmp145*((169.0/567.0)*tmp139 + (169.0/567.0)*EulerGamma + 2606097992581.0/4854741091200.0) + tmp20*(-26.0/63.0*tmp139 - 26.0/63.0*EulerGamma + 11706720301.0/6129723600.0) + 1)*(tmp0*(-1685.0/1782.0*tmp4 - 829.0/1782.0*tmp8 + 101.0/7128.0) - tmp13*((2.0/9.0)*tmp4 + 13.0/18.0) + tmp145*((169.0/567.0)*tmp139 + (169.0/567.0)*EulerGamma + 2606097992581.0/4854741091200.0) + tmp20*(-26.0/63.0*tmp139 - 26.0/63.0*EulerGamma + 11706720301.0/6129723600.0) + 1)*(tmp0*(-1685.0/1782.0*tmp4 - 829.0/1782.0*tmp8 + 101.0/7128.0) - tmp13*((2.0/9.0)*tmp4 + 13.0/18.0) + tmp145*((169.0/567.0)*tmp139 + (169.0/567.0)*EulerGamma + 2606097992581.0/4854741091200.0) + tmp20*(-26.0/63.0*tmp139 - 26.0/63.0*EulerGamma + 11706720301.0/6129723600.0) + 1)))) + (4895879597065138998508197857569.0/3528760280460119247436523437500000.0)*tmp19*tmp36*np.power(-16213384.0/15526875.0*tmp0 + tmp14*(33320*tmp12 + 96019*tmp4 - 127610*tmp8 - 17448) + 1, 10) + (31084949822635821896125896262921.0/137655258178710937500000000000000000000.0)*tmp19*tmp43*np.power(-7187914.0/15526875.0*tmp0 + tmp14*(21980*tmp12 + 84679*tmp4 - 104930*tmp8 - 15828) + 1, 10) + (4187739572145638805543839833230027.0/74186612500000000000000000000000000000000.0)*tmp32*tmp46*tmp58*np.power(tmp44*(156*tmp12 + 742*tmp4 - 750*tmp8 - 169) + 1, 12) + (64112709009186366516744544133641.0/14667339112207031250000000000000000000000000000.0)*tmp32*tmp46*tmp67*np.power(tmp44*(124*tmp12 + 694*tmp4 - 670*tmp8 - 161) + 1, 12) + (90832645585624152489226499161.0/1031704128000000000000000000000000.0)*tmp46*tmp50*np.power(tmp44*(220*tmp12 + 838*tmp4 - 910*tmp8 - 185) + 1, 12) + (635828519099369067424585494127.0/6998400000000000000000000000000.0)*tmp49*tmp70*tmp99*((tmp141*(Omega*(tmp128*(-10*tmp179 + 10*tmp180 + 10*tmp184) + tmp143*(-70*tmp184*tmp4 + 110*tmp184*tmp8 + 10*tmp184)) + tmp0*(tmp155*(15*m1*m2*tmp140*tmp3 - 20*tmp180 - 5/(4*tmp4 - 2)) + (5.0/2.0)*tmp157 + tmp172*tmp181)) + tmp141*((-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)) + tmp97*(tmp0*tmp158*tmp181 + tmp168*((10.0/3.0)*tmp140 - 70.0/3.0*tmp179 + (110.0/3.0)*tmp180)))*(tmp141*(Omega*(tmp128*(-10*tmp179 + 10*tmp180 + 10*tmp184) + tmp143*(-70*tmp184*tmp4 + 110*tmp184*tmp8 + 10*tmp184)) + tmp0*(tmp155*(15*m1*m2*tmp140*tmp3 - 20*tmp180 - 5/(4*tmp4 - 2)) + (5.0/2.0)*tmp157 + tmp172*tmp181)) + tmp141*((-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)*(-3353747.0/2129400.0*tmp0 + tmp13*((487.0/390.0)*tmp140 - 649.0/195.0*tmp179 + (256.0/195.0)*tmp180) + tmp145*((376451.0/83655.0)*tmp178 - 1213641959949291437.0/118143853747920000.0 + (376451.0/83655.0)*EulerGamma) + tmp149*((2592446431.0/456756300.0)*tmp178 - 150082616449726042201261.0/4837990810977324000000.0 + (2592446431.0/456756300.0)*EulerGamma) + tmp20*(-1546.0/429.0*tmp178 - 1546.0/429.0*EulerGamma + 190606537999247.0/11957879934000.0) + tmp4*(-261.0/100.0*tmp0 - 357.0/10.0*tmp145 + (5.0/4.0)*tmp20) + 1)) + tmp97*(tmp0*tmp158*tmp181 + tmp168*((10.0/3.0)*tmp140 - 70.0/3.0*tmp179 + (110.0/3.0)*tmp180)))) + (7632465358236471041440756081.0/70685030287872000000000000000000000.0)*tmp49*tmp83*(tmp47 + 36)*(tmp47 + 49)*np.power(tmp82*(804*tmp12 + 3382*tmp4 - 3523*tmp8 - 762) + 1, 14) + (1728273474218834859335076361647.0/1248107910156250000000000000000000.0)*tmp69*tmp71*tmp73*np.power(-1025435.0/659736.0*tmp0 + tmp68*(273*tmp12 + 602*tmp4 - 861*tmp8 - 106) + 1, 12) + (12729286952369368445651715480361.0/7379961031547281891107559204101562500.0)*tmp69*tmp77*np.power(-476887.0/659736.0*tmp0 + tmp68*(133*tmp12 + 462*tmp4 - 581*tmp8 - 86) + 1, 12) + (4143648096474399341626802965321.0/94463501203805208206176757812500000000000.0)*tmp69*tmp81*np.power(-817991.0/3298680.0*tmp0 + tmp68*(49*tmp12 + 378*tmp4 - 413*tmp8 - 74) + 1, 12) + (1395913190715212935181279944410009.0/84700000000000000000000000000000000000.0)*tmp71*tmp88*tmp99*np.power(-410833.0/709800.0*tmp0 + tmp92*(-850*tmp4 + 176*tmp8 + 375) + 1, 10) + (64112709009186366516744544133641.0/7235894531250000000000000000000000000000000.0)*tmp71*tmp91*tmp99*np.power(-31877.0/304200.0*tmp0 + tmp92*(-626*tmp4 + 8*tmp8 + 319) + 1, 10) + (21630433954113293133611065845404903594929.0/353757715136718750000000000000000000000000000.0)*tmp83*tmp85*np.power(tmp82*(1380*tmp12 + 4246*tmp4 - 4963*tmp8 - 906) + 1, 14) + (80304665090860966618505674788201.0/5370099109375000000000000000000000000000000.0)*tmp83*tmp88*(tmp52 + 36)*(tmp52 + 49)*np.power(tmp82*(420*tmp12 + 2806*tmp4 - 2563*tmp8 - 666) + 1, 14) + (63748432253452348706521541130361.0/594560591830283203125000000000000000000000000000000.0)*tmp83*tmp91*(tmp59 + 36)*(tmp59 + 49)*np.power(tmp82*(228*tmp12 + 2518*tmp4 - 2083*tmp8 - 618) + 1, 14))/np.pi
    return flux