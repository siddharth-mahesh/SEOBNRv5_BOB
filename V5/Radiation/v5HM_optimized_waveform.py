import numpy as np
from scipy.special import gamma,factorial
def v5HM_optimized_waveform(m1, m2, r, phi, prstar, pphi, chi1, chi2, Hreal, Omega, Omega_circ):
    tmp0 = ((Omega)*(Omega))
    tmp1 = m1 + m2
    tmp8 = np.power(Omega, 8.0/3.0)
    tmp9 = np.log(4*np.cbrt(Omega))
    tmp10 = np.power(Omega, 10.0/3.0)
    tmp16 = np.power(Omega, 5.0/3.0)
    tmp22 = ((np.pi)*(np.pi))
    tmp25 = Hreal*Omega
    tmp26 = 2*1j
    tmp2 = (1.0/(tmp1))
    tmp13 = (1.0/2.0)*chi1 + (1.0/2.0)*chi2
    tmp14 = (1.0/2.0)*chi1 - 1.0/2.0*chi2
    tmp17 = ((m1)*(m1))*((m2)*(m2))/((tmp1)*(tmp1)*(tmp1)*(tmp1))
    tmp23 = ((m1)*(m1)*(m1))*((m2)*(m2)*(m2))/np.power(tmp1, 6)
    tmp3 = tmp2*(m1 - m2)
    tmp6 = (1.0/((tmp1)*(tmp1)))
    tmp18 = ((tmp13)*(tmp13))
    tmp19 = ((tmp14)*(tmp14))
    tmp4 = tmp3 - 1.0e-14
    tmp7 = m1*m2*tmp6
    tmp15 = tmp14*tmp3
    EulerGamma = 0.57721566490153286
    h22 = -160947584176329.0/390625000000000.0*np.sqrt(6)*np.pi*tmp0*tmp7*(1 + (1.0/2.0)*((tmp1)*(tmp1))*(((Hreal)*(Hreal)) - 1)/(m1*m2))*(m1*tmp2 + m2*tmp2)*((1.0/2.0)*tmp3 + (1.0/2.0)*np.absolute(tmp4) - 5.0e-15)*(((Hreal)*(Hreal)*(Hreal))*((Omega)*(Omega)*(Omega))*((1712.0/315.0)*tmp22 - 2203.0/81.0) + ((Hreal)*(Hreal))*tmp0*(tmp13*((8.0/3.0)*tmp7 - 4.0/3.0) - 4.0/3.0*tmp15 + (428.0/105.0)*np.pi) - 24*tmp16*tmp7 + (7.0/3.0)*tmp25)*((np.power(Omega, 7.0/3.0)*(((tmp13)*(tmp13)*(tmp13))*(tmp7 + 1.0/3.0) + tmp13*tmp19*(-4*tmp17 - 3*tmp7 + 1) + tmp13*(-245717.0/63504.0*tmp17 + (50803.0/63504.0)*tmp23 + (74749.0/5292.0)*tmp7 + 18733.0/15876.0) + ((tmp14)*(tmp14)*(tmp14))*tmp3*(1.0/3.0 - 4.0/3.0*tmp7) + tmp15*tmp18*(2*tmp7 + 1) + tmp15*((97865.0/63504.0)*tmp17 + (50140.0/3969.0)*tmp7 + 18733.0/15876.0)) + np.power(Omega, 4.0/3.0)*(tmp13*tmp15 + (19583.0/42336.0)*tmp17 + (1.0/2.0)*tmp18 + tmp19*(1.0/2.0 - 2*tmp7) - 33025.0/21168.0*tmp7 - 20555.0/10584.0) + np.power(Omega, 2.0/3.0)*((55.0/84.0)*tmp7 - 43.0/42.0) + Omega*(-0.33333333333333331*chi1 - 0.33333333333333331*chi2 + 0.66666666666666663*m1*m2*tmp13*tmp6 - 0.66666666666666663*tmp15) + tmp0*(tmp13*tmp15*(89.0/126.0 - 781.0/252.0*tmp7) - 6292061.0/3259872.0*tmp17 + tmp18*((10.0/9.0)*tmp17 - 1817.0/504.0*tmp7 + 89.0/252.0) + tmp19*(-27.0/14.0*tmp17 - 457.0/504.0*tmp7 + 89.0/252.0) + (41.0/192.0)*tmp22*tmp7 + (10620745.0/39118464.0)*tmp23 - 48993925.0/9779616.0*tmp7 - 428.0/105.0*tmp9 - 428.0/105.0*EulerGamma + 1556919113.0/122245200.0) + tmp10*((439877.0/55566.0)*tmp9 - 16094530514677.0/533967033600.0 + (439877.0/55566.0)*EulerGamma) + tmp16*(tmp13*((209.0/126.0)*tmp17 + (49.0/18.0)*tmp7 - 34.0/21.0) + tmp15*(-19.0/42.0*tmp7 - 34.0/21.0)) + tmp7*(-411*tmp10 + 21.199999999999999*tmp8) + tmp8*((9202.0/2205.0)*tmp9 - 387216563023.0/160190110080.0 + (9202.0/2205.0)*EulerGamma) + 1)*(np.power(Omega, 7.0/3.0)*(((tmp13)*(tmp13)*(tmp13))*(tmp7 + 1.0/3.0) + tmp13*tmp19*(-4*tmp17 - 3*tmp7 + 1) + tmp13*(-245717.0/63504.0*tmp17 + (50803.0/63504.0)*tmp23 + (74749.0/5292.0)*tmp7 + 18733.0/15876.0) + ((tmp14)*(tmp14)*(tmp14))*tmp3*(1.0/3.0 - 4.0/3.0*tmp7) + tmp15*tmp18*(2*tmp7 + 1) + tmp15*((97865.0/63504.0)*tmp17 + (50140.0/3969.0)*tmp7 + 18733.0/15876.0)) + np.power(Omega, 4.0/3.0)*(tmp13*tmp15 + (19583.0/42336.0)*tmp17 + (1.0/2.0)*tmp18 + tmp19*(1.0/2.0 - 2*tmp7) - 33025.0/21168.0*tmp7 - 20555.0/10584.0) + np.power(Omega, 2.0/3.0)*((55.0/84.0)*tmp7 - 43.0/42.0) + Omega*(-0.33333333333333331*chi1 - 0.33333333333333331*chi2 + 0.66666666666666663*m1*m2*tmp13*tmp6 - 0.66666666666666663*tmp15) + tmp0*(tmp13*tmp15*(89.0/126.0 - 781.0/252.0*tmp7) - 6292061.0/3259872.0*tmp17 + tmp18*((10.0/9.0)*tmp17 - 1817.0/504.0*tmp7 + 89.0/252.0) + tmp19*(-27.0/14.0*tmp17 - 457.0/504.0*tmp7 + 89.0/252.0) + (41.0/192.0)*tmp22*tmp7 + (10620745.0/39118464.0)*tmp23 - 48993925.0/9779616.0*tmp7 - 428.0/105.0*tmp9 - 428.0/105.0*EulerGamma + 1556919113.0/122245200.0) + tmp10*((439877.0/55566.0)*tmp9 - 16094530514677.0/533967033600.0 + (439877.0/55566.0)*EulerGamma) + tmp16*(tmp13*((209.0/126.0)*tmp17 + (49.0/18.0)*tmp7 - 34.0/21.0) + tmp15*(-19.0/42.0*tmp7 - 34.0/21.0)) + tmp7*(-411*tmp10 + 21.199999999999999*tmp8) + tmp8*((9202.0/2205.0)*tmp9 - 387216563023.0/160190110080.0 + (9202.0/2205.0)*EulerGamma) + 1))*np.exp(-phi*tmp26)*np.exp(2*tmp25*(tmp26*np.log(8*Omega*np.exp(-1.0/2.0)) + np.pi))*gamma(-4*1j*tmp25 + 3)/(np.power(Omega_circ, 4.0/3.0)*tmp4)
    return h22