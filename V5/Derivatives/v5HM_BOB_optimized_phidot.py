import numpy as np
def v5HM_BOB_optimized_phidot(m1, m2, r, pphi, chi1, chi2, a6, dSO):
    tmp0 = ((r)*(r)*(r))
    tmp1 = m1 + m2
    tmp15 = ((r)*(r))
    tmp22 = (1.0/(r))
    tmp27 = ((m1)*(m1))
    tmp28 = ((m2)*(m2))
    tmp31 = ((r)*(r)*(r)*(r))
    tmp41 = np.log(r)
    tmp48 = ((m1)*(m1)*(m1))
    tmp49 = ((m2)*(m2)*(m2))
    tmp63 = ((r)*(r)*(r)*(r)*(r))
    tmp76 = ((prstar)*(prstar)*(prstar)*(prstar))
    tmp80 = np.power(prstar, 6)
    tmp83 = np.power(prstar, 8)
    tmp2 = (1.0/((tmp1)*(tmp1)))
    tmp5 = chi1*m1 + chi2*m2
    tmp9 = (1.0/(tmp0))
    tmp12 = (1.0/((tmp1)*(tmp1)*(tmp1)))
    tmp16 = (1.0/(tmp15))
    tmp18 = (1.0/((tmp1)*(tmp1)*(tmp1)*(tmp1)))
    tmp19 = chi1*m1 - chi2*m2
    tmp32 = (1.0/(tmp31))
    tmp42 = ((tmp41)*(tmp41))
    tmp50 = np.power(tmp1, -6)
    tmp64 = ((m1)*(m1)*(m1)*(m1))*((m2)*(m2)*(m2)*(m2))/np.power(tmp1, 8)
    tmp65 = 8.0*r + 2.0*tmp0 + 4.0*tmp15 + 16.0
    tmp90 = 2*tmp22 + 1
    tmp93 = (1.0/(tmp63))
    tmp10 = pphi*tmp9
    tmp17 = pphi*tmp16
    tmp20 = tmp19*(m1 - m2)
    tmp23 = m1*m2*tmp2
    tmp26 = ((pphi)*(pphi))*tmp16
    tmp29 = tmp18*tmp27*tmp28
    tmp30 = ((pphi)*(pphi))*tmp9
    tmp33 = ((pphi)*(pphi)*(pphi)*(pphi))*tmp32
    tmp34 = tmp5/tmp1
    tmp43 = 5787938193408.0*tmp42
    tmp51 = tmp48*tmp49*tmp50
    tmp73 = ((tmp19)*(tmp19))*tmp2
    tmp97 = ((pphi)*(pphi)*(pphi))*tmp32
    tmp7 = tmp2*((tmp5)*(tmp5))
    tmp14 = dSO*m1*m2*tmp12*tmp5
    tmp21 = -1.0/4.0*tmp12*((tmp5)*(tmp5)*(tmp5)) + (1.0/4.0)*tmp18*tmp20*((tmp5)*(tmp5))
    tmp46 = 14700.0*tmp23 + 42911.0
    tmp56 = tmp15*(-630116198.87329912*tmp23 - 197773496.79353401*tmp29 + 5805304367.8791304)
    tmp57 = tmp0*(-2675575.66847905*tmp23 - 138240.0*tmp29 - 5278341.3229328999)
    tmp58 = tmp23*(-2510664218.2812872*tmp23 - 42636451.603233099*tmp29 + 14515200.0*tmp51 + 1002013764.01019)
    tmp59 = r*(43393301259014.688*tmp23 + 43133561885859.406*tmp29 + 5927865218923.0195*tmp51 + 86618264430493.297*((1 - 0.49694878161693501*tmp23)*(1 - 0.49694878161693501*tmp23)) + 188440788778196.0)
    tmp66 = 756.0*tmp23
    tmp74 = tmp12*tmp20*tmp5
    tmp77 = tmp32*tmp76*(tmp23*(452.54216699669303 - 51.695238095238103*tmp41) + tmp29*(118.40000000000001*tmp41 - 1796.13660498019) + 602.31854041656402*tmp51)
    tmp78 = tmp76*tmp9*(92.711044284954397*tmp23 - 131.0*tmp29 + 10.0*tmp51)
    tmp79 = tmp16*tmp76*(8.0*m1*m2*tmp2 - 6.0*tmp29)
    tmp81 = tmp80*tmp9*(-33.978212217043598*tmp23 - 89.529832736123396*tmp29 + 188.0*tmp48*tmp49*tmp50 - 14.0*tmp64)
    tmp82 = tmp16*tmp80*(-2.7830076369500598*tmp23 - 5.4000000000000004*tmp29 + 6.0*tmp48*tmp49*tmp50)
    tmp84 = tmp16*tmp83*(1.3897775099612799*tmp23 + 3.3384202364832198*tmp29 + 3.4285714285714302*tmp51 - 6.0*tmp64)
    tmp87 = np.power(r, -4.5)*tmp23*tmp76
    tmp89 = np.power(r, -3.5)*tmp23*tmp80
    tmp8 = (1.0/(tmp0 + tmp7*(r + 2)))
    tmp36 = tmp2*tmp20*(tmp16*(-1.0/32.0*tmp23 + (103.0/192.0)*tmp29 + 5.0/64.0) + tmp22*((11.0/32.0)*tmp23 + 3.0/32.0) + tmp26*(15.0/32.0 - 9.0/32.0*tmp23) + tmp30*(-35.0/128.0*tmp23 - 613.0/768.0*tmp29 - 59.0/256.0) + tmp33*((75.0/256.0)*tmp18*tmp27*tmp28 - 45.0/128.0*tmp23 - 105.0/256.0) + 1.0/4.0) + tmp34*(tmp16*((109.0/192.0)*tmp18*tmp27*tmp28 - 177.0/32.0*tmp23 - 5.0/64.0) + tmp22*((23.0/32.0)*tmp23 - 3.0/32.0) + tmp26*(-45.0/32.0*tmp23 - 15.0/32.0) + tmp30*(-267.0/128.0*tmp23 - 1591.0/768.0*tmp29 + 59.0/256.0) + tmp33*((75.0/128.0)*tmp23 + (345.0/256.0)*tmp29 + 105.0/256.0) + 7.0/4.0)
    tmp38 = tmp16*tmp7
    tmp47 = r*tmp46
    tmp60 = tmp41*(49152.0*r*(409207698.13607502*tmp23 + 102574080.0*tmp29 - 2119671837.3603799) + 879923036160.0*tmp0 + 283115520.0*tmp15*tmp46 - 1698693120.0*tmp23*(11592.0*tmp23 + 69847.0))
    tmp67 = tmp66 + 1079.0
    tmp86 = tmp22*tmp23*tmp83
    tmp88 = np.power(r, -2.5)*tmp23*tmp83
    tmp91 = -tmp90/(tmp15 + tmp7*tmp90)
    tmp54 = tmp41*(-879923036160.0*tmp15 - 25392914995744.301*tmp23 - 5041721180160.0*tmp29 - 283115520.0*tmp47 + 104186110149937.0)
    tmp61 = r*tmp43 - 9216.0*tmp56 - 967680.0*tmp57 + 55296.0*tmp58 + tmp59 + tmp60
    tmp68 = (2048.0*m1*m2*tmp2*tmp41*(336.0*r + tmp66 + 407.0) + 28.0*m1*m2*tmp2*(1920.0*a6 + 733955.30746303697) - 7.0*r*(938918.40015631705*m1*m2*tmp2 - 185763.09269328101*tmp29 - 245760.0) - 5416406.5954118604*tmp29 - 3440640.0)/(32768.0*tmp23*tmp41*(240.0*r*(-7466.2706106620599*tmp23 - 3024.0*tmp29 + 17264.0) + 960.0*tmp0*tmp67 + 1920.0*tmp15*(588.0*tmp23 + 1079.0) - 38842241.476950698*tmp23 - 1882456.2366397199*tmp29 + 480.0*tmp31*tmp67 + 161280.0*tmp63 + 13447680.0) + 53760.0*tmp23*(7680.0*a6*(tmp31 + tmp65) + 113485.217444961*r*(-tmp31 + tmp65) + 148.04406601634*r*(7704.0*r + 1926.0*tmp0 + 3852.0*tmp15 + 349.0*tmp31 + 36400.0) + 128.0*r*(13218.7851094412*r + 4264.6962773603*tmp0 + 8529.3925547206109*tmp15 - 6852.3481386801504*tmp31 - 33722.4297811176)) + 67645734912.0*tmp29*tmp42 + 7.0*tmp29*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.11560404*a6 + 122635399361.987*r - 6178501407.5375795*tmp0 + 2064783811.32587*tmp15 - 3089250703.7687898*tmp31 + 1426660551.8843999*tmp63 + 276057889687.01099) + 1120.0*tmp51*(-163683964.82255101*r - 17833256.898554999*tmp15 - 1188987459.03162) + 13212057600.0*tmp63 + 241555486248.80701*tmp64)
    tmp40 = ((tmp38 + 1)*(tmp38 + 1))
    tmp55 = 10611661054566.199*r*tmp23 + 1822680546449.21*r*tmp29 - 39476764256925.602*r + 2589101062873.8101*tmp15*tmp23 + 133772083200.0*tmp15*tmp29 + 5107745331375.71*tmp15 - 12049908701745.199*tmp23 + 80059249540278.203*tmp29 + tmp43 - 326837426.24148601*tmp47 + 6730497718123.0195*tmp51 - tmp54 + 275059053208689.0
    tmp62 = tmp22*tmp61/tmp55
    tmp70 = tmp31*tmp68 + 0.00013020833333333333*tmp38
    tmp75 = tmp32*(tmp7*(-1171.0/64.0*tmp23 - 861.0/64.0) + tmp73*((115.0/64.0)*tmp23 + (1.0/16.0)*tmp29 - 37.0/64.0) + tmp74*((13.0/16.0)*tmp23 + 449.0/32.0)) + tmp38 + 7680.0*tmp55*tmp63*tmp68/tmp61 + tmp9*(tmp7*(3*tmp23 + 45.0/16.0) + tmp73*((3.0/4.0)*tmp23 - 3.0/16.0) - 21.0/8.0*tmp74)
    tmp96 = (7680.0*tmp31*tmp68 + tmp32*((9.0/8.0)*tmp7 + tmp73*((1.0/2.0)*tmp23 + 1.0/8.0) - 5.0/4.0*tmp74) + tmp38 + tmp93*(tmp7*(-175.0/64.0*tmp23 - 225.0/64.0) + tmp73*((21.0/16.0)*tmp18*tmp27*tmp28 - 81.0/64.0*tmp23 - 9.0/64.0) + tmp74*(117.0/32.0 - 39.0/16.0*tmp23)))/(tmp38*tmp90 + 1)
    tmp71 = (1.0/((tmp70)*(tmp70)))
    tmp94 = tmp76*tmp93*((tmp38 + 1)*(tmp38 + 1)*(tmp38 + 1)*(tmp38 + 1))*(tmp7*((165.0/32.0)*tmp23 - 5*tmp29 + 25.0/32.0) + tmp73*((75.0/32.0)*m1*m2*tmp2 - 15.0/8.0*tmp29 - 15.0/32.0) + tmp74*((45.0/8.0)*tmp23 - 5.0/16.0))*((r*tmp42 - 1.5922768509339455e-9*tmp56 - 1.6718906934806428e-7*tmp57 + 9.5536611056036724e-9*tmp58 + 1.7277309580446458e-13*tmp59 + 1.7277309580446458e-13*tmp60)*(r*tmp42 - 1.5922768509339455e-9*tmp56 - 1.6718906934806428e-7*tmp57 + 9.5536611056036724e-9*tmp58 + 1.7277309580446458e-13*tmp59 + 1.7277309580446458e-13*tmp60))/(((tmp70)*(tmp70)*(tmp70)*(tmp70))*((0.038579573843421422*r*tmp23 + 0.0066265062908739489*r*tmp29 - 0.14352105046684044*r + 0.0094128916415248589*tmp15*tmp23 + 0.00048633950287942822*tmp15*tmp29 + 0.018569631763766858*tmp15 - 0.04380844244600398*tmp23 + 0.29106204142837921*tmp29 + 0.021042529325572337*tmp42 - 1.18824456940711e-6*tmp47 + 0.024469282648975563*tmp51 - 3.6355829351353647e-15*tmp54 + 1)*(0.038579573843421422*r*tmp23 + 0.0066265062908739489*r*tmp29 - 0.14352105046684044*r + 0.0094128916415248589*tmp15*tmp23 + 0.00048633950287942822*tmp15*tmp29 + 0.018569631763766858*tmp15 - 0.04380844244600398*tmp23 + 0.29106204142837921*tmp29 + 0.021042529325572337*tmp42 - 1.18824456940711e-6*tmp47 + 0.024469282648975563*tmp51 - 3.6355829351353647e-15*tmp54 + 1)))
    tmp99 = ((prstar)*(prstar))*tmp40*tmp62*tmp75
    tmp72 = 1.6954210069444444e-8*tmp71
    tmp95 = tmp26*tmp7*tmp91 + tmp26 + tmp77 + tmp78 + tmp79 + tmp81 + tmp82 + tmp84 + 0.12195486878044901*tmp86 + 147.44375299014601*tmp87 + 1.4827534202436501*tmp88 - 11.317508579186301*tmp89 + 1.2727731413908503e-19*tmp94 + 1
    phidot = (tmp8*(pphi*(tmp2*tmp20*(tmp10*(-35.0/64.0*tmp23 - 613.0/384.0*tmp29 - 0.4609375) + tmp17*(0.9375 - 9.0/16.0*tmp23) + tmp97*((75.0/64.0)*tmp18*tmp27*tmp28 - 45.0/32.0*tmp23 - 1.640625)) + tmp34*(tmp10*(-267.0/64.0*tmp23 - 1591.0/384.0*tmp29 + 0.4609375) + tmp17*(-45.0/16.0*tmp23 - 0.9375) + tmp97*((75.0/32.0)*tmp23 + (345.0/64.0)*tmp29 + 1.640625))) + tmp14*tmp9 + tmp16*tmp21 + tmp36) + np.sqrt(tmp96*(tmp72*tmp99 + tmp95))*(2*pphi*tmp38*tmp91 + 2*tmp17)/(2*tmp26*tmp7*tmp91 + 2*tmp26 + 3.3908420138888889e-8*tmp71*tmp99 + 2*tmp77 + 2*tmp78 + 2*tmp79 + 2*tmp81 + 2*tmp82 + 2*tmp84 + 0.24390973756089801*tmp86 + 294.88750598029202*tmp87 + 2.9655068404873002*tmp88 - 22.635017158372602*tmp89 + 2.5455462827817007e-19*tmp94 + 2))/np.sqrt(tmp23*(2*tmp8*(pphi*tmp36 + tmp10*tmp14 + tmp17*tmp21) + 2*np.sqrt(tmp96*(((prstar)*(prstar))*tmp40*tmp62*tmp72*tmp75 + tmp95)) - 2) + 1)
    return phidot
