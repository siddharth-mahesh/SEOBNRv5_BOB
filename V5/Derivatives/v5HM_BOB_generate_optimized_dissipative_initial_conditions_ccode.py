import sympy as sp
from nrpy.c_codegen import c_codegen
def v5HM_BOB_generate_optimized_dissipative_initial_conditions_ccode():
    m1, m2, r, phi, prstar, pphi, chi1, chi2,a6,dSO = sp.symbols('m1 m2 r phi prstar pphi chi1 chi2 a6 dSO')
    u = 1/r
    M = m1+m2
    delta = (m1-m2)/M
    nu = m1*m2/(M**2)
    gam = (sp.Rational(1,4)+(pphi**2/r**2)*(sp.Rational(15,32)-sp.Rational(9,32)*nu)+(1/r)*(sp.Rational(11,32)*nu+sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(75,256)*nu**2-sp.Rational(45,128)*nu-sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(613,768)*nu**2-sp.Rational(35,128)*nu-sp.Rational(59,256))+(1/r**2)*(sp.Rational(103,192)*nu**2-sp.Rational(1,32)*nu+sp.Rational(5,64)))
    gap = (sp.Rational(7,4)+(pphi**2/r**2)*(-sp.Rational(45,32)*nu-sp.Rational(15,32))+(1/r)*(sp.Rational(23,32)*nu-sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(345,256)*nu**2+sp.Rational(75,128)*nu+sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(1591,768)*nu**2-sp.Rational(267,128)*nu+sp.Rational(59,256))+(1/r**2)*(sp.Rational(109,192)*nu**2-sp.Rational(177,32)*nu-sp.Rational(5,64)))
    am = (m1*chi1-m2*chi2)/M
    ap = (m1*chi1+m2*chi2)/M
    Qnos = (0.121954868780449*nu*prstar**8/r+prstar**6*(6.0*nu**3-5.4*nu**2-2.78300763695006*nu)/r**2+prstar**4*(10.0*nu**3-131.0*nu**2+92.7110442849544*nu)/r**3)+(prstar**8*(-6.0*nu**4+3.42857142857143*nu**3+3.33842023648322*nu**2+1.38977750996128*nu)/r**2+prstar**6*(-14.0*nu**4+188.0*nu**3-89.5298327361234*nu**2-33.9782122170436*nu)/r**3+prstar**4*(602.318540416564*nu**3+nu**2*(118.4*sp.log(r)-1796.13660498019)+nu*(452.542166996693-51.6952380952381*sp.log(r)))/r**4)+(1.48275342024365*nu*prstar**8/r**2.5-11.3175085791863*nu*prstar**6/r**3.5+147.443752990146*nu*prstar**4/r**4.5)+prstar**4*(-6.0*nu**2+8.0*nu)/r**2
    d5 = 0
    Dnons = r*(6730497718123.02*nu**3+22295347200.0*nu**2*d5+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+22295347200.0*nu*d5*r-193226342400.0*nu*d5+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2-326837426.241486*r*(14700.0*nu+42911.0)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2-283115520.0*r*(14700.0*nu+42911.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(55296.0*nu*(14515200.0*nu**3-42636451.6032331*nu**2-7680.0*nu*(315.0*d5+890888.810272497)+4331361844.61149*nu+1002013764.01019)-967680.0*r**3*(-138240.0*nu**2-2675575.66847905*nu-5278341.3229329)-9216.0*r**2*(-197773496.793534*nu**2-7680.0*nu*(315.0*d5+405152.309729121)+2481453539.84635*nu+5805304367.87913)+r*(5927865218923.02*nu**3+70778880.0*nu**2*(315.0*d5+2561145.80918574)-138141470005001.0*nu**2-4718592.0*nu*(40950.0*d5+86207832.4415642)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(-1698693120.0*nu*(11592.0*nu+69847.0)+879923036160.0*r**3+283115520.0*r**2*(14700.0*nu+42911.0)+49152.0*r*(102574080.0*nu**2+409207698.136075*nu-2119671837.36038))*sp.log(r))
    Anons = 7680.0*r**4*(-5416406.59541186*nu**2+28.0*nu*(1920.0*a6+733955.307463037)+2048.0*nu*(756.0*nu+336.0*r+407.0)*sp.log(r)-7.0*r*(-185763.092693281*nu**2+938918.400156317*nu-245760.0)-3440640.0)/(241555486248.807*nu**4+1120.0*nu**3*(-17833256.898555*r**2-163683964.822551*r-1188987459.03162)+7.0*nu**2*(-39321600.0*a6*(3.0*r+59.0)+745857848.115604*a6+1426660551.8844*r**5-3089250703.76879*r**4-6178501407.53758*r**3+2064783811.32587*r**2+122635399361.987*r+276057889687.011)+67645734912.0*nu**2*sp.log(r)**2+53760.0*nu*(7680.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+128.0*r*(-6852.34813868015*r**4+4264.6962773603*r**3+8529.39255472061*r**2+13218.7851094412*r-33722.4297811176)+113485.217444961*r*(-r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+148.04406601634*r*(349.0*r**4+1926.0*r**3+3852.0*r**2+7704.0*r+36400.0))+32768.0*nu*(-1882456.23663972*nu**2-38842241.4769507*nu+161280.0*r**5+480.0*r**4*(756.0*nu+1079.0)+960.0*r**3*(756.0*nu+1079.0)+1920.0*r**2*(588.0*nu+1079.0)+240.0*r*(-3024.0*nu**2-7466.27061066206*nu+17264.0)+13447680.0)*sp.log(r)+13212057600.0*r**5)
    xi = sp.sqrt(Dnons)*(Anons+ap**2*u*u)/(1+ap**2*u*u)
    pr = prstar/xi
    QalignSS = ((pr**4)/(r**3))*(ap**2*(-5*nu*nu+nu*sp.Rational(165,32)+sp.Rational(25,32))+delta*ap*am*(nu*sp.Rational(45,8)-sp.Rational(5,16))+am**2*(-nu*nu*sp.Rational(15,8)+nu*sp.Rational(75,32)-sp.Rational(15,32)))
    BnpalignSS = ((1/r**3)*(ap**2*(3*nu+sp.Rational(45,16))-delta*ap*am*sp.Rational(21,8)+am**2*(nu*sp.Rational(3,4)-sp.Rational(3,16)))+(1/r**4)*(ap**2*(-nu*sp.Rational(1171,64)-sp.Rational(861,64))+delta*ap*am*(nu*sp.Rational(13,16)+sp.Rational(449,32))+am**2*(nu*nu*sp.Rational(1,16)+nu*sp.Rational(115,64)-sp.Rational(37,64))))
    AalignSS = ((1/r**4)*(ap**2*sp.Rational(9,8)-delta*ap*am*sp.Rational(5,4)+am**2*(nu*sp.Rational(1,2)+sp.Rational(1,8)))+(1/r**5)*(ap**2*(-nu*sp.Rational(175,64)-sp.Rational(225,64))+delta*ap*am*(-nu*sp.Rational(39,16)+sp.Rational(117,32))+am**2*(nu*nu*sp.Rational(21,16)-nu*sp.Rational(81,64)-sp.Rational(9,64))))
    Qalign = Qnos+QalignSS
    Balignnp = -1+ap**2*u*u+Anons*Dnons+BnpalignSS
    Bkerreqnp = -(1+2/r)/(r**2+ap**2*(1+2/r))
    Aalign = (ap**2*u*u+Anons+AalignSS)/(1+ap**2*(1+2/r)/(r**2))
    Galigna3 = pphi*(delta*am*ap**2-ap**3)/(4*r**2)
    SOcalib = nu*dSO*ap*pphi*(u**3)
    Heven = sp.sqrt(Aalign*(1+pphi*pphi/r**2+(1+Balignnp)*pr*pr+Bkerreqnp*pphi*pphi*ap**2/r**2+Qalign))
    Hodd = (pphi*(gap*ap+delta*gam*am)+SOcalib+Galigna3)/(r**3+ap**2*(r+2))
    Heff = Hodd+Heven
    Hreal = sp.sqrt(1+2*nu*(Heff-1))
    
    Qnos_prmprstar = 11.8620273619492*nu*prstar**7/r**2.5 + 0.975638950243592*nu*prstar**7/r - 67.9050514751178*nu*prstar**5/r**3.5 + 589.775011960584*nu*prstar**3/r**4.5 + prstar**7*(-48.0*nu**4 + 27.4285714285714*nu**3 + 26.7073618918658*nu**2 + 11.1182200796902*nu)/r**2 + prstar**5*(36.0*nu**3 - 32.4*nu**2 - 16.6980458217004*nu)/r**2 + prstar**5*(-84.0*nu**4 + 1128.0*nu**3 - 537.17899641674*nu**2 - 203.869273302262*nu)/r**3 + prstar**3*(-24.0*nu**2 + 32.0*nu)/r**2 + prstar**3*(40.0*nu**3 - 524.0*nu**2 + 370.844177139818*nu)/r**3 + prstar**3*(2409.27416166626*nu**3 + 4*nu**2*(118.4*sp.log(r) - 1796.13660498019) + 4*nu*(452.542166996693 - 51.6952380952381*sp.log(r)))/r**4
    pr_prmprstar = 1/xi
    QalignSS_prmprstar = pr**3*pr_prmprstar*(4*am**2*(-15*nu**2/8 + 75*nu/32 - 15/32) + 4*am*ap*delta*(45*nu/8 - 5/16) + 4*ap**2*(-5*nu**2 + 165*nu/32 + 25/32))/r**3
    Qalign_prmprstar = QalignSS_prmprstar + Qnos_prmprstar
    Heven_prmprstar = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Qalign_prmprstar + pr*pr_prmprstar*(2*Balignnp + 2))/(2*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))
    Heff_prmprstar = Heven_prmprstar
    Hreal_prmprstar = Heff_prmprstar*nu/sp.sqrt(nu*(2*Heff - 2) + 1)
    u = 1/r
    M = m1+m2
    delta = (m1-m2)/M
    nu = m1*m2/(M**2)
    gam = (sp.Rational(1,4)+(pphi**2/r**2)*(sp.Rational(15,32)-sp.Rational(9,32)*nu)+(1/r)*(sp.Rational(11,32)*nu+sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(75,256)*nu**2-sp.Rational(45,128)*nu-sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(613,768)*nu**2-sp.Rational(35,128)*nu-sp.Rational(59,256))+(1/r**2)*(sp.Rational(103,192)*nu**2-sp.Rational(1,32)*nu+sp.Rational(5,64)))
    gap = (sp.Rational(7,4)+(pphi**2/r**2)*(-sp.Rational(45,32)*nu-sp.Rational(15,32))+(1/r)*(sp.Rational(23,32)*nu-sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(345,256)*nu**2+sp.Rational(75,128)*nu+sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(1591,768)*nu**2-sp.Rational(267,128)*nu+sp.Rational(59,256))+(1/r**2)*(sp.Rational(109,192)*nu**2-sp.Rational(177,32)*nu-sp.Rational(5,64)))
    am = (m1*chi1-m2*chi2)/M
    ap = (m1*chi1+m2*chi2)/M
    Qnos = (0.121954868780449*nu*prstar**8/r+prstar**6*(6.0*nu**3-5.4*nu**2-2.78300763695006*nu)/r**2+prstar**4*(10.0*nu**3-131.0*nu**2+92.7110442849544*nu)/r**3)+(prstar**8*(-6.0*nu**4+3.42857142857143*nu**3+3.33842023648322*nu**2+1.38977750996128*nu)/r**2+prstar**6*(-14.0*nu**4+188.0*nu**3-89.5298327361234*nu**2-33.9782122170436*nu)/r**3+prstar**4*(602.318540416564*nu**3+nu**2*(118.4*sp.log(r)-1796.13660498019)+nu*(452.542166996693-51.6952380952381*sp.log(r)))/r**4)+(1.48275342024365*nu*prstar**8/r**2.5-11.3175085791863*nu*prstar**6/r**3.5+147.443752990146*nu*prstar**4/r**4.5)+prstar**4*(-6.0*nu**2+8.0*nu)/r**2
    d5 = 0
    Dnons = r*(6730497718123.02*nu**3+22295347200.0*nu**2*d5+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+22295347200.0*nu*d5*r-193226342400.0*nu*d5+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2-326837426.241486*r*(14700.0*nu+42911.0)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2-283115520.0*r*(14700.0*nu+42911.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(55296.0*nu*(14515200.0*nu**3-42636451.6032331*nu**2-7680.0*nu*(315.0*d5+890888.810272497)+4331361844.61149*nu+1002013764.01019)-967680.0*r**3*(-138240.0*nu**2-2675575.66847905*nu-5278341.3229329)-9216.0*r**2*(-197773496.793534*nu**2-7680.0*nu*(315.0*d5+405152.309729121)+2481453539.84635*nu+5805304367.87913)+r*(5927865218923.02*nu**3+70778880.0*nu**2*(315.0*d5+2561145.80918574)-138141470005001.0*nu**2-4718592.0*nu*(40950.0*d5+86207832.4415642)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(-1698693120.0*nu*(11592.0*nu+69847.0)+879923036160.0*r**3+283115520.0*r**2*(14700.0*nu+42911.0)+49152.0*r*(102574080.0*nu**2+409207698.136075*nu-2119671837.36038))*sp.log(r))
    Anons = 7680.0*r**4*(-5416406.59541186*nu**2+28.0*nu*(1920.0*a6+733955.307463037)+2048.0*nu*(756.0*nu+336.0*r+407.0)*sp.log(r)-7.0*r*(-185763.092693281*nu**2+938918.400156317*nu-245760.0)-3440640.0)/(241555486248.807*nu**4+1120.0*nu**3*(-17833256.898555*r**2-163683964.822551*r-1188987459.03162)+7.0*nu**2*(-39321600.0*a6*(3.0*r+59.0)+745857848.115604*a6+1426660551.8844*r**5-3089250703.76879*r**4-6178501407.53758*r**3+2064783811.32587*r**2+122635399361.987*r+276057889687.011)+67645734912.0*nu**2*sp.log(r)**2+53760.0*nu*(7680.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+128.0*r*(-6852.34813868015*r**4+4264.6962773603*r**3+8529.39255472061*r**2+13218.7851094412*r-33722.4297811176)+113485.217444961*r*(-r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+148.04406601634*r*(349.0*r**4+1926.0*r**3+3852.0*r**2+7704.0*r+36400.0))+32768.0*nu*(-1882456.23663972*nu**2-38842241.4769507*nu+161280.0*r**5+480.0*r**4*(756.0*nu+1079.0)+960.0*r**3*(756.0*nu+1079.0)+1920.0*r**2*(588.0*nu+1079.0)+240.0*r*(-3024.0*nu**2-7466.27061066206*nu+17264.0)+13447680.0)*sp.log(r)+13212057600.0*r**5)
    xi = sp.sqrt(Dnons)*(Anons+ap**2*u*u)/(1+ap**2*u*u)
    pr = prstar/xi
    QalignSS = ((pr**4)/(r**3))*(ap**2*(-5*nu*nu+nu*sp.Rational(165,32)+sp.Rational(25,32))+delta*ap*am*(nu*sp.Rational(45,8)-sp.Rational(5,16))+am**2*(-nu*nu*sp.Rational(15,8)+nu*sp.Rational(75,32)-sp.Rational(15,32)))
    BnpalignSS = ((1/r**3)*(ap**2*(3*nu+sp.Rational(45,16))-delta*ap*am*sp.Rational(21,8)+am**2*(nu*sp.Rational(3,4)-sp.Rational(3,16)))+(1/r**4)*(ap**2*(-nu*sp.Rational(1171,64)-sp.Rational(861,64))+delta*ap*am*(nu*sp.Rational(13,16)+sp.Rational(449,32))+am**2*(nu*nu*sp.Rational(1,16)+nu*sp.Rational(115,64)-sp.Rational(37,64))))
    AalignSS = ((1/r**4)*(ap**2*sp.Rational(9,8)-delta*ap*am*sp.Rational(5,4)+am**2*(nu*sp.Rational(1,2)+sp.Rational(1,8)))+(1/r**5)*(ap**2*(-nu*sp.Rational(175,64)-sp.Rational(225,64))+delta*ap*am*(-nu*sp.Rational(39,16)+sp.Rational(117,32))+am**2*(nu*nu*sp.Rational(21,16)-nu*sp.Rational(81,64)-sp.Rational(9,64))))
    Qalign = Qnos+QalignSS
    Balignnp = -1+ap**2*u*u+Anons*Dnons+BnpalignSS
    Bkerreqnp = -(1+2/r)/(r**2+ap**2*(1+2/r))
    Aalign = (ap**2*u*u+Anons+AalignSS)/(1+ap**2*(1+2/r)/(r**2))
    Galigna3 = pphi*(delta*am*ap**2-ap**3)/(4*r**2)
    SOcalib = nu*dSO*ap*pphi*(u**3)
    Heven = sp.sqrt(Aalign*(1+pphi*pphi/r**2+(1+Balignnp)*pr*pr+Bkerreqnp*pphi*pphi*ap**2/r**2+Qalign))
    Hodd = (pphi*(gap*ap+delta*gam*am)+SOcalib+Galigna3)/(r**3+ap**2*(r+2))
    Heff = Hodd+Heven
    Hreal = sp.sqrt(1+2*nu*(Heff-1))
    
    gam_prmpphi = pphi**3*(75*nu**2/64 - 45*nu/32 - 105/64)/r**4 + pphi*(15/16 - 9*nu/16)/r**2 + pphi*(-613*nu**2/384 - 35*nu/64 - 59/128)/r**3
    gap_prmpphi = pphi**3*(345*nu**2/64 + 75*nu/32 + 105/64)/r**4 + pphi*(-45*nu/16 - 15/16)/r**2 + pphi*(-1591*nu**2/384 - 267*nu/64 + 59/128)/r**3
    Galigna3_prmpphi = (am*ap**2*delta - ap**3)/(4*r**2)
    SOcalib_prmpphi = ap*dSO*nu*u**3
    Heven_prmpphi = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(2*Bkerreqnp*ap**2*pphi/r**2 + 2*pphi/r**2)/(2*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))
    Hodd_prmpphi = (Galigna3_prmpphi + SOcalib_prmpphi + am*delta*gam + ap*gap + pphi*(am*delta*gam_prmpphi + ap*gap_prmpphi))/(ap**2*(r + 2) + r**3)
    Heff_prmpphi = Heven_prmpphi + Hodd_prmpphi
    Hreal_prmpphi = Heff_prmpphi*nu/sp.sqrt(nu*(2*Heff - 2) + 1)
    u = 1/r
    
    M = m1+m2
    
    delta = (m1-m2)/M
    
    nu = m1*m2/(M**2)
    
    gam = (sp.Rational(1,4)+(pphi**2/r**2)*(sp.Rational(15,32)-sp.Rational(9,32)*nu)+(1/r)*(sp.Rational(11,32)*nu+sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(75,256)*nu**2-sp.Rational(45,128)*nu-sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(613,768)*nu**2-sp.Rational(35,128)*nu-sp.Rational(59,256))+(1/r**2)*(sp.Rational(103,192)*nu**2-sp.Rational(1,32)*nu+sp.Rational(5,64)))
    
    gap = (sp.Rational(7,4)+(pphi**2/r**2)*(-sp.Rational(45,32)*nu-sp.Rational(15,32))+(1/r)*(sp.Rational(23,32)*nu-sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(345,256)*nu**2+sp.Rational(75,128)*nu+sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(1591,768)*nu**2-sp.Rational(267,128)*nu+sp.Rational(59,256))+(1/r**2)*(sp.Rational(109,192)*nu**2-sp.Rational(177,32)*nu-sp.Rational(5,64)))
    
    am = (m1*chi1-m2*chi2)/M
    
    ap = (m1*chi1+m2*chi2)/M
    
    Qnos = (0.121954868780449*nu*prstar**8/r+prstar**6*(6.0*nu**3-5.4*nu**2-2.78300763695006*nu)/r**2+prstar**4*(10.0*nu**3-131.0*nu**2+92.7110442849544*nu)/r**3)+(prstar**8*(-6.0*nu**4+3.42857142857143*nu**3+3.33842023648322*nu**2+1.38977750996128*nu)/r**2+prstar**6*(-14.0*nu**4+188.0*nu**3-89.5298327361234*nu**2-33.9782122170436*nu)/r**3+prstar**4*(602.318540416564*nu**3+nu**2*(118.4*sp.log(r)-1796.13660498019)+nu*(452.542166996693-51.6952380952381*sp.log(r)))/r**4)+(1.48275342024365*nu*prstar**8/r**2.5-11.3175085791863*nu*prstar**6/r**3.5+147.443752990146*nu*prstar**4/r**4.5)+prstar**4*(-6.0*nu**2+8.0*nu)/r**2
    
    d5 = 0
    
    Dnons = r*(6730497718123.02*nu**3+22295347200.0*nu**2*d5+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+22295347200.0*nu*d5*r-193226342400.0*nu*d5+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2-326837426.241486*r*(14700.0*nu+42911.0)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2-283115520.0*r*(14700.0*nu+42911.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(55296.0*nu*(14515200.0*nu**3-42636451.6032331*nu**2-7680.0*nu*(315.0*d5+890888.810272497)+4331361844.61149*nu+1002013764.01019)-967680.0*r**3*(-138240.0*nu**2-2675575.66847905*nu-5278341.3229329)-9216.0*r**2*(-197773496.793534*nu**2-7680.0*nu*(315.0*d5+405152.309729121)+2481453539.84635*nu+5805304367.87913)+r*(5927865218923.02*nu**3+70778880.0*nu**2*(315.0*d5+2561145.80918574)-138141470005001.0*nu**2-4718592.0*nu*(40950.0*d5+86207832.4415642)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(-1698693120.0*nu*(11592.0*nu+69847.0)+879923036160.0*r**3+283115520.0*r**2*(14700.0*nu+42911.0)+49152.0*r*(102574080.0*nu**2+409207698.136075*nu-2119671837.36038))*sp.log(r))
    
    Anons = 7680.0*r**4*(-5416406.59541186*nu**2+28.0*nu*(1920.0*a6+733955.307463037)+2048.0*nu*(756.0*nu+336.0*r+407.0)*sp.log(r)-7.0*r*(-185763.092693281*nu**2+938918.400156317*nu-245760.0)-3440640.0)/(241555486248.807*nu**4+1120.0*nu**3*(-17833256.898555*r**2-163683964.822551*r-1188987459.03162)+7.0*nu**2*(-39321600.0*a6*(3.0*r+59.0)+745857848.115604*a6+1426660551.8844*r**5-3089250703.76879*r**4-6178501407.53758*r**3+2064783811.32587*r**2+122635399361.987*r+276057889687.011)+67645734912.0*nu**2*sp.log(r)**2+53760.0*nu*(7680.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+128.0*r*(-6852.34813868015*r**4+4264.6962773603*r**3+8529.39255472061*r**2+13218.7851094412*r-33722.4297811176)+113485.217444961*r*(-r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+148.04406601634*r*(349.0*r**4+1926.0*r**3+3852.0*r**2+7704.0*r+36400.0))+32768.0*nu*(-1882456.23663972*nu**2-38842241.4769507*nu+161280.0*r**5+480.0*r**4*(756.0*nu+1079.0)+960.0*r**3*(756.0*nu+1079.0)+1920.0*r**2*(588.0*nu+1079.0)+240.0*r*(-3024.0*nu**2-7466.27061066206*nu+17264.0)+13447680.0)*sp.log(r)+13212057600.0*r**5)
    
    xi = sp.sqrt(Dnons)*(Anons+ap**2*u*u)/(1+ap**2*u*u)
    
    pr = prstar/xi
    
    QalignSS = ((pr**4)/(r**3))*(ap**2*(-5*nu*nu+nu*sp.Rational(165,32)+sp.Rational(25,32))+delta*ap*am*(nu*sp.Rational(45,8)-sp.Rational(5,16))+am**2*(-nu*nu*sp.Rational(15,8)+nu*sp.Rational(75,32)-sp.Rational(15,32)))
    
    BnpalignSS = ((1/r**3)*(ap**2*(3*nu+sp.Rational(45,16))-delta*ap*am*sp.Rational(21,8)+am**2*(nu*sp.Rational(3,4)-sp.Rational(3,16)))+(1/r**4)*(ap**2*(-nu*sp.Rational(1171,64)-sp.Rational(861,64))+delta*ap*am*(nu*sp.Rational(13,16)+sp.Rational(449,32))+am**2*(nu*nu*sp.Rational(1,16)+nu*sp.Rational(115,64)-sp.Rational(37,64))))
    
    AalignSS = ((1/r**4)*(ap**2*sp.Rational(9,8)-delta*ap*am*sp.Rational(5,4)+am**2*(nu*sp.Rational(1,2)+sp.Rational(1,8)))+(1/r**5)*(ap**2*(-nu*sp.Rational(175,64)-sp.Rational(225,64))+delta*ap*am*(-nu*sp.Rational(39,16)+sp.Rational(117,32))+am**2*(nu*nu*sp.Rational(21,16)-nu*sp.Rational(81,64)-sp.Rational(9,64))))
    
    Qalign = Qnos+QalignSS
    
    Balignnp = -1+ap**2*u*u+Anons*Dnons+BnpalignSS
    
    Bkerreqnp = -(1+2/r)/(r**2+ap**2*(1+2/r))
    
    Aalign = (ap**2*u*u+Anons+AalignSS)/(1+ap**2*(1+2/r)/(r**2))
    
    Galigna3 = pphi*(delta*am*ap**2-ap**3)/(4*r**2)
    
    SOcalib = nu*dSO*ap*pphi*(u**3)
    
    Heven = sp.sqrt(Aalign*(1+pphi*pphi/r**2+(1+Balignnp)*pr*pr+Bkerreqnp*pphi*pphi*ap**2/r**2+Qalign))
    
    Hodd = (pphi*(gap*ap+delta*gam*am)+SOcalib+Galigna3)/(r**3+ap**2*(r+2))
    
    Heff = Hodd+Heven
    
    Hreal = sp.sqrt(1+2*nu*(Heff-1))
    
    
    gam_prmpphi_preq0 = pphi**3*(75*nu**2/64 - 45*nu/32 - 105/64)/r**4 + pphi*(15/16 - 9*nu/16)/r**2 + pphi*(-613*nu**2/384 - 35*nu/64 - 59/128)/r**3
    gap_prmpphi_preq0 = pphi**3*(345*nu**2/64 + 75*nu/32 + 105/64)/r**4 + pphi*(-45*nu/16 - 15/16)/r**2 + pphi*(-1591*nu**2/384 - 267*nu/64 + 59/128)/r**3
    Galigna3_prmpphi_preq0 = (am*ap**2*delta - ap**3)/(4*r**2)
    SOcalib_prmpphi_preq0 = ap*dSO*nu*u**3
    Heven_prmpphi_preq0 = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(2*Bkerreqnp*ap**2*pphi/r**2 + 2*pphi/r**2)/(2*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))
    Hodd_prmpphi_preq0 = (Galigna3_prmpphi_preq0 + SOcalib_prmpphi_preq0 + am*delta*gam + ap*gap + pphi*(am*delta*gam_prmpphi_preq0 + ap*gap_prmpphi_preq0))/(ap**2*(r + 2) + r**3)
    Heff_prmpphi_preq0 = Heven_prmpphi_preq0 + Hodd_prmpphi_preq0
    Hreal_prmpphi_preq0 = Heff_prmpphi_preq0*nu/sp.sqrt(nu*(2*Heff - 2) + 1)
    u = 1/r
    M = m1+m2
    delta = (m1-m2)/M
    nu = m1*m2/(M**2)
    gam = (sp.Rational(1,4)+(pphi**2/r**2)*(sp.Rational(15,32)-sp.Rational(9,32)*nu)+(1/r)*(sp.Rational(11,32)*nu+sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(75,256)*nu**2-sp.Rational(45,128)*nu-sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(613,768)*nu**2-sp.Rational(35,128)*nu-sp.Rational(59,256))+(1/r**2)*(sp.Rational(103,192)*nu**2-sp.Rational(1,32)*nu+sp.Rational(5,64)))
    gap = (sp.Rational(7,4)+(pphi**2/r**2)*(-sp.Rational(45,32)*nu-sp.Rational(15,32))+(1/r)*(sp.Rational(23,32)*nu-sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(345,256)*nu**2+sp.Rational(75,128)*nu+sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(1591,768)*nu**2-sp.Rational(267,128)*nu+sp.Rational(59,256))+(1/r**2)*(sp.Rational(109,192)*nu**2-sp.Rational(177,32)*nu-sp.Rational(5,64)))
    am = (m1*chi1-m2*chi2)/M
    ap = (m1*chi1+m2*chi2)/M
    Qnos = (0.121954868780449*nu*prstar**8/r+prstar**6*(6.0*nu**3-5.4*nu**2-2.78300763695006*nu)/r**2+prstar**4*(10.0*nu**3-131.0*nu**2+92.7110442849544*nu)/r**3)+(prstar**8*(-6.0*nu**4+3.42857142857143*nu**3+3.33842023648322*nu**2+1.38977750996128*nu)/r**2+prstar**6*(-14.0*nu**4+188.0*nu**3-89.5298327361234*nu**2-33.9782122170436*nu)/r**3+prstar**4*(602.318540416564*nu**3+nu**2*(118.4*sp.log(r)-1796.13660498019)+nu*(452.542166996693-51.6952380952381*sp.log(r)))/r**4)+(1.48275342024365*nu*prstar**8/r**2.5-11.3175085791863*nu*prstar**6/r**3.5+147.443752990146*nu*prstar**4/r**4.5)+prstar**4*(-6.0*nu**2+8.0*nu)/r**2
    d5 = 0
    Dnons = r*(6730497718123.02*nu**3+22295347200.0*nu**2*d5+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+22295347200.0*nu*d5*r-193226342400.0*nu*d5+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2-326837426.241486*r*(14700.0*nu+42911.0)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2-283115520.0*r*(14700.0*nu+42911.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(55296.0*nu*(14515200.0*nu**3-42636451.6032331*nu**2-7680.0*nu*(315.0*d5+890888.810272497)+4331361844.61149*nu+1002013764.01019)-967680.0*r**3*(-138240.0*nu**2-2675575.66847905*nu-5278341.3229329)-9216.0*r**2*(-197773496.793534*nu**2-7680.0*nu*(315.0*d5+405152.309729121)+2481453539.84635*nu+5805304367.87913)+r*(5927865218923.02*nu**3+70778880.0*nu**2*(315.0*d5+2561145.80918574)-138141470005001.0*nu**2-4718592.0*nu*(40950.0*d5+86207832.4415642)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(-1698693120.0*nu*(11592.0*nu+69847.0)+879923036160.0*r**3+283115520.0*r**2*(14700.0*nu+42911.0)+49152.0*r*(102574080.0*nu**2+409207698.136075*nu-2119671837.36038))*sp.log(r))
    Anons = 7680.0*r**4*(-5416406.59541186*nu**2+28.0*nu*(1920.0*a6+733955.307463037)+2048.0*nu*(756.0*nu+336.0*r+407.0)*sp.log(r)-7.0*r*(-185763.092693281*nu**2+938918.400156317*nu-245760.0)-3440640.0)/(241555486248.807*nu**4+1120.0*nu**3*(-17833256.898555*r**2-163683964.822551*r-1188987459.03162)+7.0*nu**2*(-39321600.0*a6*(3.0*r+59.0)+745857848.115604*a6+1426660551.8844*r**5-3089250703.76879*r**4-6178501407.53758*r**3+2064783811.32587*r**2+122635399361.987*r+276057889687.011)+67645734912.0*nu**2*sp.log(r)**2+53760.0*nu*(7680.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+128.0*r*(-6852.34813868015*r**4+4264.6962773603*r**3+8529.39255472061*r**2+13218.7851094412*r-33722.4297811176)+113485.217444961*r*(-r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+148.04406601634*r*(349.0*r**4+1926.0*r**3+3852.0*r**2+7704.0*r+36400.0))+32768.0*nu*(-1882456.23663972*nu**2-38842241.4769507*nu+161280.0*r**5+480.0*r**4*(756.0*nu+1079.0)+960.0*r**3*(756.0*nu+1079.0)+1920.0*r**2*(588.0*nu+1079.0)+240.0*r*(-3024.0*nu**2-7466.27061066206*nu+17264.0)+13447680.0)*sp.log(r)+13212057600.0*r**5)
    xi = sp.sqrt(Dnons)*(Anons+ap**2*u*u)/(1+ap**2*u*u)
    pr = prstar/xi
    QalignSS = ((pr**4)/(r**3))*(ap**2*(-5*nu*nu+nu*sp.Rational(165,32)+sp.Rational(25,32))+delta*ap*am*(nu*sp.Rational(45,8)-sp.Rational(5,16))+am**2*(-nu*nu*sp.Rational(15,8)+nu*sp.Rational(75,32)-sp.Rational(15,32)))
    BnpalignSS = ((1/r**3)*(ap**2*(3*nu+sp.Rational(45,16))-delta*ap*am*sp.Rational(21,8)+am**2*(nu*sp.Rational(3,4)-sp.Rational(3,16)))+(1/r**4)*(ap**2*(-nu*sp.Rational(1171,64)-sp.Rational(861,64))+delta*ap*am*(nu*sp.Rational(13,16)+sp.Rational(449,32))+am**2*(nu*nu*sp.Rational(1,16)+nu*sp.Rational(115,64)-sp.Rational(37,64))))
    AalignSS = ((1/r**4)*(ap**2*sp.Rational(9,8)-delta*ap*am*sp.Rational(5,4)+am**2*(nu*sp.Rational(1,2)+sp.Rational(1,8)))+(1/r**5)*(ap**2*(-nu*sp.Rational(175,64)-sp.Rational(225,64))+delta*ap*am*(-nu*sp.Rational(39,16)+sp.Rational(117,32))+am**2*(nu*nu*sp.Rational(21,16)-nu*sp.Rational(81,64)-sp.Rational(9,64))))
    Qalign = Qnos+QalignSS
    Balignnp = -1+ap**2*u*u+Anons*Dnons+BnpalignSS
    Bkerreqnp = -(1+2/r)/(r**2+ap**2*(1+2/r))
    Aalign = (ap**2*u*u+Anons+AalignSS)/(1+ap**2*(1+2/r)/(r**2))
    Galigna3 = pphi*(delta*am*ap**2-ap**3)/(4*r**2)
    SOcalib = nu*dSO*ap*pphi*(u**3)
    Heven = sp.sqrt(Aalign*(1+pphi*pphi/r**2+(1+Balignnp)*pr*pr+Bkerreqnp*pphi*pphi*ap**2/r**2+Qalign))
    Hodd = (pphi*(gap*ap+delta*gam*am)+SOcalib+Galigna3)/(r**3+ap**2*(r+2))
    Heff = Hodd+Heven
    Hreal = sp.sqrt(1+2*nu*(Heff-1))
    u_prmr = -1/r**2
    gam_prmr = -pphi**4*(75*nu**2/64-45*nu/32-105/64)/r**5+pphi**2*(9*nu/16-15/16)/r**3-pphi**2*(-613*nu**2/256-105*nu/128-177/256)/r**4-(11*nu/32+3/32)/r**2-(103*nu**2/96-nu/16+5/32)/r**3
    gap_prmr = -pphi**4*(345*nu**2/64+75*nu/32+105/64)/r**5-pphi**2*(-45*nu/16-15/16)/r**3-pphi**2*(-1591*nu**2/256-801*nu/128+177/256)/r**4-(23*nu/32-3/32)/r**2-(109*nu**2/96-177*nu/16-5/32)/r**3
    Qnos_prmr = -3.70688355060913*nu*prstar**8/r**3.5-0.121954868780449*nu*prstar**8/r**2+39.6112800271521*nu*prstar**6/r**4.5-663.496888455657*nu*prstar**4/r**5.5-prstar**8*(-12.0*nu**4+6.85714285714286*nu**3+6.67684047296644*nu**2+2.77955501992256*nu)/r**3-prstar**6*(12.0*nu**3-10.8*nu**2-5.56601527390012*nu)/r**3-prstar**6*(-42.0*nu**4+564.0*nu**3-268.58949820837*nu**2-101.934636651131*nu)/r**4-prstar**4*(-12.0*nu**2+16.0*nu)/r**3+prstar**4*(118.4*nu**2/r-51.6952380952381*nu/r)/r**4-prstar**4*(30.0*nu**3-393.0*nu**2+278.133132854863*nu)/r**4-prstar**4*(2409.27416166626*nu**3+4*nu**2*(118.4*sp.log(r)-1796.13660498019)+4*nu*(452.542166996693-51.6952380952381*sp.log(r)))/r**5
    Dnons_prmr = r*(22295347200.0*d5*nu+267544166400.0*nu**2*r+1822680546449.21*nu**2+5178202125747.62*nu*r+5807150888816.35*nu+10215490662751.4*r-(-4161798144000.0*nu-1759846072320.0*r-12148770078720.0)*sp.log(r)-53501685054374.0-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2+r*(-4161798144000.0*nu-12148770078720.0)+104186110149937.0)/r+11575876386816.0*sp.log(r)/r)/(nu*(802632499200.0*nu**3-2357625227852.38*nu**2+55296.0*nu*(-2419200.0*d5-6842026062.89278)+239506984559637.0*nu+55407353094707.5)+r**3*(133772083200.0*nu**2+2589101062873.81*nu+5107745331375.71)-r**2*(-1822680546449.21*nu**2+9216.0*nu*(-2419200.0*d5-3111569738.71965)+22869075823224.0*nu+53501685054374.1)+r*(5927865218923.02*nu**3+nu**2*(22295347200.0*d5+181275031890860.0)-138141470005001.0*nu**2-nu*(193226342400.0*d5+406779588496105.0)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(nu*(-19691250647040.0*nu-118648618352640.0)+879923036160.0*r**3+r**2*(4161798144000.0*nu+12148770078720.0)+r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))*sp.log(r))+r*(-1.7694999344523e-13*nu**3-2.98505426338587e-26*nu**2*(22295347200.0*d5+181275031890860.0)+4.123597839888195e-12*nu**2+2.98505426338587e-26*nu*(193226342400.0*d5+406779588496105.0)-1.343790503824258e-11*nu+2.98505426338587e-26*r**2*(-401316249600.0*nu**2-7767303188621.42*nu-15323235994127.1)+2.98505426338587e-26*r*(-3645361092898.42*nu**2+18432.0*nu*(-2419200.0*d5-3111569738.71965)+45738151646447.9*nu+107003370108748.0)-2.58560219525329e-12*(1-0.496948781616935*nu)**2-2.98505426338587e-26*(5041721180160.0*nu**2+20113376778784.4*nu+2639769108480.0*r**2+r*(8323596288000.0*nu+24297540157440.0)-104186110149937.0)*sp.log(r)-1.72773095804465e-13*sp.log(r)**2-3.45546191608929e-13*sp.log(r)-5.625059799381501e-12-2.98505426338587e-26*(nu*(-19691250647040.0*nu-118648618352640.0)+879923036160.0*r**3+r**2*(4161798144000.0*nu+12148770078720.0)+r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))/r)*(22295347200.0*d5*nu**2+22295347200.0*d5*nu*r-193226342400.0*d5*nu+6730497718123.02*nu**3+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2+r*(-4804510165749.84*nu-14024920797448.4)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2+r*(-4161798144000.0*nu-12148770078720.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(nu*(0.138673301680058*nu**3-0.407334209362761*nu**2+9.55366110560367e-9*nu*(-2419200.0*d5-6842026062.89278)+41.3803631891606*nu+9.57289992450369)+r**3*(0.0231122169466764*nu**2+0.447327005983337*nu+0.882480973482581)-r**2*(-0.314910160672604*nu**2+1.59227685093395e-9*nu*(-2419200.0*d5-3111569738.71965)+3.95116102816545*nu+9.24365175759969)+r*(1.02417562538494*nu**3+1.72773095804465e-13*nu**2*(22295347200.0*d5+181275031890860.0)-23.86712943174367*nu**2-1.72773095804465e-13*nu*(193226342400.0*d5+406779588496105.0)+77.77776381023421*nu+14.9653056988661*(1-0.496948781616935*nu)**2+32.55749845304421)+r*sp.log(r)**2+(1.72773095804465e-13*nu*(-19691250647040.0*nu-118648618352640.0)+0.152027027027027*r**3+1.72773095804465e-13*r**2*(4161798144000.0*nu+12148770078720.0)+1.72773095804465e-13*r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))*sp.log(r))**2+(22295347200.0*d5*nu**2+22295347200.0*d5*nu*r-193226342400.0*d5*nu+6730497718123.02*nu**3+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2+r*(-4804510165749.84*nu-14024920797448.4)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2+r*(-4161798144000.0*nu-12148770078720.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(nu*(802632499200.0*nu**3-2357625227852.38*nu**2+55296.0*nu*(-2419200.0*d5-6842026062.89278)+239506984559637.0*nu+55407353094707.5)+r**3*(133772083200.0*nu**2+2589101062873.81*nu+5107745331375.71)-r**2*(-1822680546449.21*nu**2+9216.0*nu*(-2419200.0*d5-3111569738.71965)+22869075823224.0*nu+53501685054374.1)+r*(5927865218923.02*nu**3+nu**2*(22295347200.0*d5+181275031890860.0)-138141470005001.0*nu**2-nu*(193226342400.0*d5+406779588496105.0)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(nu*(-19691250647040.0*nu-118648618352640.0)+879923036160.0*r**3+r**2*(4161798144000.0*nu+12148770078720.0)+r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))*sp.log(r))
    Anons_prmr = r**4*(-7.12916500937039e-13*nu**2+1.31621673590926e-19*nu*(53760.0*a6+20550748.608965)+1.31621673590926e-19*nu*(1548288.0*nu+688128.0*r+833536.0)*sp.log(r)-1.31621673590926e-19*r*(-1300341.64885297*nu**2+6572428.80109422*nu-1720320.0)-4.52862795023884e-13)*(nu**3*(39946495452.7632*r+183326040601.257)-nu**2*(-825753600.0*a6+49933119315.954*r**4-86499019705.5264*r**3-129748529558.289*r**2+28906973358.5622*r+858447795533.909)-135291469824.0*nu**2*sp.log(r)/r-nu*(-23781703680.0*nu**2-58717141288.8419*nu+26424115200.0*r**4+32768.0*r**3*(1451520.0*nu+2071680.0)+32768.0*r**2*(2177280.0*nu+3107520.0)+32768.0*r*(2257920.0*nu+4143360.0)+135769620480.0)*sp.log(r)-nu*(412876800.0*a6*(4*r**3+6.0*r**2+8.0*r+8.0)-50476253192.4036*r**4+56877242932.0441*r**3+113754485864.088*r**2+53760.0*r*(-3508402.24700424*r**3+1637643.37050636*r**2+2183524.49400847*r+1692004.49400847)+53760.0*r*(-453940.869779844*r**3+680911.304669766*r**2+907881.739559688*r+907881.739559688)+53760.0*r*(206669.516158811*r**3+855398.613442412*r**2+1140531.48458988*r+1140531.48458988)+201084856528.177*r+155264066234.248)-nu*(-61684325962.2103*nu**2-1272782568716.72*nu+5284823040.0*r**5+32768.0*r**4*(362880.0*nu+517920.0)+32768.0*r**3*(725760.0*nu+1035840.0)+32768.0*r**2*(1128960.0*nu+2071680.0)+32768.0*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+440653578240.0)/r-66060288000.0*r**4)/(nu**4+nu**3*(-0.0826859618738229*r**2-0.758939668264987*r-5.51287811672293)+nu**2*(-0.00113949471516654*a6*(3.0*r+59.0)+0.0216141020760402*a6+0.0413429809369115*r**5-0.0895229301648219*r**4-0.179045860329644*r**3+0.0598350586183487*r**2+3.5538327399018*r+7.99983994492537)+0.280042221199329*nu**2*sp.log(r)**2+nu*(0.00170924207274981*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+2.22557561555965e-7*r*(-877100.561751059*r**4+545881.123502118*r**3+1091762.24700424*r**2+1692004.49400847*r-4316471.01198305)+2.22557561555965e-7*r*(-113485.217444961*r**4+226970.434889922*r**3+453940.869779844*r**2+907881.739559688*r+1815763.47911938)+2.22557561555965e-7*r*(51667.3790397027*r**4+285132.871147471*r**3+570265.742294942*r**2+1140531.48458988*r+5388804.00299478))+nu*(-0.255362968236103*nu**2-5.26911058192953*nu+0.0218782985311977*r**5+1.35654132757922e-7*r**4*(362880.0*nu+517920.0)+1.35654132757922e-7*r**3*(725760.0*nu+1035840.0)+1.35654132757922e-7*r**2*(1128960.0*nu+2071680.0)+1.35654132757922e-7*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+1.82423336800605)*sp.log(r)+0.054695746327994*r**5)**2+r**4*(9986623863.19079*nu**2+5284823040.0*nu*sp.log(r)-50476253192.4036*nu+7680.0*nu*(1548288.0*nu+688128.0*r+833536.0)/r+13212057600.0)/(241555486248.807*nu**4+nu**3*(-19973247726.3816*r**2-183326040601.257*r-1331665954115.41)+nu**2*(-275251200.0*a6*(3.0*r+59.0)+5221004936.80923*a6+9986623863.1908*r**5-21624754926.3815*r**4-43249509852.7631*r**3+14453486679.2811*r**2+858447795533.909*r+1932405227809.08)+67645734912.0*nu**2*sp.log(r)**2+nu*(412876800.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+53760.0*r*(-877100.561751059*r**4+545881.123502118*r**3+1091762.24700424*r**2+1692004.49400847*r-4316471.01198305)+53760.0*r*(-113485.217444961*r**4+226970.434889922*r**3+453940.869779844*r**2+907881.739559688*r+1815763.47911938)+53760.0*r*(51667.3790397027*r**4+285132.871147471*r**3+570265.742294942*r**2+1140531.48458988*r+5388804.00299478))+nu*(-61684325962.2103*nu**2-1272782568716.72*nu+5284823040.0*r**5+32768.0*r**4*(362880.0*nu+517920.0)+32768.0*r**3*(725760.0*nu+1035840.0)+32768.0*r**2*(1128960.0*nu+2071680.0)+32768.0*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+440653578240.0)*sp.log(r)+13212057600.0*r**5)+r**3*(-166392010611.052*nu**2+30720.0*nu*(53760.0*a6+20550748.608965)+30720.0*nu*(1548288.0*nu+688128.0*r+833536.0)*sp.log(r)-30720.0*r*(-1300341.64885297*nu**2+6572428.80109422*nu-1720320.0)-105696460800.0)/(241555486248.807*nu**4+nu**3*(-19973247726.3816*r**2-183326040601.257*r-1331665954115.41)+nu**2*(-275251200.0*a6*(3.0*r+59.0)+5221004936.80923*a6+9986623863.1908*r**5-21624754926.3815*r**4-43249509852.7631*r**3+14453486679.2811*r**2+858447795533.909*r+1932405227809.08)+67645734912.0*nu**2*sp.log(r)**2+nu*(412876800.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+53760.0*r*(-877100.561751059*r**4+545881.123502118*r**3+1091762.24700424*r**2+1692004.49400847*r-4316471.01198305)+53760.0*r*(-113485.217444961*r**4+226970.434889922*r**3+453940.869779844*r**2+907881.739559688*r+1815763.47911938)+53760.0*r*(51667.3790397027*r**4+285132.871147471*r**3+570265.742294942*r**2+1140531.48458988*r+5388804.00299478))+nu*(-61684325962.2103*nu**2-1272782568716.72*nu+5284823040.0*r**5+32768.0*r**4*(362880.0*nu+517920.0)+32768.0*r**3*(725760.0*nu+1035840.0)+32768.0*r**2*(1128960.0*nu+2071680.0)+32768.0*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+440653578240.0)*sp.log(r)+13212057600.0*r**5)
    xi_prmr = -2*sp.sqrt(Dnons)*ap**2*u*u_prmr*(Anons+ap**2*u**2)/(ap**2*u**2+1)**2+sp.sqrt(Dnons)*(Anons_prmr+2*ap**2*u*u_prmr)/(ap**2*u**2+1)+Dnons_prmr*(Anons+ap**2*u**2)/(sp.sqrt(Dnons)*(2*ap**2*u**2+2))
    pr_prmr = -prstar*xi_prmr/xi**2
    QalignSS_prmr = pr**4*(-3*am**2*(-15*nu**2/8+75*nu/32-15/32)-3*am*ap*delta*(45*nu/8-5/16)-3*ap**2*(-5*nu**2+165*nu/32+25/32))/r**4+pr**3*pr_prmr*(4*am**2*(-15*nu**2/8+75*nu/32-15/32)+4*am*ap*delta*(45*nu/8-5/16)+4*ap**2*(-5*nu**2+165*nu/32+25/32))/r**3
    BnpalignSS_prmr = -(3*am**2*(3*nu/4-3/16)-63*am*ap*delta/8+3*ap**2*(3*nu+45/16))/r**4+(-4*am**2*(nu**2/16+115*nu/64-37/64)-4*am*ap*delta*(13*nu/16+449/32)-4*ap**2*(-1171*nu/64-861/64))/r**5
    AalignSS_prmr = (-4*am**2*(nu/2+1/8)+5*am*ap*delta-9*ap**2/2)/r**5-(5*am**2*(21*nu**2/16-81*nu/64-9/64)+5*am*ap*delta*(117/32-39*nu/16)+5*ap**2*(-175*nu/64-225/64))/r**6
    Qalign_prmr = QalignSS_prmr+Qnos_prmr
    Balignnp_prmr = Anons*Dnons_prmr+Anons_prmr*Dnons+BnpalignSS_prmr+2*ap**2*u*u_prmr
    Bkerreqnp_prmr = (-1-2/r)*(2*ap**2/r**2-2*r)/(ap**2*(1+2/r)+r**2)**2+2/(r**2*(ap**2*(1+2/r)+r**2))
    Aalign_prmr = (ap**2*(2+4/r)/r**3+2*ap**2/r**4)*(AalignSS+Anons+ap**2*u**2)/(ap**2*(1+2/r)/r**2+1)**2+(AalignSS_prmr+Anons_prmr+2*ap**2*u*u_prmr)/(ap**2*(1+2/r)/r**2+1)
    Galigna3_prmr = pphi*(-am*ap**2*delta+ap**3)/(2*r**3)
    SOcalib_prmr = 3*ap*dSO*nu*pphi*u**2*u_prmr
    Heven_prmr = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2+Qalign+pphi**2/r**2+pr**2*(Balignnp+1)+1))*(Aalign*(Balignnp_prmr*pr**2-2*Bkerreqnp*ap**2*pphi**2/r**3+Bkerreqnp_prmr*ap**2*pphi**2/r**2+Qalign_prmr-2*pphi**2/r**3+pr*pr_prmr*(2*Balignnp+2))/2+Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2+Qalign+pphi**2/r**2+pr**2*(Balignnp+1)+1)/2)/(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2+Qalign+pphi**2/r**2+pr**2*(Balignnp+1)+1))
    Hodd_prmr = (-ap**2-3*r**2)*(Galigna3+SOcalib+pphi*(am*delta*gam+ap*gap))/(ap**2*(r+2)+r**3)**2+(Galigna3_prmr+SOcalib_prmr+pphi*(am*delta*gam_prmr+ap*gap_prmr))/(ap**2*(r+2)+r**3)
    Heff_prmr = Heven_prmr+Hodd_prmr
    Hreal_prmr = Heff_prmr*nu/sp.sqrt(nu*(2*Heff-2)+1)
    
    u_prmr = -1/r**2
    gam_prmr = -pphi**4*(75*nu**2/64 - 45*nu/32 - 105/64)/r**5 + pphi**2*(9*nu/16 - 15/16)/r**3 - pphi**2*(-613*nu**2/256 - 105*nu/128 - 177/256)/r**4 - (11*nu/32 + 3/32)/r**2 - (103*nu**2/96 - nu/16 + 5/32)/r**3
    gap_prmr = -pphi**4*(345*nu**2/64 + 75*nu/32 + 105/64)/r**5 - pphi**2*(-45*nu/16 - 15/16)/r**3 - pphi**2*(-1591*nu**2/256 - 801*nu/128 + 177/256)/r**4 - (23*nu/32 - 3/32)/r**2 - (109*nu**2/96 - 177*nu/16 - 5/32)/r**3
    Qnos_prmr = -3.70688355060913*nu*prstar**8/r**3.5 - 0.121954868780449*nu*prstar**8/r**2 + 39.6112800271521*nu*prstar**6/r**4.5 - 663.496888455657*nu*prstar**4/r**5.5 - prstar**8*(-12.0*nu**4 + 6.85714285714286*nu**3 + 6.67684047296644*nu**2 + 2.77955501992256*nu)/r**3 - prstar**6*(12.0*nu**3 - 10.8*nu**2 - 5.56601527390012*nu)/r**3 - prstar**6*(-42.0*nu**4 + 564.0*nu**3 - 268.58949820837*nu**2 - 101.934636651131*nu)/r**4 - prstar**4*(-12.0*nu**2 + 16.0*nu)/r**3 + prstar**4*(118.4*nu**2/r - 51.6952380952381*nu/r)/r**4 - prstar**4*(30.0*nu**3 - 393.0*nu**2 + 278.133132854863*nu)/r**4 - prstar**4*(2409.27416166626*nu**3 + 4*nu**2*(118.4*sp.log(r) - 1796.13660498019) + 4*nu*(452.542166996693 - 51.6952380952381*sp.log(r)))/r**5
    Dnons_prmr = r*(22295347200.0*d5*nu + 267544166400.0*nu**2*r + 1822680546449.21*nu**2 + 5178202125747.62*nu*r + 5807150888816.35*nu + 10215490662751.4*r - (-4161798144000.0*nu - 1759846072320.0*r - 12148770078720.0)*sp.log(r) - 53501685054374.0 - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)/r + 11575876386816.0*sp.log(r)/r)/(nu*(802632499200.0*nu**3 - 2357625227852.38*nu**2 + 55296.0*nu*(-2419200.0*d5 - 6842026062.89278) + 239506984559637.0*nu + 55407353094707.5) + r**3*(133772083200.0*nu**2 + 2589101062873.81*nu + 5107745331375.71) - r**2*(-1822680546449.21*nu**2 + 9216.0*nu*(-2419200.0*d5 - 3111569738.71965) + 22869075823224.0*nu + 53501685054374.1) + r*(5927865218923.02*nu**3 + nu**2*(22295347200.0*d5 + 181275031890860.0) - 138141470005001.0*nu**2 - nu*(193226342400.0*d5 + 406779588496105.0) + 450172889755120.0*nu + 86618264430493.3*(1 - 0.496948781616935*nu)**2 + 188440788778196.0) + 5787938193408.0*r*sp.log(r)**2 + (nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r)) + r*(-1.7694999344523e-13*nu**3 - 2.98505426338587e-26*nu**2*(22295347200.0*d5 + 181275031890860.0) + 4.123597839888195e-12*nu**2 + 2.98505426338587e-26*nu*(193226342400.0*d5 + 406779588496105.0) - 1.343790503824258e-11*nu + 2.98505426338587e-26*r**2*(-401316249600.0*nu**2 - 7767303188621.42*nu - 15323235994127.1) + 2.98505426338587e-26*r*(-3645361092898.42*nu**2 + 18432.0*nu*(-2419200.0*d5 - 3111569738.71965) + 45738151646447.9*nu + 107003370108748.0) - 2.58560219525329e-12*(1 - 0.496948781616935*nu)**2 - 2.98505426338587e-26*(5041721180160.0*nu**2 + 20113376778784.4*nu + 2639769108480.0*r**2 + r*(8323596288000.0*nu + 24297540157440.0) - 104186110149937.0)*sp.log(r) - 1.72773095804465e-13*sp.log(r)**2 - 3.45546191608929e-13*sp.log(r) - 5.625059799381501e-12 - 2.98505426338587e-26*(nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))/r)*(22295347200.0*d5*nu**2 + 22295347200.0*d5*nu*r - 193226342400.0*d5*nu + 6730497718123.02*nu**3 + 133772083200.0*nu**2*r**2 + 1822680546449.21*nu**2*r + 80059249540278.2*nu**2 + 2589101062873.81*nu*r**2 + 10611661054566.2*nu*r - 12049908701745.2*nu + 5107745331375.71*r**2 + r*(-4804510165749.84*nu - 14024920797448.4) - 39476764256925.6*r - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)*sp.log(r) + 5787938193408.0*sp.log(r)**2 + 275059053208689.0)/(nu*(0.138673301680058*nu**3 - 0.407334209362761*nu**2 + 9.55366110560367e-9*nu*(-2419200.0*d5 - 6842026062.89278) + 41.3803631891606*nu + 9.57289992450369) + r**3*(0.0231122169466764*nu**2 + 0.447327005983337*nu + 0.882480973482581) - r**2*(-0.314910160672604*nu**2 + 1.59227685093395e-9*nu*(-2419200.0*d5 - 3111569738.71965) + 3.95116102816545*nu + 9.24365175759969) + r*(1.02417562538494*nu**3 + 1.72773095804465e-13*nu**2*(22295347200.0*d5 + 181275031890860.0) - 23.86712943174367*nu**2 - 1.72773095804465e-13*nu*(193226342400.0*d5 + 406779588496105.0) + 77.77776381023421*nu + 14.9653056988661*(1 - 0.496948781616935*nu)**2 + 32.55749845304421) + r*sp.log(r)**2 + (1.72773095804465e-13*nu*(-19691250647040.0*nu - 118648618352640.0) + 0.152027027027027*r**3 + 1.72773095804465e-13*r**2*(4161798144000.0*nu + 12148770078720.0) + 1.72773095804465e-13*r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r))**2 + (22295347200.0*d5*nu**2 + 22295347200.0*d5*nu*r - 193226342400.0*d5*nu + 6730497718123.02*nu**3 + 133772083200.0*nu**2*r**2 + 1822680546449.21*nu**2*r + 80059249540278.2*nu**2 + 2589101062873.81*nu*r**2 + 10611661054566.2*nu*r - 12049908701745.2*nu + 5107745331375.71*r**2 + r*(-4804510165749.84*nu - 14024920797448.4) - 39476764256925.6*r - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)*sp.log(r) + 5787938193408.0*sp.log(r)**2 + 275059053208689.0)/(nu*(802632499200.0*nu**3 - 2357625227852.38*nu**2 + 55296.0*nu*(-2419200.0*d5 - 6842026062.89278) + 239506984559637.0*nu + 55407353094707.5) + r**3*(133772083200.0*nu**2 + 2589101062873.81*nu + 5107745331375.71) - r**2*(-1822680546449.21*nu**2 + 9216.0*nu*(-2419200.0*d5 - 3111569738.71965) + 22869075823224.0*nu + 53501685054374.1) + r*(5927865218923.02*nu**3 + nu**2*(22295347200.0*d5 + 181275031890860.0) - 138141470005001.0*nu**2 - nu*(193226342400.0*d5 + 406779588496105.0) + 450172889755120.0*nu + 86618264430493.3*(1 - 0.496948781616935*nu)**2 + 188440788778196.0) + 5787938193408.0*r*sp.log(r)**2 + (nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r))
    Anons_prmr = r**4*(-7.12916500937039e-13*nu**2 + 1.31621673590926e-19*nu*(53760.0*a6 + 20550748.608965) + 1.31621673590926e-19*nu*(1548288.0*nu + 688128.0*r + 833536.0)*sp.log(r) - 1.31621673590926e-19*r*(-1300341.64885297*nu**2 + 6572428.80109422*nu - 1720320.0) - 4.52862795023884e-13)*(nu**3*(39946495452.7632*r + 183326040601.257) - nu**2*(-825753600.0*a6 + 49933119315.954*r**4 - 86499019705.5264*r**3 - 129748529558.289*r**2 + 28906973358.5622*r + 858447795533.909) - 135291469824.0*nu**2*sp.log(r)/r - nu*(-23781703680.0*nu**2 - 58717141288.8419*nu + 26424115200.0*r**4 + 32768.0*r**3*(1451520.0*nu + 2071680.0) + 32768.0*r**2*(2177280.0*nu + 3107520.0) + 32768.0*r*(2257920.0*nu + 4143360.0) + 135769620480.0)*sp.log(r) - nu*(412876800.0*a6*(4*r**3 + 6.0*r**2 + 8.0*r + 8.0) - 50476253192.4036*r**4 + 56877242932.0441*r**3 + 113754485864.088*r**2 + 53760.0*r*(-3508402.24700424*r**3 + 1637643.37050636*r**2 + 2183524.49400847*r + 1692004.49400847) + 53760.0*r*(-453940.869779844*r**3 + 680911.304669766*r**2 + 907881.739559688*r + 907881.739559688) + 53760.0*r*(206669.516158811*r**3 + 855398.613442412*r**2 + 1140531.48458988*r + 1140531.48458988) + 201084856528.177*r + 155264066234.248) - nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + 32768.0*r**4*(362880.0*nu + 517920.0) + 32768.0*r**3*(725760.0*nu + 1035840.0) + 32768.0*r**2*(1128960.0*nu + 2071680.0) + 32768.0*r*(-725760.0*nu**2 - 1791904.94655889*nu + 4143360.0) + 440653578240.0)/r - 66060288000.0*r**4)/(nu**4 + nu**3*(-0.0826859618738229*r**2 - 0.758939668264987*r - 5.51287811672293) + nu**2*(-0.00113949471516654*a6*(3.0*r + 59.0) + 0.0216141020760402*a6 + 0.0413429809369115*r**5 - 0.0895229301648219*r**4 - 0.179045860329644*r**3 + 0.0598350586183487*r**2 + 3.5538327399018*r + 7.99983994492537) + 0.280042221199329*nu**2*sp.log(r)**2 + nu*(0.00170924207274981*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 2.22557561555965e-7*r*(-877100.561751059*r**4 + 545881.123502118*r**3 + 1091762.24700424*r**2 + 1692004.49400847*r - 4316471.01198305) + 2.22557561555965e-7*r*(-113485.217444961*r**4 + 226970.434889922*r**3 + 453940.869779844*r**2 + 907881.739559688*r + 1815763.47911938) + 2.22557561555965e-7*r*(51667.3790397027*r**4 + 285132.871147471*r**3 + 570265.742294942*r**2 + 1140531.48458988*r + 5388804.00299478)) + nu*(-0.255362968236103*nu**2 - 5.26911058192953*nu + 0.0218782985311977*r**5 + 1.35654132757922e-7*r**4*(362880.0*nu + 517920.0) + 1.35654132757922e-7*r**3*(725760.0*nu + 1035840.0) + 1.35654132757922e-7*r**2*(1128960.0*nu + 2071680.0) + 1.35654132757922e-7*r*(-725760.0*nu**2 - 1791904.94655889*nu + 4143360.0) + 1.82423336800605)*sp.log(r) + 0.054695746327994*r**5)**2 + r**4*(9986623863.19079*nu**2 + 5284823040.0*nu*sp.log(r) - 50476253192.4036*nu + 7680.0*nu*(1548288.0*nu + 688128.0*r + 833536.0)/r + 13212057600.0)/(241555486248.807*nu**4 + nu**3*(-19973247726.3816*r**2 - 183326040601.257*r - 1331665954115.41) + nu**2*(-275251200.0*a6*(3.0*r + 59.0) + 5221004936.80923*a6 + 9986623863.1908*r**5 - 21624754926.3815*r**4 - 43249509852.7631*r**3 + 14453486679.2811*r**2 + 858447795533.909*r + 1932405227809.08) + 67645734912.0*nu**2*sp.log(r)**2 + nu*(412876800.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 53760.0*r*(-877100.561751059*r**4 + 545881.123502118*r**3 + 1091762.24700424*r**2 + 1692004.49400847*r - 4316471.01198305) + 53760.0*r*(-113485.217444961*r**4 + 226970.434889922*r**3 + 453940.869779844*r**2 + 907881.739559688*r + 1815763.47911938) + 53760.0*r*(51667.3790397027*r**4 + 285132.871147471*r**3 + 570265.742294942*r**2 + 1140531.48458988*r + 5388804.00299478)) + nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + 32768.0*r**4*(362880.0*nu + 517920.0) + 32768.0*r**3*(725760.0*nu + 1035840.0) + 32768.0*r**2*(1128960.0*nu + 2071680.0) + 32768.0*r*(-725760.0*nu**2 - 1791904.94655889*nu + 4143360.0) + 440653578240.0)*sp.log(r) + 13212057600.0*r**5) + r**3*(-166392010611.052*nu**2 + 30720.0*nu*(53760.0*a6 + 20550748.608965) + 30720.0*nu*(1548288.0*nu + 688128.0*r + 833536.0)*sp.log(r) - 30720.0*r*(-1300341.64885297*nu**2 + 6572428.80109422*nu - 1720320.0) - 105696460800.0)/(241555486248.807*nu**4 + nu**3*(-19973247726.3816*r**2 - 183326040601.257*r - 1331665954115.41) + nu**2*(-275251200.0*a6*(3.0*r + 59.0) + 5221004936.80923*a6 + 9986623863.1908*r**5 - 21624754926.3815*r**4 - 43249509852.7631*r**3 + 14453486679.2811*r**2 + 858447795533.909*r + 1932405227809.08) + 67645734912.0*nu**2*sp.log(r)**2 + nu*(412876800.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 53760.0*r*(-877100.561751059*r**4 + 545881.123502118*r**3 + 1091762.24700424*r**2 + 1692004.49400847*r - 4316471.01198305) + 53760.0*r*(-113485.217444961*r**4 + 226970.434889922*r**3 + 453940.869779844*r**2 + 907881.739559688*r + 1815763.47911938) + 53760.0*r*(51667.3790397027*r**4 + 285132.871147471*r**3 + 570265.742294942*r**2 + 1140531.48458988*r + 5388804.00299478)) + nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + 32768.0*r**4*(362880.0*nu + 517920.0) + 32768.0*r**3*(725760.0*nu + 1035840.0) + 32768.0*r**2*(1128960.0*nu + 2071680.0) + 32768.0*r*(-725760.0*nu**2 - 1791904.94655889*nu + 4143360.0) + 440653578240.0)*sp.log(r) + 13212057600.0*r**5)
    xi_prmr = -2*sp.sqrt(Dnons)*ap**2*u*u_prmr*(Anons + ap**2*u**2)/(ap**2*u**2 + 1)**2 + sp.sqrt(Dnons)*(Anons_prmr + 2*ap**2*u*u_prmr)/(ap**2*u**2 + 1) + Dnons_prmr*(Anons + ap**2*u**2)/(sp.sqrt(Dnons)*(2*ap**2*u**2 + 2))
    pr_prmr = -prstar*xi_prmr/xi**2
    QalignSS_prmr = pr**4*(-3*am**2*(-15*nu**2/8 + 75*nu/32 - 15/32) - 3*am*ap*delta*(45*nu/8 - 5/16) - 3*ap**2*(-5*nu**2 + 165*nu/32 + 25/32))/r**4 + pr**3*pr_prmr*(4*am**2*(-15*nu**2/8 + 75*nu/32 - 15/32) + 4*am*ap*delta*(45*nu/8 - 5/16) + 4*ap**2*(-5*nu**2 + 165*nu/32 + 25/32))/r**3
    BnpalignSS_prmr = -(3*am**2*(3*nu/4 - 3/16) - 63*am*ap*delta/8 + 3*ap**2*(3*nu + 45/16))/r**4 + (-4*am**2*(nu**2/16 + 115*nu/64 - 37/64) - 4*am*ap*delta*(13*nu/16 + 449/32) - 4*ap**2*(-1171*nu/64 - 861/64))/r**5
    AalignSS_prmr = (-4*am**2*(nu/2 + 1/8) + 5*am*ap*delta - 9*ap**2/2)/r**5 - (5*am**2*(21*nu**2/16 - 81*nu/64 - 9/64) + 5*am*ap*delta*(117/32 - 39*nu/16) + 5*ap**2*(-175*nu/64 - 225/64))/r**6
    Qalign_prmr = QalignSS_prmr + Qnos_prmr
    Balignnp_prmr = Anons*Dnons_prmr + Anons_prmr*Dnons + BnpalignSS_prmr + 2*ap**2*u*u_prmr
    Bkerreqnp_prmr = (-1 - 2/r)*(2*ap**2/r**2 - 2*r)/(ap**2*(1 + 2/r) + r**2)**2 + 2/(r**2*(ap**2*(1 + 2/r) + r**2))
    Aalign_prmr = (ap**2*(2 + 4/r)/r**3 + 2*ap**2/r**4)*(AalignSS + Anons + ap**2*u**2)/(ap**2*(1 + 2/r)/r**2 + 1)**2 + (AalignSS_prmr + Anons_prmr + 2*ap**2*u*u_prmr)/(ap**2*(1 + 2/r)/r**2 + 1)
    Galigna3_prmr = pphi*(-am*ap**2*delta + ap**3)/(2*r**3)
    SOcalib_prmr = 3*ap*dSO*nu*pphi*u**2*u_prmr
    Heven_prmr = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2)/(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))
    Hodd_prmr = (-ap**2 - 3*r**2)*(Galigna3 + SOcalib + pphi*(am*delta*gam + ap*gap))/(ap**2*(r + 2) + r**3)**2 + (Galigna3_prmr + SOcalib_prmr + pphi*(am*delta*gam_prmr + ap*gap_prmr))/(ap**2*(r + 2) + r**3)
    Heff_prmr = Heven_prmr + Hodd_prmr
    Hreal_prmr = Heff_prmr*nu/sp.sqrt(nu*(2*Heff - 2) + 1)
    u_prmr_prmr = 2/r**3
    gam_prmr_prmr = pphi**4*(375*nu**2/64 - 225*nu/32 - 525/64)/r**6 - pphi**2*(27*nu/16 - 45/16)/r**4 + pphi**2*(-613*nu**2/64 - 105*nu/32 - 177/64)/r**5 + (11*nu/16 + 3/16)/r**3 + (103*nu**2/32 - 3*nu/16 + 15/32)/r**4
    gap_prmr_prmr = pphi**4*(1725*nu**2/64 + 375*nu/32 + 525/64)/r**6 + pphi**2*(-135*nu/16 - 45/16)/r**4 + pphi**2*(-1591*nu**2/64 - 801*nu/32 + 177/64)/r**5 + (23*nu/16 - 3/16)/r**3 + (109*nu**2/32 - 531*nu/16 - 15/32)/r**4
    Qnos_prmr_prmr = 12.974092427132*nu*prstar**8/r**4.5 + 0.243909737560898*nu*prstar**8/r**3 - 178.250760122184*nu*prstar**6/r**5.5 + 3649.23288650611*nu*prstar**4/r**6.5 + prstar**8*(-36.0*nu**4 + 20.5714285714286*nu**3 + 20.0305214188993*nu**2 + 8.33866505976768*nu)/r**4 + prstar**6*(36.0*nu**3 - 32.4*nu**2 - 16.6980458217004*nu)/r**4 + prstar**6*(-168.0*nu**4 + 2256.0*nu**3 - 1074.35799283348*nu**2 - 407.738546604524*nu)/r**5 + prstar**4*(-36.0*nu**2 + 48.0*nu)/r**4 + prstar**4*(-118.4*nu**2/r**2 + 51.6952380952381*nu/r**2)/r**4 - prstar**4*(473.6*nu**2/r - 206.780952380952*nu/r)/r**5 - prstar**4*(473.6*nu**2/r - 206.780952380952*nu/r)/r**5 + prstar**4*(120.0*nu**3 - 1572.0*nu**2 + 1112.53253141945*nu)/r**5 + prstar**4*(12046.3708083313*nu**3 + 5*nu**2*(473.6*sp.log(r) - 7184.54641992076) + 5*nu*(1810.16866798677 - 206.780952380952*sp.log(r)))/r**6
    Dnons_prmr_prmr = r*(267544166400.0*nu**2 + 5178202125747.62*nu + 1759846072320.0*sp.log(r) + 10215490662751.4 - 2*(-4161798144000.0*nu - 1759846072320.0*r - 12148770078720.0)/r + (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)/r**2 - 11575876386816.0*sp.log(r)/r**2 + 11575876386816.0/r**2)/(nu*(802632499200.0*nu**3 - 2357625227852.38*nu**2 + nu*(-133772083200.0*d5 - 378336673173719.0) + 239506984559637.0*nu + 55407353094707.5) + r**3*(133772083200.0*nu**2 + 2589101062873.81*nu + 5107745331375.71) - r**2*(-1822680546449.21*nu**2 + nu*(-22295347200.0*d5 - 28676226712040.3) + 22869075823224.0*nu + 53501685054374.1) + r*(5927865218923.02*nu**3 + nu**2*(22295347200.0*d5 + 181275031890860.0) - 138141470005001.0*nu**2 - nu*(193226342400.0*d5 + 406779588496105.0) + 450172889755120.0*nu + 86618264430493.3*(1 - 0.496948781616935*nu)**2 + 188440788778196.0) + 5787938193408.0*r*sp.log(r)**2 + (nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r)) + r*(6.65528212130282e-16*d5*nu + 7.98633854556339e-15*nu**2*r + 5.4408003359687e-14*nu**2 + 1.54572143321367e-13*nu*r + 1.73346605187863e-13*nu + 3.04937939554246e-13*r + 2.98505426338587e-26*(4161798144000.0*nu + 1759846072320.0*r + 12148770078720.0)*sp.log(r) - 1.59705433069887e-12 - 2.98505426338587e-26*(-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)/r + 3.45546191608929e-13*sp.log(r)/r)*(-5927865218923.02*nu**3 - nu**2*(22295347200.0*d5 + 181275031890860.0) + 138141470005001.0*nu**2 + nu*(193226342400.0*d5 + 406779588496105.0) - 450172889755120.0*nu - r**2*(401316249600.0*nu**2 + 7767303188621.43*nu + 15323235994127.1) + r*(-3645361092898.42*nu**2 + 2*nu*(-22295347200.0*d5 - 28676226712040.3) + 45738151646448.0*nu + 107003370108748.0) - 86618264430493.3*(1 - 0.496948781616935*nu)**2 - (5041721180160.0*nu**2 + 20113376778784.4*nu + 2639769108480.0*r**2 + r*(8323596288000.0*nu + 24297540157440.0) - 104186110149937.0)*sp.log(r) - 5787938193408.0*sp.log(r)**2 - 11575876386816.0*sp.log(r) - 188440788778196.0 - (nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))/r)/(nu*(0.138673301680059*nu**3 - 0.407334209362763*nu**2 + 1.72773095804465e-13*nu*(-133772083200.0*d5 - 378336673173719.0) + 41.38036318916069*nu + 9.57289992450372) + r**3*(0.0231122169466765*nu**2 + 0.447327005983339*nu + 0.882480973482584) - r**2*(-0.314910160672604*nu**2 + 1.72773095804465e-13*nu*(-22295347200.0*d5 - 28676226712040.3) + 3.95116102816545*nu + 9.24365175759969) + r*(1.02417562538494*nu**3 + 1.72773095804465e-13*nu**2*(22295347200.0*d5 + 181275031890860.0) - 23.86712943174367*nu**2 - 1.72773095804465e-13*nu*(193226342400.0*d5 + 406779588496105.0) + 77.77776381023421*nu + 14.9653056988661*(1 - 0.496948781616935*nu)**2 + 32.55749845304421) + r*sp.log(r)**2 + (1.72773095804465e-13*nu*(-19691250647040.0*nu - 118648618352640.0) + 0.152027027027027*r**3 + 1.72773095804465e-13*r**2*(4161798144000.0*nu + 12148770078720.0) + 1.72773095804465e-13*r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r))**2 + r*(22295347200.0*d5*nu + 267544166400.0*nu**2*r + 1822680546449.21*nu**2 + 5178202125747.62*nu*r + 5807150888816.36*nu + 10215490662751.4*r - (-4161798144000.0*nu - 1759846072320.0*r - 12148770078720.0)*sp.log(r) - 53501685054374.0 - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)/r + 11575876386816.0*sp.log(r)/r)*(-1.7694999344523e-13*nu**3 - nu**2*(6.65528212130282e-16*d5 + 5.411158067912211e-12) + 4.123597839888195e-12*nu**2 + nu*(5.76791117179578e-15*d5 + 1.214259144898648e-11) - 1.343790503824258e-11*nu + r**2*(-1.19795078183451e-14*nu**2 - 2.3185821498205e-13*nu - 4.57406909331369e-13) + r*(-1.08816006719374e-13*nu**2 + 2.98505426338587e-26*nu*(-44590694400.0*d5 - 57352453424080.6) + 1.36530864571619e-12*nu + 3.194108661397744e-12) - 2.58560219525329e-12*(1 - 0.496948781616935*nu)**2 - (1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu + 7.87985403162254e-14*r**2 + r*(2.48463865861972e-13*nu + 7.25294758367556e-13) - 3.110011922886593e-12)*sp.log(r) - 1.72773095804465e-13*sp.log(r)**2 - 3.45546191608929e-13*sp.log(r) - 5.625059799381501e-12 - (nu*(-5.87794516953465e-13*nu - 3.54172564058391e-12) + 2.62661801054085e-14*r**3 + r**2*(1.24231932930986e-13*nu + 3.62647379183778e-13) + r*(1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu - 3.110011922886593e-12))/r)/(nu*(0.138673301680058*nu**3 - 0.407334209362761*nu**2 + nu*(-0.0231122169466764*d5 - 65.3663982805854) + 41.3803631891606*nu + 9.57289992450369) + r**3*(0.0231122169466764*nu**2 + 0.447327005983337*nu + 0.882480973482581) - r**2*(-0.314910160672604*nu**2 + nu*(-0.00385203615777941*d5 - 4.9544804650299) + 3.95116102816545*nu + 9.24365175759969) + r*(1.02417562538494*nu**3 + nu**2*(0.00385203615777941*d5 + 31.31944845183701) - 23.86712943174367*nu**2 - nu*(0.0333843133674216*d5 + 70.2805688145384) + 77.77776381023421*nu + 14.9653056988661*(1 - 0.496948781616935*nu)**2 + 32.55749845304421) + r*sp.log(r)**2 + (nu*(-3.40211833455078*nu - 20.49928910570808) + 0.152027027027027*r**3 + r**2*(0.719046749452157*nu + 2.09898061671711) + r*(0.871073776479184*nu**2 + 3.47505037315222*nu - 18.00055679042961))*sp.log(r))**2 + r*(-1.08816006719374e-13*nu**2 + 2.98505426338587e-26*nu*(-44590694400.0*d5 - 57352453424080.6) + 1.36530864571619e-12*nu + r*(-2.39590156366902e-14*nu**2 - 4.63716429964101e-13*nu - 9.14813818662738e-13) - (2.48463865861972e-13*nu + 1.57597080632451e-13*r + 7.25294758367556e-13)*sp.log(r) + 3.194108661397744e-12 - (1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu + 7.87985403162254e-14*r**2 + r*(2.48463865861972e-13*nu + 7.25294758367556e-13) - 3.110011922886593e-12)/r - (1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu + 7.87985403162254e-14*r**2 + r*(2.48463865861972e-13*nu + 7.25294758367556e-13) - 3.110011922886593e-12)/r - 3.4554619160893e-13*sp.log(r)/r - 3.45546191608929e-13/r + (nu*(-5.87794516953465e-13*nu - 3.54172564058391e-12) + 2.62661801054085e-14*r**3 + r**2*(1.24231932930986e-13*nu + 3.62647379183778e-13) + r*(1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu - 3.110011922886593e-12))/r**2)*(22295347200.0*d5*nu**2 + 22295347200.0*d5*nu*r - 193226342400.0*d5*nu + 6730497718123.02*nu**3 + 133772083200.0*nu**2*r**2 + 1822680546449.21*nu**2*r + 80059249540278.2*nu**2 + 2589101062873.81*nu*r**2 + 10611661054566.2*nu*r - 12049908701745.2*nu + 5107745331375.71*r**2 + r*(-4804510165749.84*nu - 14024920797448.4) - 39476764256925.6*r - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)*sp.log(r) + 5787938193408.0*sp.log(r)**2 + 275059053208689.0)/(nu*(0.138673301680058*nu**3 - 0.407334209362761*nu**2 + nu*(-0.0231122169466764*d5 - 65.3663982805854) + 41.3803631891606*nu + 9.57289992450369) + r**3*(0.0231122169466764*nu**2 + 0.447327005983337*nu + 0.882480973482581) - r**2*(-0.314910160672604*nu**2 + nu*(-0.00385203615777941*d5 - 4.9544804650299) + 3.95116102816545*nu + 9.24365175759969) + r*(1.02417562538494*nu**3 + nu**2*(0.00385203615777941*d5 + 31.31944845183701) - 23.86712943174367*nu**2 - nu*(0.0333843133674216*d5 + 70.2805688145384) + 77.77776381023421*nu + 14.9653056988661*(1 - 0.496948781616935*nu)**2 + 32.55749845304421) + r*sp.log(r)**2 + (nu*(-3.40211833455078*nu - 20.49928910570808) + 0.152027027027027*r**3 + r**2*(0.719046749452157*nu + 2.09898061671711) + r*(0.871073776479184*nu**2 + 3.47505037315222*nu - 18.00055679042961))*sp.log(r))**2 + r*(-2.04835125076988*nu**3 - 2*nu**2*(0.00385203615777941*d5 + 31.31944845183701) + 47.73425886348734*nu**2 + 2*nu*(0.0333843133674216*d5 + 70.2805688145384) - 155.5555276204684*nu - r**2*(0.138673301680058*nu**2 + 2.68396203590002*nu + 5.29488584089549) + r*(-1.25964064269042*nu**2 + 4*nu*(-0.00385203615777941*d5 - 4.9544804650299) + 15.8046441126618*nu + 36.9746070303988) - 29.9306113977322*(1 - 0.496948781616935*nu)**2 - (1.74214755295837*nu**2 + 6.95010074630444*nu + 0.912162162162162*r**2 + 2*r*(1.43809349890431*nu + 4.19796123343422) - 36.00111358085922)*sp.log(r) - 2*sp.log(r)**2 - 4*sp.log(r) - 65.11499690608842 - (2*nu*(-3.40211833455078*nu - 20.49928910570808) + 0.304054054054054*r**3 + 2*r**2*(0.719046749452157*nu + 2.09898061671711) + 2*r*(0.871073776479184*nu**2 + 3.47505037315222*nu - 18.00055679042961))/r)*(-1.7694999344523e-13*nu**3 - nu**2*(6.65528212130282e-16*d5 + 5.411158067912211e-12) + 4.123597839888195e-12*nu**2 + nu*(5.76791117179578e-15*d5 + 1.214259144898648e-11) - 1.343790503824258e-11*nu + r**2*(-1.19795078183451e-14*nu**2 - 2.3185821498205e-13*nu - 4.57406909331369e-13) + r*(-1.08816006719374e-13*nu**2 + 2.98505426338587e-26*nu*(-44590694400.0*d5 - 57352453424080.6) + 1.36530864571619e-12*nu + 3.194108661397744e-12) - 2.58560219525329e-12*(1 - 0.496948781616935*nu)**2 - (1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu + 7.87985403162254e-14*r**2 + r*(2.48463865861972e-13*nu + 7.25294758367556e-13) - 3.110011922886593e-12)*sp.log(r) - 1.72773095804465e-13*sp.log(r)**2 - 3.45546191608929e-13*sp.log(r) - 5.625059799381501e-12 - (nu*(-5.87794516953465e-13*nu - 3.54172564058391e-12) + 2.62661801054085e-14*r**3 + r**2*(1.24231932930986e-13*nu + 3.62647379183778e-13) + r*(1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu - 3.110011922886593e-12))/r)*(22295347200.0*d5*nu**2 + 22295347200.0*d5*nu*r - 193226342400.0*d5*nu + 6730497718123.02*nu**3 + 133772083200.0*nu**2*r**2 + 1822680546449.21*nu**2*r + 80059249540278.2*nu**2 + 2589101062873.81*nu*r**2 + 10611661054566.2*nu*r - 12049908701745.2*nu + 5107745331375.71*r**2 + r*(-4804510165749.84*nu - 14024920797448.4) - 39476764256925.6*r - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)*sp.log(r) + 5787938193408.0*sp.log(r)**2 + 275059053208689.0)/(nu*(0.138673301680058*nu**3 - 0.407334209362761*nu**2 + nu*(-0.0231122169466764*d5 - 65.3663982805854) + 41.3803631891606*nu + 9.57289992450369) + r**3*(0.0231122169466764*nu**2 + 0.447327005983337*nu + 0.882480973482581) - r**2*(-0.314910160672604*nu**2 + nu*(-0.00385203615777941*d5 - 4.9544804650299) + 3.95116102816545*nu + 9.24365175759969) + r*(1.02417562538494*nu**3 + nu**2*(0.00385203615777941*d5 + 31.31944845183701) - 23.86712943174367*nu**2 - nu*(0.0333843133674216*d5 + 70.2805688145384) + 77.77776381023421*nu + 14.9653056988661*(1 - 0.496948781616935*nu)**2 + 32.55749845304421) + r*sp.log(r)**2 + (nu*(-3.40211833455078*nu - 20.49928910570808) + 0.152027027027027*r**3 + r**2*(0.719046749452157*nu + 2.09898061671711) + r*(0.871073776479184*nu**2 + 3.47505037315222*nu - 18.00055679042961))*sp.log(r))**3 + (22295347200.0*d5*nu + 267544166400.0*nu**2*r + 1822680546449.21*nu**2 + 5178202125747.62*nu*r + 5807150888816.35*nu + 10215490662751.4*r + (4161798144000.0*nu + 1759846072320.0*r + 12148770078720.0)*sp.log(r) - 53501685054374.0 - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)/r + 11575876386816.0*sp.log(r)/r)/(nu*(802632499200.0*nu**3 - 2357625227852.38*nu**2 + nu*(-133772083200.0*d5 - 378336673173719.0) + 239506984559637.0*nu + 55407353094707.5) + r**3*(133772083200.0*nu**2 + 2589101062873.81*nu + 5107745331375.71) - r**2*(-1822680546449.21*nu**2 + nu*(-22295347200.0*d5 - 28676226712040.3) + 22869075823224.0*nu + 53501685054374.1) + r*(5927865218923.02*nu**3 + nu**2*(22295347200.0*d5 + 181275031890860.0) - 138141470005001.0*nu**2 - nu*(193226342400.0*d5 + 406779588496105.0) + 450172889755120.0*nu + 86618264430493.3*(1 - 0.496948781616935*nu)**2 + 188440788778196.0) + 5787938193408.0*r*sp.log(r)**2 + (nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r)) + (22295347200.0*d5*nu + 267544166400.0*nu**2*r + 1822680546449.21*nu**2 + 5178202125747.62*nu*r + 5807150888816.36*nu + 10215490662751.4*r - (-4161798144000.0*nu - 1759846072320.0*r - 12148770078720.0)*sp.log(r) - 53501685054374.0 - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)/r + 11575876386816.0*sp.log(r)/r)/(nu*(802632499200.0*nu**3 - 2357625227852.38*nu**2 + nu*(-133772083200.0*d5 - 378336673173719.0) + 239506984559637.0*nu + 55407353094707.5) + r**3*(133772083200.0*nu**2 + 2589101062873.81*nu + 5107745331375.71) - r**2*(-1822680546449.21*nu**2 + nu*(-22295347200.0*d5 - 28676226712040.3) + 22869075823224.0*nu + 53501685054374.1) + r*(5927865218923.02*nu**3 + nu**2*(22295347200.0*d5 + 181275031890860.0) - 138141470005001.0*nu**2 - nu*(193226342400.0*d5 + 406779588496105.0) + 450172889755120.0*nu + 86618264430493.3*(1 - 0.496948781616935*nu)**2 + 188440788778196.0) + 5787938193408.0*r*sp.log(r)**2 + (nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r)) + (-1.7694999344523e-13*nu**3 - 2.98505426338587e-26*nu**2*(22295347200.0*d5 + 181275031890860.0) + 4.123597839888195e-12*nu**2 + 2.98505426338587e-26*nu*(193226342400.0*d5 + 406779588496105.0) - 1.343790503824258e-11*nu - 2.98505426338587e-26*r**2*(401316249600.0*nu**2 + 7767303188621.43*nu + 15323235994127.1) + 2.98505426338587e-26*r*(-3645361092898.42*nu**2 + 2*nu*(-22295347200.0*d5 - 28676226712040.3) + 45738151646448.0*nu + 107003370108748.0) - 2.58560219525329e-12*(1 - 0.496948781616935*nu)**2 - 2.98505426338587e-26*(5041721180160.0*nu**2 + 20113376778784.4*nu + 2639769108480.0*r**2 + r*(8323596288000.0*nu + 24297540157440.0) - 104186110149937.0)*sp.log(r) - 1.72773095804465e-13*sp.log(r)**2 - 3.45546191608929e-13*sp.log(r) - 5.625059799381501e-12 - 2.98505426338587e-26*(nu*(-19691250647040.0*nu - 118648618352640.0) + 879923036160.0*r**3 + r**2*(4161798144000.0*nu + 12148770078720.0) + r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))/r)*(22295347200.0*d5*nu**2 + 22295347200.0*d5*nu*r - 193226342400.0*d5*nu + 6730497718123.02*nu**3 + 133772083200.0*nu**2*r**2 + 1822680546449.21*nu**2*r + 80059249540278.2*nu**2 + 2589101062873.81*nu*r**2 + 10611661054566.2*nu*r - 12049908701745.2*nu + 5107745331375.71*r**2 + r*(-4804510165749.84*nu - 14024920797448.4) - 39476764256925.6*r - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)*sp.log(r) + 5787938193408.0*sp.log(r)**2 + 275059053208689.0)/(nu*(0.138673301680059*nu**3 - 0.407334209362763*nu**2 + 1.72773095804465e-13*nu*(-133772083200.0*d5 - 378336673173719.0) + 41.38036318916069*nu + 9.57289992450372) + r**3*(0.0231122169466765*nu**2 + 0.447327005983339*nu + 0.882480973482584) - r**2*(-0.314910160672604*nu**2 + 1.72773095804465e-13*nu*(-22295347200.0*d5 - 28676226712040.3) + 3.95116102816545*nu + 9.24365175759969) + r*(1.02417562538494*nu**3 + 1.72773095804465e-13*nu**2*(22295347200.0*d5 + 181275031890860.0) - 23.86712943174367*nu**2 - 1.72773095804465e-13*nu*(193226342400.0*d5 + 406779588496105.0) + 77.77776381023421*nu + 14.9653056988661*(1 - 0.496948781616935*nu)**2 + 32.55749845304421) + r*sp.log(r)**2 + (1.72773095804465e-13*nu*(-19691250647040.0*nu - 118648618352640.0) + 0.152027027027027*r**3 + 1.72773095804465e-13*r**2*(4161798144000.0*nu + 12148770078720.0) + 1.72773095804465e-13*r*(5041721180160.0*nu**2 + 20113376778784.4*nu - 104186110149937.0))*sp.log(r))**2 + (-1.7694999344523e-13*nu**3 - nu**2*(6.65528212130282e-16*d5 + 5.411158067912211e-12) + 4.123597839888195e-12*nu**2 + nu*(5.76791117179578e-15*d5 + 1.214259144898648e-11) - 1.343790503824258e-11*nu + r**2*(-1.19795078183451e-14*nu**2 - 2.3185821498205e-13*nu - 4.57406909331369e-13) + r*(-1.08816006719374e-13*nu**2 + 2.98505426338587e-26*nu*(-44590694400.0*d5 - 57352453424080.6) + 1.36530864571619e-12*nu + 3.194108661397744e-12) - 2.58560219525329e-12*(1 - 0.496948781616935*nu)**2 - (1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu + 7.87985403162254e-14*r**2 + r*(2.48463865861972e-13*nu + 7.25294758367556e-13) - 3.110011922886593e-12)*sp.log(r) - 1.72773095804465e-13*sp.log(r)**2 - 3.45546191608929e-13*sp.log(r) - 5.625059799381501e-12 - (nu*(-5.87794516953465e-13*nu - 3.54172564058391e-12) + 2.62661801054085e-14*r**3 + r**2*(1.24231932930986e-13*nu + 3.62647379183778e-13) + r*(1.50498113036394e-13*nu**2 + 6.00395211045967e-13*nu - 3.110011922886593e-12))/r)*(22295347200.0*d5*nu**2 + 22295347200.0*d5*nu*r - 193226342400.0*d5*nu + 6730497718123.02*nu**3 + 133772083200.0*nu**2*r**2 + 1822680546449.21*nu**2*r + 80059249540278.2*nu**2 + 2589101062873.81*nu*r**2 + 10611661054566.2*nu*r - 12049908701745.2*nu + 5107745331375.71*r**2 + r*(-4804510165749.84*nu - 14024920797448.4) - 39476764256925.6*r - (-5041721180160.0*nu**2 - 25392914995744.3*nu - 879923036160.0*r**2 + r*(-4161798144000.0*nu - 12148770078720.0) + 104186110149937.0)*sp.log(r) + 5787938193408.0*sp.log(r)**2 + 275059053208689.0)/(nu*(0.138673301680058*nu**3 - 0.407334209362761*nu**2 + nu*(-0.0231122169466764*d5 - 65.3663982805854) + 41.3803631891606*nu + 9.57289992450369) + r**3*(0.0231122169466764*nu**2 + 0.447327005983337*nu + 0.882480973482581) - r**2*(-0.314910160672604*nu**2 + nu*(-0.00385203615777941*d5 - 4.9544804650299) + 3.95116102816545*nu + 9.24365175759969) + r*(1.02417562538494*nu**3 + nu**2*(0.00385203615777941*d5 + 31.31944845183701) - 23.86712943174367*nu**2 - nu*(0.0333843133674216*d5 + 70.2805688145384) + 77.77776381023421*nu + 14.9653056988661*(1 - 0.496948781616935*nu)**2 + 32.55749845304421) + r*sp.log(r)**2 + (nu*(-3.40211833455078*nu - 20.49928910570808) + 0.152027027027027*r**3 + r**2*(0.719046749452157*nu + 2.09898061671711) + r*(0.871073776479184*nu**2 + 3.47505037315222*nu - 18.00055679042961))*sp.log(r))**2
    Anons_prmr_prmr = r**4*(10569646080.0*nu/r - nu*(11890851840.0*nu + 5284823040.0*r + 6401556480.0)/r**2)/(241555486248.807*nu**4 + nu**3*(-19973247726.3816*r**2 - 183326040601.257*r - 1331665954115.41) + nu**2*(-275251200.0*a6*(3.0*r + 59.0) + 5221004936.80923*a6 + 9986623863.1908*r**5 - 21624754926.3815*r**4 - 43249509852.7631*r**3 + 14453486679.2811*r**2 + 858447795533.909*r + 1932405227809.08) + 67645734912.0*nu**2*sp.log(r)**2 + nu*(412876800.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-47152926199.7369*r**4 + 29346569199.4739*r**3 + 58693138398.9479*r**2 + 90962161597.8954*r - 232053481604.209) + r*(-6100965289.8411*r**4 + 12201930579.6822*r**3 + 24403861159.3644*r**2 + 48807722318.7288*r + 97615444637.4579) + r*(2777638297.17442*r**4 + 15328743152.888*r**3 + 30657486305.7761*r**2 + 61314972611.552*r + 289702103200.999)) + nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)*sp.log(r) + 13212057600.0*r**5) + r**4*(-7.12916500937039e-13*nu**2 + nu*(7.07598117224818e-15*a6 + 2.70492392545837e-12) + nu*(2.03788257760748e-13*nu + 9.05725590047767e-14*r + 1.09711403318286e-13)*sp.log(r) - r*(-1.71153144062012e-13*nu**2 + 8.65074078357224e-13*nu - 2.26431397511942e-13) - 4.52862795023884e-13)*(39946495452.7632*nu**3 - nu**2*(199732477263.816*r**3 - 259497059116.579*r**2 - 259497059116.578*r + 28906973358.5622) + 135291469824.0*nu**2*sp.log(r)/r**2 - 135291469824.0*nu**2/r**2 - nu*(73987522560.0*nu + 105696460800.0*r**3 + r**2*(142690222080.0*nu + 203654430720.0) + r*(142690222080.0*nu + 203654430720.0) + 135769620480.0)*sp.log(r) - nu*(412876800.0*a6*(12*r**2 + 12.0*r + 8.0) - 403810025539.229*r**3 + 341263457592.265*r**2 + r*(-565835114396.843*r**2 + 176079415196.844*r + 117386276797.895) + r*(-73211583478.0931*r**2 + 73211583478.0931*r + 48807722318.7288) + r*(33331659566.093*r**2 + 91972458917.3279*r + 61314972611.552) + 455017943456.352*r + 402169713056.353) - nu*(-23781703680.0*nu**2 - 58717141288.8419*nu + 26424115200.0*r**4 + r**3*(47563407360.0*nu + 67884810240.0) + r**2*(71345111040.0*nu + 101827215360.0) + r*(73987522560.0*nu + 135769620480.0) + 135769620480.0)/r - nu*(-23781703680.0*nu**2 - 58717141288.8417*nu + 26424115200.0*r**4 + r**3*(47563407360.0*nu + 67884810240.0) + r**2*(71345111040.0*nu + 101827215360.0) + r*(73987522560.0*nu + 135769620480.0) + 135769620480.0)/r + nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)/r**2 - 264241152000.0*r**3)/(nu**4 + nu**3*(-0.0826859618738229*r**2 - 0.758939668264987*r - 5.51287811672293) + nu**2*(-0.00113949471516654*a6*(3.0*r + 59.0) + 0.0216141020760402*a6 + 0.0413429809369115*r**5 - 0.0895229301648219*r**4 - 0.179045860329644*r**3 + 0.0598350586183487*r**2 + 3.5538327399018*r + 7.99983994492537) + 0.280042221199329*nu**2*sp.log(r)**2 + nu*(0.00170924207274981*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-0.195205362262683*r**4 + 0.121489971746062*r**3 + 0.242979943492125*r**2 + 0.37656839432826*r - 0.960663262953956) + r*(-0.025256993267199*r**4 + 0.050513986534398*r**3 + 0.101027973068796*r**2 + 0.202055946137592*r + 0.404111892275185) + r*(0.011498965891064*r**4 + 0.0634584765220323*r**3 + 0.126916953044065*r**2 + 0.253833906088128*r + 1.19931907860954)) + nu*(-0.255362968236103*nu**2 - 5.26911058192953*nu + 0.0218782985311977*r**5 + r**4*(0.0492261716951947*nu + 0.070257988437983) + r**3*(0.0984523433903895*nu + 0.140515976875966) + r**2*(0.153148089718384*nu + 0.281031953751932) + r*(-0.0984523433903895*nu**2 - 0.243079311510077*nu + 0.562063907503864) + 1.82423336800605)*sp.log(r) + 0.054695746327994*r**5)**2 + r**4*(-7.12916500937039e-13*nu**2 + nu*(7.07598117224818e-15*a6 + 2.70492392545837e-12) + nu*(2.03788257760748e-13*nu + 9.05725590047767e-14*r + 1.09711403318286e-13)*sp.log(r) - r*(-1.71153144062012e-13*nu**2 + 8.65074078357224e-13*nu - 2.26431397511942e-13) - 4.52862795023884e-13)*(nu**3*(0.330743847495292*r + 1.51787933652997) - nu**2*(-0.00683696829099924*a6 + 0.413429809369114*r**4 - 0.716183441318576*r**3 - 1.07427516197786*r**2 + 0.239340234473394*r + 7.1076654798036) - 1.12016888479732*nu**2*sp.log(r)/r - nu*(-0.196904686780779*nu**2 - 0.486158623020154*nu + 0.218782985311978*r**4 + 2*r**3*(0.196904686780779*nu + 0.281031953751932) + 2*r**2*(0.295357030171168*nu + 0.421547930627898) + 2*r*(0.306296179436767*nu + 0.562063907503864) + 1.12412781500773)*sp.log(r) - nu*(0.00341848414549962*a6*(4*r**3 + 6.0*r**2 + 8.0*r + 8.0) - 0.417926779277635*r**4 + 0.470924869604984*r**3 + 0.941849739209971*r**2 + 2*r*(-0.780821449050732*r**3 + 0.364469915238185*r**2 + 0.48595988698425*r + 0.37656839432826) + 2*r*(-0.101027973068796*r**3 + 0.151541959603194*r**2 + 0.202055946137592*r + 0.202055946137592) + 2*r*(0.0459958635642561*r**3 + 0.190375429566097*r**2 + 0.253833906088128*r + 0.253833906088128) + 1.66491649310796*r + 1.28553541586154) - nu*(-0.510725936472206*nu**2 - 10.5382211638591*nu + 0.0437565970623954*r**5 + 2*r**4*(0.0492261716951947*nu + 0.070257988437983) + 2*r**3*(0.0984523433903895*nu + 0.140515976875966) + 2*r**2*(0.153148089718384*nu + 0.281031953751932) + 2*r*(-0.0984523433903895*nu**2 - 0.243079311510077*nu + 0.562063907503864) + 3.6484667360121)/r - 0.54695746327994*r**4)*(nu**3*(39946495452.7632*r + 183326040601.257) - nu**2*(-825753600.0*a6 + 49933119315.954*r**4 - 86499019705.5264*r**3 - 129748529558.289*r**2 + 28906973358.5622*r + 858447795533.909) - 135291469824.0*nu**2*sp.log(r)/r - nu*(-23781703680.0*nu**2 - 58717141288.8419*nu + 26424115200.0*r**4 + r**3*(47563407360.0*nu + 67884810240.0) + r**2*(71345111040.0*nu + 101827215360.0) + r*(73987522560.0*nu + 135769620480.0) + 135769620480.0)*sp.log(r) - nu*(412876800.0*a6*(4*r**3 + 6.0*r**2 + 8.0*r + 8.0) - 50476253192.4036*r**4 + 56877242932.0441*r**3 + 113754485864.088*r**2 + r*(-188611704798.948*r**3 + 88039707598.4219*r**2 + 117386276797.895*r + 90962161597.8954) + r*(-24403861159.3644*r**3 + 36605791739.0466*r**2 + 48807722318.7288*r + 48807722318.7288) + r*(11110553188.6977*r**3 + 45986229458.6641*r**2 + 61314972611.552*r + 61314972611.552) + 201084856528.177*r + 155264066234.248) - nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)/r - 66060288000.0*r**4)/(nu**4 + nu**3*(-0.0826859618738229*r**2 - 0.758939668264987*r - 5.51287811672293) + nu**2*(-0.00113949471516654*a6*(3.0*r + 59.0) + 0.0216141020760402*a6 + 0.0413429809369115*r**5 - 0.0895229301648219*r**4 - 0.179045860329644*r**3 + 0.0598350586183487*r**2 + 3.5538327399018*r + 7.99983994492537) + 0.280042221199329*nu**2*sp.log(r)**2 + nu*(0.00170924207274981*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-0.195205362262683*r**4 + 0.121489971746062*r**3 + 0.242979943492125*r**2 + 0.37656839432826*r - 0.960663262953956) + r*(-0.025256993267199*r**4 + 0.050513986534398*r**3 + 0.101027973068796*r**2 + 0.202055946137592*r + 0.404111892275185) + r*(0.011498965891064*r**4 + 0.0634584765220323*r**3 + 0.126916953044065*r**2 + 0.253833906088128*r + 1.19931907860954)) + nu*(-0.255362968236103*nu**2 - 5.26911058192953*nu + 0.0218782985311977*r**5 + r**4*(0.0492261716951947*nu + 0.070257988437983) + r**3*(0.0984523433903895*nu + 0.140515976875966) + r**2*(0.153148089718384*nu + 0.281031953751932) + r*(-0.0984523433903895*nu**2 - 0.243079311510077*nu + 0.562063907503864) + 1.82423336800605)*sp.log(r) + 0.054695746327994*r**5)**3 + r**4*(1.71153144062012e-13*nu**2 + 9.05725590047768e-14*nu*sp.log(r) - 8.65074078357225e-13*nu + 1.71382387488185e-23*nu*(11890851840.0*nu + 5284823040.0*r + 6401556480.0)/r + 2.26431397511942e-13)*(nu**3*(39946495452.7632*r + 183326040601.257) - nu**2*(-825753600.0*a6 + 49933119315.954*r**4 - 86499019705.526*r**3 - 129748529558.289*r**2 + 28906973358.5622*r + 858447795533.909) - 135291469824.0*nu**2*sp.log(r)/r - nu*(-23781703680.0*nu**2 - 58717141288.8417*nu + 26424115200.0*r**4 + r**3*(47563407360.0*nu + 67884810240.0) + r**2*(71345111040.0*nu + 101827215360.0) + r*(73987522560.0*nu + 135769620480.0) + 135769620480.0)*sp.log(r) - nu*(412876800.0*a6*(4*r**3 + 6.0*r**2 + 8.0*r + 8.0) - 50476253192.4036*r**4 + 56877242932.0441*r**3 + 113754485864.088*r**2 + r*(-188611704798.948*r**3 + 88039707598.4214*r**2 + 117386276797.896*r + 90962161597.8954) + r*(-24403861159.3644*r**3 + 36605791739.0466*r**2 + 48807722318.7288*r + 48807722318.7288) + r*(11110553188.6977*r**3 + 45986229458.6641*r**2 + 61314972611.552*r + 61314972611.552) + 201084856528.176*r + 155264066234.249) - nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)/r - 66060288000.0*r**4)/(nu**4 + nu**3*(-0.0826859618738229*r**2 - 0.758939668264986*r - 5.51287811672291) + nu**2*(-0.00113949471516654*a6*(3.0*r + 59.0) + 0.0216141020760402*a6 + 0.0413429809369115*r**5 - 0.0895229301648218*r**4 - 0.179045860329644*r**3 + 0.0598350586183488*r**2 + 3.5538327399018*r + 7.99983994492539) + 0.280042221199329*nu**2*sp.log(r)**2 + nu*(0.00170924207274981*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 4.139835594419e-12*r*(-47152926199.7369*r**4 + 29346569199.4739*r**3 + 58693138398.9479*r**2 + 90962161597.8954*r - 232053481604.209) + 4.139835594419e-12*r*(-6100965289.8411*r**4 + 12201930579.6822*r**3 + 24403861159.3644*r**2 + 48807722318.7288*r + 97615444637.4579) + 4.139835594419e-12*r*(2777638297.17442*r**4 + 15328743152.888*r**3 + 30657486305.7761*r**2 + 61314972611.552*r + 289702103200.999)) + nu*(-0.255362968236102*nu**2 - 5.26911058192952*nu + 0.0218782985311976*r**5 + 4.139835594419e-12*r**4*(11890851840.0*nu + 16971202560.0) + 4.139835594419e-12*r**3*(23781703680.0*nu + 33942405120.0) + 4.139835594419e-12*r**2*(36993761280.0*nu + 67884810240.0) + 4.139835594419e-12*r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 1.82423336800605)*sp.log(r) + 0.054695746327994*r**5)**2 + r**4*(1.71153144062012e-13*nu**2 + 9.05725590047767e-14*nu*sp.log(r) - 8.65074078357224e-13*nu + nu*(2.03788257760748e-13*nu + 9.05725590047767e-14*r + 1.09711403318286e-13)/r + 2.26431397511942e-13)*(nu**3*(39946495452.7632*r + 183326040601.257) - nu**2*(-825753600.0*a6 + 49933119315.954*r**4 - 86499019705.5264*r**3 - 129748529558.289*r**2 + 28906973358.5622*r + 858447795533.909) - 135291469824.0*nu**2*sp.log(r)/r - nu*(-23781703680.0*nu**2 - 58717141288.8419*nu + 26424115200.0*r**4 + r**3*(47563407360.0*nu + 67884810240.0) + r**2*(71345111040.0*nu + 101827215360.0) + r*(73987522560.0*nu + 135769620480.0) + 135769620480.0)*sp.log(r) - nu*(412876800.0*a6*(4*r**3 + 6.0*r**2 + 8.0*r + 8.0) - 50476253192.4036*r**4 + 56877242932.0441*r**3 + 113754485864.088*r**2 + r*(-188611704798.948*r**3 + 88039707598.4219*r**2 + 117386276797.895*r + 90962161597.8954) + r*(-24403861159.3644*r**3 + 36605791739.0466*r**2 + 48807722318.7288*r + 48807722318.7288) + r*(11110553188.6977*r**3 + 45986229458.6641*r**2 + 61314972611.552*r + 61314972611.552) + 201084856528.177*r + 155264066234.248) - nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)/r - 66060288000.0*r**4)/(nu**4 + nu**3*(-0.0826859618738229*r**2 - 0.758939668264987*r - 5.51287811672293) + nu**2*(-0.00113949471516654*a6*(3.0*r + 59.0) + 0.0216141020760402*a6 + 0.0413429809369115*r**5 - 0.0895229301648219*r**4 - 0.179045860329644*r**3 + 0.0598350586183487*r**2 + 3.5538327399018*r + 7.99983994492537) + 0.280042221199329*nu**2*sp.log(r)**2 + nu*(0.00170924207274981*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-0.195205362262683*r**4 + 0.121489971746062*r**3 + 0.242979943492125*r**2 + 0.37656839432826*r - 0.960663262953956) + r*(-0.025256993267199*r**4 + 0.050513986534398*r**3 + 0.101027973068796*r**2 + 0.202055946137592*r + 0.404111892275185) + r*(0.011498965891064*r**4 + 0.0634584765220323*r**3 + 0.126916953044065*r**2 + 0.253833906088128*r + 1.19931907860954)) + nu*(-0.255362968236103*nu**2 - 5.26911058192953*nu + 0.0218782985311977*r**5 + r**4*(0.0492261716951947*nu + 0.070257988437983) + r**3*(0.0984523433903895*nu + 0.140515976875966) + r**2*(0.153148089718384*nu + 0.281031953751932) + r*(-0.0984523433903895*nu**2 - 0.243079311510077*nu + 0.562063907503864) + 1.82423336800605)*sp.log(r) + 0.054695746327994*r**5)**2 + r**3*(-2.85166600374816e-12*nu**2 + 4*nu*(7.07598117224818e-15*a6 + 2.70492392545837e-12) + 4*nu*(2.03788257760748e-13*nu + 9.05725590047767e-14*r + 1.09711403318286e-13)*sp.log(r) - 4*r*(-1.71153144062012e-13*nu**2 + 8.65074078357224e-13*nu - 2.26431397511942e-13) - 1.81145118009554e-12)*(nu**3*(39946495452.7632*r + 183326040601.257) - nu**2*(-825753600.0*a6 + 49933119315.954*r**4 - 86499019705.5264*r**3 - 129748529558.289*r**2 + 28906973358.5622*r + 858447795533.909) - 135291469824.0*nu**2*sp.log(r)/r - nu*(-23781703680.0*nu**2 - 58717141288.8419*nu + 26424115200.0*r**4 + r**3*(47563407360.0*nu + 67884810240.0) + r**2*(71345111040.0*nu + 101827215360.0) + r*(73987522560.0*nu + 135769620480.0) + 135769620480.0)*sp.log(r) - nu*(412876800.0*a6*(4*r**3 + 6.0*r**2 + 8.0*r + 8.0) - 50476253192.4036*r**4 + 56877242932.0441*r**3 + 113754485864.088*r**2 + r*(-188611704798.948*r**3 + 88039707598.4219*r**2 + 117386276797.895*r + 90962161597.8954) + r*(-24403861159.3644*r**3 + 36605791739.0466*r**2 + 48807722318.7288*r + 48807722318.7288) + r*(11110553188.6977*r**3 + 45986229458.6641*r**2 + 61314972611.552*r + 61314972611.552) + 201084856528.177*r + 155264066234.248) - nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)/r - 66060288000.0*r**4)/(nu**4 + nu**3*(-0.0826859618738229*r**2 - 0.758939668264987*r - 5.51287811672293) + nu**2*(-0.00113949471516654*a6*(3.0*r + 59.0) + 0.0216141020760402*a6 + 0.0413429809369115*r**5 - 0.0895229301648219*r**4 - 0.179045860329644*r**3 + 0.0598350586183487*r**2 + 3.5538327399018*r + 7.99983994492537) + 0.280042221199329*nu**2*sp.log(r)**2 + nu*(0.00170924207274981*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-0.195205362262683*r**4 + 0.121489971746062*r**3 + 0.242979943492125*r**2 + 0.37656839432826*r - 0.960663262953956) + r*(-0.025256993267199*r**4 + 0.050513986534398*r**3 + 0.101027973068796*r**2 + 0.202055946137592*r + 0.404111892275185) + r*(0.011498965891064*r**4 + 0.0634584765220323*r**3 + 0.126916953044065*r**2 + 0.253833906088128*r + 1.19931907860954)) + nu*(-0.255362968236103*nu**2 - 5.26911058192953*nu + 0.0218782985311977*r**5 + r**4*(0.0492261716951947*nu + 0.070257988437983) + r**3*(0.0984523433903895*nu + 0.140515976875966) + r**2*(0.153148089718384*nu + 0.281031953751932) + r*(-0.0984523433903895*nu**2 - 0.243079311510077*nu + 0.562063907503864) + 1.82423336800605)*sp.log(r) + 0.054695746327994*r**5)**2 + r**3*(-2.85166600374815e-12*nu**2 + 1.71382387488185e-23*nu*(1651507200.0*a6 + 631318997267.405) + 1.71382387488185e-23*nu*(47563407360.0*nu + 21139292160.0*r + 25606225920.0)*sp.log(r) - 1.71382387488185e-23*r*(-39946495452.7632*nu**2 + 201905012769.614*nu - 52848230400.0) - 1.81145118009554e-12)*(nu**3*(39946495452.7632*r + 183326040601.257) - nu**2*(-825753600.0*a6 + 49933119315.954*r**4 - 86499019705.526*r**3 - 129748529558.289*r**2 + 28906973358.5622*r + 858447795533.909) - 135291469824.0*nu**2*sp.log(r)/r - nu*(-23781703680.0*nu**2 - 58717141288.8417*nu + 26424115200.0*r**4 + r**3*(47563407360.0*nu + 67884810240.0) + r**2*(71345111040.0*nu + 101827215360.0) + r*(73987522560.0*nu + 135769620480.0) + 135769620480.0)*sp.log(r) - nu*(412876800.0*a6*(4*r**3 + 6.0*r**2 + 8.0*r + 8.0) - 50476253192.4036*r**4 + 56877242932.0441*r**3 + 113754485864.088*r**2 + r*(-188611704798.948*r**3 + 88039707598.4214*r**2 + 117386276797.896*r + 90962161597.8954) + r*(-24403861159.3644*r**3 + 36605791739.0466*r**2 + 48807722318.7288*r + 48807722318.7288) + r*(11110553188.6977*r**3 + 45986229458.6641*r**2 + 61314972611.552*r + 61314972611.552) + 201084856528.176*r + 155264066234.249) - nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)/r - 66060288000.0*r**4)/(nu**4 + nu**3*(-0.0826859618738229*r**2 - 0.758939668264986*r - 5.51287811672291) + nu**2*(-0.00113949471516654*a6*(3.0*r + 59.0) + 0.0216141020760402*a6 + 0.0413429809369115*r**5 - 0.0895229301648218*r**4 - 0.179045860329644*r**3 + 0.0598350586183488*r**2 + 3.5538327399018*r + 7.99983994492539) + 0.280042221199329*nu**2*sp.log(r)**2 + nu*(0.00170924207274981*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 4.139835594419e-12*r*(-47152926199.7369*r**4 + 29346569199.4739*r**3 + 58693138398.9479*r**2 + 90962161597.8954*r - 232053481604.209) + 4.139835594419e-12*r*(-6100965289.8411*r**4 + 12201930579.6822*r**3 + 24403861159.3644*r**2 + 48807722318.7288*r + 97615444637.4579) + 4.139835594419e-12*r*(2777638297.17442*r**4 + 15328743152.888*r**3 + 30657486305.7761*r**2 + 61314972611.552*r + 289702103200.999)) + nu*(-0.255362968236102*nu**2 - 5.26911058192952*nu + 0.0218782985311976*r**5 + 4.139835594419e-12*r**4*(11890851840.0*nu + 16971202560.0) + 4.139835594419e-12*r**3*(23781703680.0*nu + 33942405120.0) + 4.139835594419e-12*r**2*(36993761280.0*nu + 67884810240.0) + 4.139835594419e-12*r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 1.82423336800605)*sp.log(r) + 0.054695746327994*r**5)**2 + r**3*(39946495452.7632*nu**2 + 21139292160.0*nu*sp.log(r) - 201905012769.614*nu + 4*nu*(11890851840.0*nu + 5284823040.0*r + 6401556480.0)/r + 52848230400.0)/(241555486248.807*nu**4 + nu**3*(-19973247726.3816*r**2 - 183326040601.257*r - 1331665954115.41) + nu**2*(-275251200.0*a6*(3.0*r + 59.0) + 5221004936.80923*a6 + 9986623863.1908*r**5 - 21624754926.3815*r**4 - 43249509852.7631*r**3 + 14453486679.2811*r**2 + 858447795533.909*r + 1932405227809.08) + 67645734912.0*nu**2*sp.log(r)**2 + nu*(412876800.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-47152926199.7369*r**4 + 29346569199.4739*r**3 + 58693138398.9479*r**2 + 90962161597.8954*r - 232053481604.209) + r*(-6100965289.8411*r**4 + 12201930579.6822*r**3 + 24403861159.3644*r**2 + 48807722318.7288*r + 97615444637.4579) + r*(2777638297.17442*r**4 + 15328743152.888*r**3 + 30657486305.7761*r**2 + 61314972611.552*r + 289702103200.999)) + nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)*sp.log(r) + 13212057600.0*r**5) + r**3*(39946495452.7632*nu**2 + 21139292160.0*nu*sp.log(r) - 201905012769.614*nu + nu*(47563407360.0*nu + 21139292160.0*r + 25606225920.0)/r + 52848230400.0)/(241555486248.807*nu**4 + nu**3*(-19973247726.3816*r**2 - 183326040601.257*r - 1331665954115.41) + nu**2*(-275251200.0*a6*(3.0*r + 59.0) + 5221004936.80923*a6 + 9986623863.1908*r**5 - 21624754926.3815*r**4 - 43249509852.7631*r**3 + 14453486679.2811*r**2 + 858447795533.909*r + 1932405227809.08) + 67645734912.0*nu**2*sp.log(r)**2 + nu*(412876800.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-47152926199.7369*r**4 + 29346569199.4739*r**3 + 58693138398.9479*r**2 + 90962161597.8954*r - 232053481604.209) + r*(-6100965289.8411*r**4 + 12201930579.6822*r**3 + 24403861159.3644*r**2 + 48807722318.7288*r + 97615444637.4579) + r*(2777638297.17442*r**4 + 15328743152.888*r**3 + 30657486305.7761*r**2 + 61314972611.552*r + 289702103200.999)) + nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)*sp.log(r) + 13212057600.0*r**5) + r**2*(-499176031833.156*nu**2 + 3*nu*(1651507200.0*a6 + 631318997267.405) + 3*nu*(47563407360.0*nu + 21139292160.0*r + 25606225920.0)*sp.log(r) - 3*r*(-39946495452.7632*nu**2 + 201905012769.614*nu - 52848230400.0) - 317089382400.0)/(241555486248.807*nu**4 + nu**3*(-19973247726.3816*r**2 - 183326040601.257*r - 1331665954115.41) + nu**2*(-275251200.0*a6*(3.0*r + 59.0) + 5221004936.80923*a6 + 9986623863.1908*r**5 - 21624754926.3815*r**4 - 43249509852.7631*r**3 + 14453486679.2811*r**2 + 858447795533.909*r + 1932405227809.08) + 67645734912.0*nu**2*sp.log(r)**2 + nu*(412876800.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + r*(-47152926199.7369*r**4 + 29346569199.4739*r**3 + 58693138398.9479*r**2 + 90962161597.8954*r - 232053481604.209) + r*(-6100965289.8411*r**4 + 12201930579.6822*r**3 + 24403861159.3644*r**2 + 48807722318.7288*r + 97615444637.4579) + r*(2777638297.17442*r**4 + 15328743152.888*r**3 + 30657486305.7761*r**2 + 61314972611.552*r + 289702103200.999)) + nu*(-61684325962.2103*nu**2 - 1272782568716.72*nu + 5284823040.0*r**5 + r**4*(11890851840.0*nu + 16971202560.0) + r**3*(23781703680.0*nu + 33942405120.0) + r**2*(36993761280.0*nu + 67884810240.0) + r*(-23781703680.0*nu**2 - 58717141288.8417*nu + 135769620480.0) + 440653578240.0)*sp.log(r) + 13212057600.0*r**5)
    xi_prmr_prmr = 8*sp.sqrt(Dnons)*ap**4*u**2*u_prmr*u_prmr*(Anons + ap**2*u**2)/(ap**2*u**2 + 1)**3 - sp.sqrt(Dnons)*ap**2*u*u_prmr*(2*Anons_prmr + 4*ap**2*u*u_prmr)/(ap**2*u**2 + 1)**2 - sp.sqrt(Dnons)*ap**2*u*u_prmr_prmr*(2*Anons + 2*ap**2*u**2)/(ap**2*u**2 + 1)**2 - 2*sp.sqrt(Dnons)*ap**2*u*u_prmr*(Anons_prmr + 2*ap**2*u*u_prmr)/(ap**2*u**2 + 1)**2 - sp.sqrt(Dnons)*ap**2*u_prmr*u_prmr*(2*Anons + 2*ap**2*u**2)/(ap**2*u**2 + 1)**2 + sp.sqrt(Dnons)*(Anons_prmr_prmr + 2*ap**2*u*u_prmr_prmr + 2*ap**2*u_prmr*u_prmr)/(ap**2*u**2 + 1) - 4*Dnons_prmr*ap**2*u*u_prmr*(Anons + ap**2*u**2)/(sp.sqrt(Dnons)*(2*ap**2*u**2 + 2)**2) + Dnons_prmr*(Anons_prmr + 2*ap**2*u*u_prmr)/(sp.sqrt(Dnons)*(2*ap**2*u**2 + 2)) + Dnons_prmr_prmr*(Anons + ap**2*u**2)/(sp.sqrt(Dnons)*(2*ap**2*u**2 + 2)) - Dnons_prmr*ap**2*u*u_prmr*(Anons + ap**2*u**2)/(sp.sqrt(Dnons)*(ap**2*u**2 + 1)**2) + Dnons_prmr*(Anons_prmr + 2*ap**2*u*u_prmr)/(sp.sqrt(Dnons)*(2*ap**2*u**2 + 2)) - Dnons_prmr*Dnons_prmr*(Anons + ap**2*u**2)/(Dnons**(3/2)*(4*ap**2*u**2 + 4))
    pr_prmr_prmr = -prstar*xi_prmr_prmr/xi**2 + 2*prstar*xi_prmr*xi_prmr/xi**3
    QalignSS_prmr_prmr = pr**4*(4*am**2*(-45*nu**2/8 + 225*nu/32 - 45/32) - 4*am*ap*delta*(15/16 - 135*nu/8) + 4*ap**2*(-15*nu**2 + 495*nu/32 + 75/32))/r**5 - pr**3*pr_prmr*(3*am**2*(-15*nu**2/2 + 75*nu/8 - 15/8) + 3*am*ap*delta*(45*nu/2 - 5/4) + 3*ap**2*(-20*nu**2 + 165*nu/8 + 25/8))/r**4 + pr**3*pr_prmr_prmr*(am**2*(-15*nu**2/2 + 75*nu/8 - 15/8) + am*ap*delta*(45*nu/2 - 5/4) + ap**2*(-20*nu**2 + 165*nu/8 + 25/8))/r**3 + pr**3*pr_prmr*(-4*am**2*(-45*nu**2/8 + 225*nu/32 - 45/32) + 4*am*ap*delta*(15/16 - 135*nu/8) - 4*ap**2*(-15*nu**2 + 495*nu/32 + 75/32))/r**4 + pr**2*pr_prmr*pr_prmr*(3*am**2*(-15*nu**2/2 + 75*nu/8 - 15/8) + 3*am*ap*delta*(45*nu/2 - 5/4) + 3*ap**2*(-20*nu**2 + 165*nu/8 + 25/8))/r**3
    BnpalignSS_prmr_prmr = -(4*am**2*(9/16 - 9*nu/4) + 63*am*ap*delta/2 - 4*ap**2*(9*nu + 135/16))/r**5 + (5*am**2*(nu**2/4 + 115*nu/16 - 37/16) + 5*am*ap*delta*(13*nu/4 + 449/8) - 5*ap**2*(1171*nu/16 + 861/16))/r**6
    AalignSS_prmr_prmr = (-5*am**2*(-2*nu - 1/2) - 25*am*ap*delta + 45*ap**2/2)/r**6 + (6*am**2*(105*nu**2/16 - 405*nu/64 - 45/64) + 6*am*ap*delta*(585/32 - 195*nu/16) + 6*ap**2*(-875*nu/64 - 1125/64))/r**7
    Qalign_prmr_prmr = QalignSS_prmr_prmr + Qnos_prmr_prmr
    Balignnp_prmr_prmr = Anons*Dnons_prmr_prmr + Anons_prmr*Dnons_prmr + Anons_prmr_prmr*Dnons + Anons_prmr*Dnons_prmr + BnpalignSS_prmr_prmr + 2*ap**2*u*u_prmr_prmr + 2*ap**2*u_prmr*u_prmr
    Bkerreqnp_prmr_prmr = (-1 - 2/r)*(-4*ap**2/r**3 - 2)/(ap**2*(1 + 2/r) + r**2)**2 + (-1 - 2/r)*(2*ap**2/r**2 - 2*r)*(4*ap**2/r**2 - 4*r)/(ap**2*(1 + 2/r) + r**2)**3 + 2*(4*ap**2/r**2 - 4*r)/(r**2*(ap**2*(1 + 2/r) + r**2)**2) - 4/(r**3*(ap**2*(1 + 2/r) + r**2))
    Aalign_prmr_prmr = (ap**2*(-6 - 12/r)/r**4 - 12*ap**2/r**5)*(AalignSS + Anons + ap**2*u**2)/(ap**2*(1 + 2/r)/r**2 + 1)**2 + (ap**2*(2 + 4/r)/r**3 + 2*ap**2/r**4)*(ap**2*(4 + 8/r)/r**3 + 4*ap**2/r**4)*(AalignSS + Anons + ap**2*u**2)/(ap**2*(1 + 2/r)/r**2 + 1)**3 + (ap**2*(2 + 4/r)/r**3 + 2*ap**2/r**4)*(AalignSS_prmr + Anons_prmr + 2*ap**2*u*u_prmr)/(ap**2*(1 + 2/r)/r**2 + 1)**2 + (ap**2*(2 + 4/r)/r**3 + 2*ap**2/r**4)*(AalignSS_prmr + Anons_prmr + 2*ap**2*u*u_prmr)/(ap**2*(1 + 2/r)/r**2 + 1)**2 + (AalignSS_prmr_prmr + Anons_prmr_prmr + 2*ap**2*u*u_prmr_prmr + 2*ap**2*u_prmr*u_prmr)/(ap**2*(1 + 2/r)/r**2 + 1)
    Galigna3_prmr_prmr = pphi*(3*am*ap**2*delta - 3*ap**3)/(2*r**4)
    SOcalib_prmr_prmr = 3*ap*dSO*nu*pphi*u**2*u_prmr_prmr + 6*ap*dSO*nu*pphi*u*u_prmr*u_prmr
    Heven_prmr_prmr = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2)*(-Balignnp_prmr*pr**2 + 2*Bkerreqnp*ap**2*pphi**2/r**3 - Bkerreqnp_prmr*ap**2*pphi**2/r**2 - Qalign_prmr + 2*pphi**2/r**3 + pr*pr_prmr*(-2*Balignnp - 2))/(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)**2) + sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(2*Balignnp_prmr*pr*pr_prmr + Balignnp_prmr_prmr*pr**2 + 2*Balignnp_prmr*pr*pr_prmr + 6*Bkerreqnp*ap**2*pphi**2/r**4 - 2*Bkerreqnp_prmr*ap**2*pphi**2/r**3 + Bkerreqnp_prmr_prmr*ap**2*pphi**2/r**2 - 2*Bkerreqnp_prmr*ap**2*pphi**2/r**3 + Qalign_prmr_prmr + 6*pphi**2/r**4 + pr*pr_prmr_prmr*(2*Balignnp + 2) + pr_prmr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2 + Aalign_prmr*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2)/(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)) - Aalign_prmr*sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2)/(Aalign**2*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)) + sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2)*(Aalign*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2)/(Aalign**2*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)**2)
    Hodd_prmr_prmr = -6*r*(Galigna3 + SOcalib + pphi*(am*delta*gam + ap*gap))/(ap**2*(r + 2) + r**3)**2 + (-2*ap**2 - 6*r**2)*(-ap**2 - 3*r**2)*(Galigna3 + SOcalib + pphi*(am*delta*gam + ap*gap))/(ap**2*(r + 2) + r**3)**3 + (-ap**2 - 3*r**2)*(Galigna3_prmr + SOcalib_prmr + pphi*(am*delta*gam_prmr + ap*gap_prmr))/(ap**2*(r + 2) + r**3)**2 + (-ap**2 - 3*r**2)*(Galigna3_prmr + SOcalib_prmr + pphi*(am*delta*gam_prmr + ap*gap_prmr))/(ap**2*(r + 2) + r**3)**2 + (Galigna3_prmr_prmr + SOcalib_prmr_prmr + pphi*(am*delta*gam_prmr_prmr + ap*gap_prmr_prmr))/(ap**2*(r + 2) + r**3)
    Heff_prmr_prmr = Heven_prmr_prmr + Hodd_prmr_prmr
    Hreal_prmr_prmr = -Heff_prmr*Heff_prmr*nu**2/(nu*(2*Heff - 2) + 1)**(3/2) + Heff_prmr_prmr*nu/sp.sqrt(nu*(2*Heff - 2) + 1)
    u = 1/r
    M = m1+m2
    delta = (m1-m2)/M
    nu = m1*m2/(M**2)
    gam = (sp.Rational(1,4)+(pphi**2/r**2)*(sp.Rational(15,32)-sp.Rational(9,32)*nu)+(1/r)*(sp.Rational(11,32)*nu+sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(75,256)*nu**2-sp.Rational(45,128)*nu-sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(613,768)*nu**2-sp.Rational(35,128)*nu-sp.Rational(59,256))+(1/r**2)*(sp.Rational(103,192)*nu**2-sp.Rational(1,32)*nu+sp.Rational(5,64)))
    gap = (sp.Rational(7,4)+(pphi**2/r**2)*(-sp.Rational(45,32)*nu-sp.Rational(15,32))+(1/r)*(sp.Rational(23,32)*nu-sp.Rational(3,32))+(pphi**4/r**4)*(sp.Rational(345,256)*nu**2+sp.Rational(75,128)*nu+sp.Rational(105,256))+(pphi**2/r**3)*(-sp.Rational(1591,768)*nu**2-sp.Rational(267,128)*nu+sp.Rational(59,256))+(1/r**2)*(sp.Rational(109,192)*nu**2-sp.Rational(177,32)*nu-sp.Rational(5,64)))
    am = (m1*chi1-m2*chi2)/M
    ap = (m1*chi1+m2*chi2)/M
    Qnos = (0.121954868780449*nu*prstar**8/r+prstar**6*(6.0*nu**3-5.4*nu**2-2.78300763695006*nu)/r**2+prstar**4*(10.0*nu**3-131.0*nu**2+92.7110442849544*nu)/r**3)+(prstar**8*(-6.0*nu**4+3.42857142857143*nu**3+3.33842023648322*nu**2+1.38977750996128*nu)/r**2+prstar**6*(-14.0*nu**4+188.0*nu**3-89.5298327361234*nu**2-33.9782122170436*nu)/r**3+prstar**4*(602.318540416564*nu**3+nu**2*(118.4*sp.log(r)-1796.13660498019)+nu*(452.542166996693-51.6952380952381*sp.log(r)))/r**4)+(1.48275342024365*nu*prstar**8/r**2.5-11.3175085791863*nu*prstar**6/r**3.5+147.443752990146*nu*prstar**4/r**4.5)+prstar**4*(-6.0*nu**2+8.0*nu)/r**2
    d5 = 0
    Dnons = r*(6730497718123.02*nu**3+22295347200.0*nu**2*d5+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+22295347200.0*nu*d5*r-193226342400.0*nu*d5+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2-326837426.241486*r*(14700.0*nu+42911.0)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2-283115520.0*r*(14700.0*nu+42911.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(55296.0*nu*(14515200.0*nu**3-42636451.6032331*nu**2-7680.0*nu*(315.0*d5+890888.810272497)+4331361844.61149*nu+1002013764.01019)-967680.0*r**3*(-138240.0*nu**2-2675575.66847905*nu-5278341.3229329)-9216.0*r**2*(-197773496.793534*nu**2-7680.0*nu*(315.0*d5+405152.309729121)+2481453539.84635*nu+5805304367.87913)+r*(5927865218923.02*nu**3+70778880.0*nu**2*(315.0*d5+2561145.80918574)-138141470005001.0*nu**2-4718592.0*nu*(40950.0*d5+86207832.4415642)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(-1698693120.0*nu*(11592.0*nu+69847.0)+879923036160.0*r**3+283115520.0*r**2*(14700.0*nu+42911.0)+49152.0*r*(102574080.0*nu**2+409207698.136075*nu-2119671837.36038))*sp.log(r))
    Anons = 7680.0*r**4*(-5416406.59541186*nu**2+28.0*nu*(1920.0*a6+733955.307463037)+2048.0*nu*(756.0*nu+336.0*r+407.0)*sp.log(r)-7.0*r*(-185763.092693281*nu**2+938918.400156317*nu-245760.0)-3440640.0)/(241555486248.807*nu**4+1120.0*nu**3*(-17833256.898555*r**2-163683964.822551*r-1188987459.03162)+7.0*nu**2*(-39321600.0*a6*(3.0*r+59.0)+745857848.115604*a6+1426660551.8844*r**5-3089250703.76879*r**4-6178501407.53758*r**3+2064783811.32587*r**2+122635399361.987*r+276057889687.011)+67645734912.0*nu**2*sp.log(r)**2+53760.0*nu*(7680.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+128.0*r*(-6852.34813868015*r**4+4264.6962773603*r**3+8529.39255472061*r**2+13218.7851094412*r-33722.4297811176)+113485.217444961*r*(-r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+148.04406601634*r*(349.0*r**4+1926.0*r**3+3852.0*r**2+7704.0*r+36400.0))+32768.0*nu*(-1882456.23663972*nu**2-38842241.4769507*nu+161280.0*r**5+480.0*r**4*(756.0*nu+1079.0)+960.0*r**3*(756.0*nu+1079.0)+1920.0*r**2*(588.0*nu+1079.0)+240.0*r*(-3024.0*nu**2-7466.27061066206*nu+17264.0)+13447680.0)*sp.log(r)+13212057600.0*r**5)
    xi = sp.sqrt(Dnons)*(Anons+ap**2*u*u)/(1+ap**2*u*u)
    pr = prstar/xi
    QalignSS = ((pr**4)/(r**3))*(ap**2*(-5*nu*nu+nu*sp.Rational(165,32)+sp.Rational(25,32))+delta*ap*am*(nu*sp.Rational(45,8)-sp.Rational(5,16))+am**2*(-nu*nu*sp.Rational(15,8)+nu*sp.Rational(75,32)-sp.Rational(15,32)))
    BnpalignSS = ((1/r**3)*(ap**2*(3*nu+sp.Rational(45,16))-delta*ap*am*sp.Rational(21,8)+am**2*(nu*sp.Rational(3,4)-sp.Rational(3,16)))+(1/r**4)*(ap**2*(-nu*sp.Rational(1171,64)-sp.Rational(861,64))+delta*ap*am*(nu*sp.Rational(13,16)+sp.Rational(449,32))+am**2*(nu*nu*sp.Rational(1,16)+nu*sp.Rational(115,64)-sp.Rational(37,64))))
    AalignSS = ((1/r**4)*(ap**2*sp.Rational(9,8)-delta*ap*am*sp.Rational(5,4)+am**2*(nu*sp.Rational(1,2)+sp.Rational(1,8)))+(1/r**5)*(ap**2*(-nu*sp.Rational(175,64)-sp.Rational(225,64))+delta*ap*am*(-nu*sp.Rational(39,16)+sp.Rational(117,32))+am**2*(nu*nu*sp.Rational(21,16)-nu*sp.Rational(81,64)-sp.Rational(9,64))))
    Qalign = Qnos+QalignSS
    Balignnp = -1+ap**2*u*u+Anons*Dnons+BnpalignSS
    Bkerreqnp = -(1+2/r)/(r**2+ap**2*(1+2/r))
    Aalign = (ap**2*u*u+Anons+AalignSS)/(1+ap**2*(1+2/r)/(r**2))
    Galigna3 = pphi*(delta*am*ap**2-ap**3)/(4*r**2)
    SOcalib = nu*dSO*ap*pphi*(u**3)
    Heven = sp.sqrt(Aalign*(1+pphi*pphi/r**2+(1+Balignnp)*pr*pr+Bkerreqnp*pphi*pphi*ap**2/r**2+Qalign))
    Hodd = (pphi*(gap*ap+delta*gam*am)+SOcalib+Galigna3)/(r**3+ap**2*(r+2))
    Heff = Hodd+Heven
    Hreal = sp.sqrt(1+2*nu*(Heff-1))
    u_prmr = -1/r**2
    gam_prmr = -pphi**4*(75*nu**2/64-45*nu/32-105/64)/r**5+pphi**2*(9*nu/16-15/16)/r**3-pphi**2*(-613*nu**2/256-105*nu/128-177/256)/r**4-(11*nu/32+3/32)/r**2-(103*nu**2/96-nu/16+5/32)/r**3
    gap_prmr = -pphi**4*(345*nu**2/64+75*nu/32+105/64)/r**5-pphi**2*(-45*nu/16-15/16)/r**3-pphi**2*(-1591*nu**2/256-801*nu/128+177/256)/r**4-(23*nu/32-3/32)/r**2-(109*nu**2/96-177*nu/16-5/32)/r**3
    Qnos_prmr = -3.70688355060913*nu*prstar**8/r**3.5-0.121954868780449*nu*prstar**8/r**2+39.6112800271521*nu*prstar**6/r**4.5-663.496888455657*nu*prstar**4/r**5.5-prstar**8*(-12.0*nu**4+6.85714285714286*nu**3+6.67684047296644*nu**2+2.77955501992256*nu)/r**3-prstar**6*(12.0*nu**3-10.8*nu**2-5.56601527390012*nu)/r**3-prstar**6*(-42.0*nu**4+564.0*nu**3-268.58949820837*nu**2-101.934636651131*nu)/r**4-prstar**4*(-12.0*nu**2+16.0*nu)/r**3+prstar**4*(118.4*nu**2/r-51.6952380952381*nu/r)/r**4-prstar**4*(30.0*nu**3-393.0*nu**2+278.133132854863*nu)/r**4-prstar**4*(2409.27416166626*nu**3+4*nu**2*(118.4*sp.log(r)-1796.13660498019)+4*nu*(452.542166996693-51.6952380952381*sp.log(r)))/r**5
    Dnons_prmr = r*(22295347200.0*d5*nu+267544166400.0*nu**2*r+1822680546449.21*nu**2+5178202125747.62*nu*r+5807150888816.35*nu+10215490662751.4*r-(-4161798144000.0*nu-1759846072320.0*r-12148770078720.0)*sp.log(r)-53501685054374.0-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2+r*(-4161798144000.0*nu-12148770078720.0)+104186110149937.0)/r+11575876386816.0*sp.log(r)/r)/(nu*(802632499200.0*nu**3-2357625227852.38*nu**2+55296.0*nu*(-2419200.0*d5-6842026062.89278)+239506984559637.0*nu+55407353094707.5)+r**3*(133772083200.0*nu**2+2589101062873.81*nu+5107745331375.71)-r**2*(-1822680546449.21*nu**2+9216.0*nu*(-2419200.0*d5-3111569738.71965)+22869075823224.0*nu+53501685054374.1)+r*(5927865218923.02*nu**3+nu**2*(22295347200.0*d5+181275031890860.0)-138141470005001.0*nu**2-nu*(193226342400.0*d5+406779588496105.0)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(nu*(-19691250647040.0*nu-118648618352640.0)+879923036160.0*r**3+r**2*(4161798144000.0*nu+12148770078720.0)+r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))*sp.log(r))+r*(-1.7694999344523e-13*nu**3-2.98505426338587e-26*nu**2*(22295347200.0*d5+181275031890860.0)+4.123597839888195e-12*nu**2+2.98505426338587e-26*nu*(193226342400.0*d5+406779588496105.0)-1.343790503824258e-11*nu+2.98505426338587e-26*r**2*(-401316249600.0*nu**2-7767303188621.42*nu-15323235994127.1)+2.98505426338587e-26*r*(-3645361092898.42*nu**2+18432.0*nu*(-2419200.0*d5-3111569738.71965)+45738151646447.9*nu+107003370108748.0)-2.58560219525329e-12*(1-0.496948781616935*nu)**2-2.98505426338587e-26*(5041721180160.0*nu**2+20113376778784.4*nu+2639769108480.0*r**2+r*(8323596288000.0*nu+24297540157440.0)-104186110149937.0)*sp.log(r)-1.72773095804465e-13*sp.log(r)**2-3.45546191608929e-13*sp.log(r)-5.625059799381501e-12-2.98505426338587e-26*(nu*(-19691250647040.0*nu-118648618352640.0)+879923036160.0*r**3+r**2*(4161798144000.0*nu+12148770078720.0)+r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))/r)*(22295347200.0*d5*nu**2+22295347200.0*d5*nu*r-193226342400.0*d5*nu+6730497718123.02*nu**3+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2+r*(-4804510165749.84*nu-14024920797448.4)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2+r*(-4161798144000.0*nu-12148770078720.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(nu*(0.138673301680058*nu**3-0.407334209362761*nu**2+9.55366110560367e-9*nu*(-2419200.0*d5-6842026062.89278)+41.3803631891606*nu+9.57289992450369)+r**3*(0.0231122169466764*nu**2+0.447327005983337*nu+0.882480973482581)-r**2*(-0.314910160672604*nu**2+1.59227685093395e-9*nu*(-2419200.0*d5-3111569738.71965)+3.95116102816545*nu+9.24365175759969)+r*(1.02417562538494*nu**3+1.72773095804465e-13*nu**2*(22295347200.0*d5+181275031890860.0)-23.86712943174367*nu**2-1.72773095804465e-13*nu*(193226342400.0*d5+406779588496105.0)+77.77776381023421*nu+14.9653056988661*(1-0.496948781616935*nu)**2+32.55749845304421)+r*sp.log(r)**2+(1.72773095804465e-13*nu*(-19691250647040.0*nu-118648618352640.0)+0.152027027027027*r**3+1.72773095804465e-13*r**2*(4161798144000.0*nu+12148770078720.0)+1.72773095804465e-13*r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))*sp.log(r))**2+(22295347200.0*d5*nu**2+22295347200.0*d5*nu*r-193226342400.0*d5*nu+6730497718123.02*nu**3+133772083200.0*nu**2*r**2+1822680546449.21*nu**2*r+80059249540278.2*nu**2+2589101062873.81*nu*r**2+10611661054566.2*nu*r-12049908701745.2*nu+5107745331375.71*r**2+r*(-4804510165749.84*nu-14024920797448.4)-39476764256925.6*r-(-5041721180160.0*nu**2-25392914995744.3*nu-879923036160.0*r**2+r*(-4161798144000.0*nu-12148770078720.0)+104186110149937.0)*sp.log(r)+5787938193408.0*sp.log(r)**2+275059053208689.0)/(nu*(802632499200.0*nu**3-2357625227852.38*nu**2+55296.0*nu*(-2419200.0*d5-6842026062.89278)+239506984559637.0*nu+55407353094707.5)+r**3*(133772083200.0*nu**2+2589101062873.81*nu+5107745331375.71)-r**2*(-1822680546449.21*nu**2+9216.0*nu*(-2419200.0*d5-3111569738.71965)+22869075823224.0*nu+53501685054374.1)+r*(5927865218923.02*nu**3+nu**2*(22295347200.0*d5+181275031890860.0)-138141470005001.0*nu**2-nu*(193226342400.0*d5+406779588496105.0)+450172889755120.0*nu+86618264430493.3*(1-0.496948781616935*nu)**2+188440788778196.0)+5787938193408.0*r*sp.log(r)**2+(nu*(-19691250647040.0*nu-118648618352640.0)+879923036160.0*r**3+r**2*(4161798144000.0*nu+12148770078720.0)+r*(5041721180160.0*nu**2+20113376778784.4*nu-104186110149937.0))*sp.log(r))
    Anons_prmr = r**4*(-7.12916500937039e-13*nu**2+1.31621673590926e-19*nu*(53760.0*a6+20550748.608965)+1.31621673590926e-19*nu*(1548288.0*nu+688128.0*r+833536.0)*sp.log(r)-1.31621673590926e-19*r*(-1300341.64885297*nu**2+6572428.80109422*nu-1720320.0)-4.52862795023884e-13)*(nu**3*(39946495452.7632*r+183326040601.257)-nu**2*(-825753600.0*a6+49933119315.954*r**4-86499019705.5264*r**3-129748529558.289*r**2+28906973358.5622*r+858447795533.909)-135291469824.0*nu**2*sp.log(r)/r-nu*(-23781703680.0*nu**2-58717141288.8419*nu+26424115200.0*r**4+32768.0*r**3*(1451520.0*nu+2071680.0)+32768.0*r**2*(2177280.0*nu+3107520.0)+32768.0*r*(2257920.0*nu+4143360.0)+135769620480.0)*sp.log(r)-nu*(412876800.0*a6*(4*r**3+6.0*r**2+8.0*r+8.0)-50476253192.4036*r**4+56877242932.0441*r**3+113754485864.088*r**2+53760.0*r*(-3508402.24700424*r**3+1637643.37050636*r**2+2183524.49400847*r+1692004.49400847)+53760.0*r*(-453940.869779844*r**3+680911.304669766*r**2+907881.739559688*r+907881.739559688)+53760.0*r*(206669.516158811*r**3+855398.613442412*r**2+1140531.48458988*r+1140531.48458988)+201084856528.177*r+155264066234.248)-nu*(-61684325962.2103*nu**2-1272782568716.72*nu+5284823040.0*r**5+32768.0*r**4*(362880.0*nu+517920.0)+32768.0*r**3*(725760.0*nu+1035840.0)+32768.0*r**2*(1128960.0*nu+2071680.0)+32768.0*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+440653578240.0)/r-66060288000.0*r**4)/(nu**4+nu**3*(-0.0826859618738229*r**2-0.758939668264987*r-5.51287811672293)+nu**2*(-0.00113949471516654*a6*(3.0*r+59.0)+0.0216141020760402*a6+0.0413429809369115*r**5-0.0895229301648219*r**4-0.179045860329644*r**3+0.0598350586183487*r**2+3.5538327399018*r+7.99983994492537)+0.280042221199329*nu**2*sp.log(r)**2+nu*(0.00170924207274981*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+2.22557561555965e-7*r*(-877100.561751059*r**4+545881.123502118*r**3+1091762.24700424*r**2+1692004.49400847*r-4316471.01198305)+2.22557561555965e-7*r*(-113485.217444961*r**4+226970.434889922*r**3+453940.869779844*r**2+907881.739559688*r+1815763.47911938)+2.22557561555965e-7*r*(51667.3790397027*r**4+285132.871147471*r**3+570265.742294942*r**2+1140531.48458988*r+5388804.00299478))+nu*(-0.255362968236103*nu**2-5.26911058192953*nu+0.0218782985311977*r**5+1.35654132757922e-7*r**4*(362880.0*nu+517920.0)+1.35654132757922e-7*r**3*(725760.0*nu+1035840.0)+1.35654132757922e-7*r**2*(1128960.0*nu+2071680.0)+1.35654132757922e-7*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+1.82423336800605)*sp.log(r)+0.054695746327994*r**5)**2+r**4*(9986623863.19079*nu**2+5284823040.0*nu*sp.log(r)-50476253192.4036*nu+7680.0*nu*(1548288.0*nu+688128.0*r+833536.0)/r+13212057600.0)/(241555486248.807*nu**4+nu**3*(-19973247726.3816*r**2-183326040601.257*r-1331665954115.41)+nu**2*(-275251200.0*a6*(3.0*r+59.0)+5221004936.80923*a6+9986623863.1908*r**5-21624754926.3815*r**4-43249509852.7631*r**3+14453486679.2811*r**2+858447795533.909*r+1932405227809.08)+67645734912.0*nu**2*sp.log(r)**2+nu*(412876800.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+53760.0*r*(-877100.561751059*r**4+545881.123502118*r**3+1091762.24700424*r**2+1692004.49400847*r-4316471.01198305)+53760.0*r*(-113485.217444961*r**4+226970.434889922*r**3+453940.869779844*r**2+907881.739559688*r+1815763.47911938)+53760.0*r*(51667.3790397027*r**4+285132.871147471*r**3+570265.742294942*r**2+1140531.48458988*r+5388804.00299478))+nu*(-61684325962.2103*nu**2-1272782568716.72*nu+5284823040.0*r**5+32768.0*r**4*(362880.0*nu+517920.0)+32768.0*r**3*(725760.0*nu+1035840.0)+32768.0*r**2*(1128960.0*nu+2071680.0)+32768.0*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+440653578240.0)*sp.log(r)+13212057600.0*r**5)+r**3*(-166392010611.052*nu**2+30720.0*nu*(53760.0*a6+20550748.608965)+30720.0*nu*(1548288.0*nu+688128.0*r+833536.0)*sp.log(r)-30720.0*r*(-1300341.64885297*nu**2+6572428.80109422*nu-1720320.0)-105696460800.0)/(241555486248.807*nu**4+nu**3*(-19973247726.3816*r**2-183326040601.257*r-1331665954115.41)+nu**2*(-275251200.0*a6*(3.0*r+59.0)+5221004936.80923*a6+9986623863.1908*r**5-21624754926.3815*r**4-43249509852.7631*r**3+14453486679.2811*r**2+858447795533.909*r+1932405227809.08)+67645734912.0*nu**2*sp.log(r)**2+nu*(412876800.0*a6*(r**4+2.0*r**3+4.0*r**2+8.0*r+16.0)+53760.0*r*(-877100.561751059*r**4+545881.123502118*r**3+1091762.24700424*r**2+1692004.49400847*r-4316471.01198305)+53760.0*r*(-113485.217444961*r**4+226970.434889922*r**3+453940.869779844*r**2+907881.739559688*r+1815763.47911938)+53760.0*r*(51667.3790397027*r**4+285132.871147471*r**3+570265.742294942*r**2+1140531.48458988*r+5388804.00299478))+nu*(-61684325962.2103*nu**2-1272782568716.72*nu+5284823040.0*r**5+32768.0*r**4*(362880.0*nu+517920.0)+32768.0*r**3*(725760.0*nu+1035840.0)+32768.0*r**2*(1128960.0*nu+2071680.0)+32768.0*r*(-725760.0*nu**2-1791904.94655889*nu+4143360.0)+440653578240.0)*sp.log(r)+13212057600.0*r**5)
    xi_prmr = -2*sp.sqrt(Dnons)*ap**2*u*u_prmr*(Anons+ap**2*u**2)/(ap**2*u**2+1)**2+sp.sqrt(Dnons)*(Anons_prmr+2*ap**2*u*u_prmr)/(ap**2*u**2+1)+Dnons_prmr*(Anons+ap**2*u**2)/(sp.sqrt(Dnons)*(2*ap**2*u**2+2))
    pr_prmr = -prstar*xi_prmr/xi**2
    QalignSS_prmr = pr**4*(-3*am**2*(-15*nu**2/8+75*nu/32-15/32)-3*am*ap*delta*(45*nu/8-5/16)-3*ap**2*(-5*nu**2+165*nu/32+25/32))/r**4+pr**3*pr_prmr*(4*am**2*(-15*nu**2/8+75*nu/32-15/32)+4*am*ap*delta*(45*nu/8-5/16)+4*ap**2*(-5*nu**2+165*nu/32+25/32))/r**3
    BnpalignSS_prmr = -(3*am**2*(3*nu/4-3/16)-63*am*ap*delta/8+3*ap**2*(3*nu+45/16))/r**4+(-4*am**2*(nu**2/16+115*nu/64-37/64)-4*am*ap*delta*(13*nu/16+449/32)-4*ap**2*(-1171*nu/64-861/64))/r**5
    AalignSS_prmr = (-4*am**2*(nu/2+1/8)+5*am*ap*delta-9*ap**2/2)/r**5-(5*am**2*(21*nu**2/16-81*nu/64-9/64)+5*am*ap*delta*(117/32-39*nu/16)+5*ap**2*(-175*nu/64-225/64))/r**6
    Qalign_prmr = QalignSS_prmr+Qnos_prmr
    Balignnp_prmr = Anons*Dnons_prmr+Anons_prmr*Dnons+BnpalignSS_prmr+2*ap**2*u*u_prmr
    Bkerreqnp_prmr = (-1-2/r)*(2*ap**2/r**2-2*r)/(ap**2*(1+2/r)+r**2)**2+2/(r**2*(ap**2*(1+2/r)+r**2))
    Aalign_prmr = (ap**2*(2+4/r)/r**3+2*ap**2/r**4)*(AalignSS+Anons+ap**2*u**2)/(ap**2*(1+2/r)/r**2+1)**2+(AalignSS_prmr+Anons_prmr+2*ap**2*u*u_prmr)/(ap**2*(1+2/r)/r**2+1)
    Galigna3_prmr = pphi*(-am*ap**2*delta+ap**3)/(2*r**3)
    SOcalib_prmr = 3*ap*dSO*nu*pphi*u**2*u_prmr
    Heven_prmr = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2+Qalign+pphi**2/r**2+pr**2*(Balignnp+1)+1))*(Aalign*(Balignnp_prmr*pr**2-2*Bkerreqnp*ap**2*pphi**2/r**3+Bkerreqnp_prmr*ap**2*pphi**2/r**2+Qalign_prmr-2*pphi**2/r**3+pr*pr_prmr*(2*Balignnp+2))/2+Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2+Qalign+pphi**2/r**2+pr**2*(Balignnp+1)+1)/2)/(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2+Qalign+pphi**2/r**2+pr**2*(Balignnp+1)+1))
    Hodd_prmr = (-ap**2-3*r**2)*(Galigna3+SOcalib+pphi*(am*delta*gam+ap*gap))/(ap**2*(r+2)+r**3)**2+(Galigna3_prmr+SOcalib_prmr+pphi*(am*delta*gam_prmr+ap*gap_prmr))/(ap**2*(r+2)+r**3)
    Heff_prmr = Heven_prmr+Hodd_prmr
    Hreal_prmr = Heff_prmr*nu/sp.sqrt(nu*(2*Heff-2)+1)
    
    gam_prmpphi = pphi**3*(75*nu**2/64 - 45*nu/32 - 105/64)/r**4 + pphi*(15/16 - 9*nu/16)/r**2 + pphi*(-613*nu**2/384 - 35*nu/64 - 59/128)/r**3
    gap_prmpphi = pphi**3*(345*nu**2/64 + 75*nu/32 + 105/64)/r**4 + pphi*(-45*nu/16 - 15/16)/r**2 + pphi*(-1591*nu**2/384 - 267*nu/64 + 59/128)/r**3
    Galigna3_prmpphi = (am*ap**2*delta - ap**3)/(4*r**2)
    SOcalib_prmpphi = ap*dSO*nu*u**3
    Heven_prmpphi = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(2*Bkerreqnp*ap**2*pphi/r**2 + 2*pphi/r**2)/(2*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))
    Hodd_prmpphi = (Galigna3_prmpphi + SOcalib_prmpphi + am*delta*gam + ap*gap + pphi*(am*delta*gam_prmpphi + ap*gap_prmpphi))/(ap**2*(r + 2) + r**3)
    Heff_prmpphi = Heven_prmpphi + Hodd_prmpphi
    Hreal_prmpphi = Heff_prmpphi*nu/sp.sqrt(nu*(2*Heff - 2) + 1)
    gam_prmr_prmpphi = -pphi**3*(75*nu**2/16 - 45*nu/8 - 105/16)/r**5 + pphi*(9*nu/8 - 15/8)/r**3 - pphi*(-613*nu**2/128 - 105*nu/64 - 177/128)/r**4
    gap_prmr_prmpphi = -pphi**3*(345*nu**2/16 + 75*nu/8 + 105/16)/r**5 - pphi*(-45*nu/8 - 15/8)/r**3 - pphi*(-1591*nu**2/128 - 801*nu/64 + 177/128)/r**4
    Galigna3_prmr_prmpphi = (-am*ap**2*delta + ap**3)/(2*r**3)
    SOcalib_prmr_prmpphi = 3*ap*dSO*nu*u**2*u_prmr
    Heven_prmr_prmpphi = sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(-4*Bkerreqnp*ap**2*pphi/r**3 + 2*Bkerreqnp_prmr*ap**2*pphi/r**2 - 4*pphi/r**3)/2 + Aalign_prmr*(2*Bkerreqnp*ap**2*pphi/r**2 + 2*pphi/r**2)/2)/(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)) + sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2)*(-2*Bkerreqnp*ap**2*pphi/r**2 - 2*pphi/r**2)/(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)**2) + sp.sqrt(Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1))*(Aalign*(Balignnp_prmr*pr**2 - 2*Bkerreqnp*ap**2*pphi**2/r**3 + Bkerreqnp_prmr*ap**2*pphi**2/r**2 + Qalign_prmr - 2*pphi**2/r**3 + pr*pr_prmr*(2*Balignnp + 2))/2 + Aalign_prmr*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)/2)*(2*Bkerreqnp*ap**2*pphi/r**2 + 2*pphi/r**2)/(2*Aalign*(Bkerreqnp*ap**2*pphi**2/r**2 + Qalign + pphi**2/r**2 + pr**2*(Balignnp + 1) + 1)**2)
    Hodd_prmr_prmpphi = (-ap**2 - 3*r**2)*(Galigna3_prmpphi + SOcalib_prmpphi + am*delta*gam + ap*gap + pphi*(am*delta*gam_prmpphi + ap*gap_prmpphi))/(ap**2*(r + 2) + r**3)**2 + (Galigna3_prmr_prmpphi + SOcalib_prmr_prmpphi + am*delta*gam_prmr + ap*gap_prmr + pphi*(am*delta*gam_prmr_prmpphi + ap*gap_prmr_prmpphi))/(ap**2*(r + 2) + r**3)
    Heff_prmr_prmpphi = Heven_prmr_prmpphi + Hodd_prmr_prmpphi
    Hreal_prmr_prmpphi = -Heff_prmr*Heff_prmpphi*nu**2/(nu*(2*Heff - 2) + 1)**(3/2) + Heff_prmr_prmpphi*nu/sp.sqrt(nu*(2*Heff - 2) + 1)
    M = m1+m2
    eta = m1*m2/(M**2)
    TINYDOUBLE = 1e-100
    delta = (m1 - m2)/M
    min_delta_1em14 = sp.Rational(1,2)*(delta - 1e-14 + 0 - sp.Abs(delta - 1e-14 - 0))
    max_delta_1em14 = sp.Rational(1,2)*(delta - 1e-14 + TINYDOUBLE + 0 + sp.Abs(delta - 1e-14 + TINYDOUBLE - 0))
    noneqcond = max_delta_1em14/(delta - 1e-14+TINYDOUBLE)
    eqcond = min_delta_1em14/(delta - 1e-14-TINYDOUBLE)
    deltainvertible = delta*noneqcond + 1*eqcond
    deltainv = 1/deltainvertible
    chi_S = sp.Rational(1,2)*(chi1 + chi2)
    chi_A = sp.Rational(1,2)*(chi1 - chi2)
    vomega = (Hreal_prmpphi/eta)**(sp.Rational(1,3))
    vphi = (Hreal_prmpphi/eta)*((Hreal_prmpphi_preq0/eta)**(-sp.Rational(2,3)))
    Heff_for_flux = (Hreal**2 - 1)/(2*eta) + 1
    eulerlog5 = sp.EulerGamma + sp.log(2*5*vomega)
    eulerlog4 = sp.EulerGamma + sp.log(2*4*vomega)
    eulerlog3 = sp.EulerGamma + sp.log(2*3*vomega)
    eulerlog2v2 = sp.EulerGamma + sp.log(2*2*vomega**2)
    eulerlog2 = sp.EulerGamma + sp.log(2*2*vomega)
    eulerlog1v2 = sp.EulerGamma + sp.log(2*1*vomega**2)
    eulerlog1 = sp.EulerGamma + sp.log(2*1*vomega)
    khat1 = 1*(Hreal_prmpphi/eta)*Hreal
    khat2 = 2*(Hreal_prmpphi/eta)*Hreal
    khat3 = 3*(Hreal_prmpphi/eta)*Hreal
    khat4 = 4*(Hreal_prmpphi/eta)*Hreal
    khat5 = 5*(Hreal_prmpphi/eta)*Hreal
    khat6 = 6*(Hreal_prmpphi/eta)*Hreal
    khat7 = 7*(Hreal_prmpphi/eta)*Hreal
    khat8 = 8*(Hreal_prmpphi/eta)*Hreal
    delta55=((sp.Rational(96875,131250)+sp.Rational(857528,131250)*eta)*((Hreal_prmpphi/eta)*Hreal)/(1-2*eta)+sp.Rational(3865,429)*sp.pi*((Hreal_prmpphi/eta)*Hreal)**2+((sp.Rational(-7686949127,31783752)+sp.Rational(954500400,31783752)*sp.pi**2)*((Hreal_prmpphi/eta)*Hreal)**3))
    delta43=(((sp.Rational(4961,810)*eta+sp.Rational(3,5))*((Hreal_prmpphi/eta)*Hreal))/(1-2*eta)+sp.Rational(1571,385)*sp.pi*((Hreal_prmpphi/eta)*Hreal)**2)
    delta44=((sp.Rational(112,120)+sp.Rational(219,120)*eta)*((Hreal_prmpphi/eta)*Hreal)+sp.Rational(25136,3465)*((Hreal_prmpphi/eta)*Hreal)**2+(sp.Rational(201088,10395)*sp.pi**2-sp.Rational(55144,375))*((Hreal_prmpphi/eta)*Hreal)**3)
    delta32=(((sp.Rational(11,5)*eta+sp.Rational(2,3))*(Hreal*(Hreal_prmpphi/eta)))/(1-3*eta)+sp.Rational(52,21)*sp.pi*(Hreal*(Hreal_prmpphi/eta))**2+((sp.Rational(208,63)*sp.pi**2)-sp.Rational(9112,405))*(Hreal*(Hreal_prmpphi/eta))**3)
    delta33=(sp.Rational(13,10)*(Hreal*(Hreal_prmpphi/eta))+sp.Rational(39,7)*(Hreal*(Hreal_prmpphi/eta))**2+(-sp.Rational(227827,3000)+sp.Rational(78,7)*sp.pi**2)*(Hreal*(Hreal_prmpphi/eta))**3-sp.Rational(80897,2430)*eta*vomega**5)
    delta21=(sp.Rational(2,3)*(Hreal_prmpphi/eta)*Hreal+(sp.Rational(107,105)*sp.pi)*((Hreal_prmpphi/eta)*Hreal)**2+((sp.Rational(214,315)*sp.pi**2)-(sp.Rational(272,81)))*((Hreal_prmpphi/eta)*Hreal)**3-(sp.Rational(25,2)*eta*vomega**5))
    delta22=(sp.Rational(7,3)*(Hreal_prmpphi/eta)*Hreal+((Hreal_prmpphi/eta)*Hreal)**2*(((sp.Rational(8,3)*eta-sp.Rational(4,3))*chi_S)-(sp.Rational(4,3)*delta*chi_A)+(sp.Rational(428,105)*sp.pi))+((Hreal_prmpphi/eta)*Hreal)**3*((sp.Rational(1712,315)*sp.pi**2)-(sp.Rational(2203,81)))-24*eta*vomega**5)
    fspin55_limit=(((sp.Rational(-70,3)*eta/((-1+2*eta))+sp.Rational(110,3)*eta**2/((-1+2*eta))+sp.Rational(10,3)/((-1+2*eta)))*(chi_A))*vomega**3+((-5.0/(-1.0+2.0*eta)+30.0*eta/(-1.0+2.0*eta)-40.0*eta**2/(-1.0+2.0*eta))*chi_A*chi_S)*vomega**4)
    fspin55=(((-70*eta/(3*(-1+2*eta))+110*eta**2/(3*(-1+2*eta))+10/(3*(-1+2*eta)))*(chi_A*deltainv)+(10/(3*(-1+2*eta))-10*eta/(-1+2*eta)+10*eta**2/(-1+2*eta))*chi_S)*vomega**3+(sp.Rational(5,2)*chi_S**2+(-5.0/(-1.0+2.0*eta)+30.0*eta/(-1.0+2.0*eta)-40.0*eta**2/(-1.0+2.0*eta))*chi_A*chi_S*deltainv+(-5.0/(2.0*(-1.0+2.0*eta))+15.0*eta/(-1.0+2.0*eta)-20.0*eta**2/(-1.0+2.0*eta))*chi_A**2)*vomega**4)
    fspin41_limit=(sp.Rational(5,2)*eta*vomega/(1-2*eta)*(-chi_A))
    fspin41=(sp.Rational(5,2)*eta*vomega/(1-2*eta)*(chi_S-chi_A*deltainv))
    fspin43_limit=(vomega/(1-2*eta)*(-sp.Rational(5,2)*eta*chi_A)+vomega**3/(1-2*eta)*((sp.Rational(887,44)*eta-sp.Rational(3143,132)*eta**2)*chi_A)+vomega**4/(1-2*eta)*((sp.Rational(137,6)*eta**2-18*eta+3)*chi_A*chi_S))
    fspin43=(vomega/(1-2*eta)*(sp.Rational(5,2)*eta*chi_S-sp.Rational(5,2)*eta*chi_A*deltainv)+vomega**3/(1-2*eta)*((sp.Rational(887,44)*eta-sp.Rational(3143,132)*eta**2)*chi_A*deltainv+(-sp.Rational(529,132)*eta**2-sp.Rational(667,44)*eta)*chi_S)+vomega**4/(1-2*eta)*((12*eta**2-sp.Rational(37,3)*eta+sp.Rational(3,2))*chi_A**2+(sp.Rational(137,6)*eta**2-18*eta+3)*chi_A*chi_S*deltainv+(sp.Rational(35,6)*eta**2+sp.Rational(1,3)*eta+sp.Rational(3,2))*chi_S**2))
    fspin31_limit = vomega**3 * (-chi_A * 5.0 / 8.0)
    fspin31=vomega**3*(chi_A*deltainv*(-4.0+11.0*eta)+chi_S*(-4.0+13.0*eta))/(2.0)
    fspin33_limit=vomega**3*((sp.Rational(19,2)*eta-2)*chi_A)+vomega**4*((3-12*eta)*(chi_A*chi_S))+vomega**5*((sp.Rational(407,30)*eta**2-sp.Rational(593,60)*eta+sp.Rational(2,3))*chi_A)+vomega**6*((44*eta**2-eta-sp.Rational(7,2))*(chi_A*chi_S))+sp.I*((Hreal_prmpphi/eta)*Hreal)**2*(sp.Rational(7339,540)*eta-sp.Rational(81,20))*chi_A
    fspin33amp_limit=vomega**3*((sp.Rational(19,2)*eta-2)*chi_A)+vomega**4*((3-12*eta)*(chi_A*chi_S))+vomega**5*((sp.Rational(407,30)*eta**2-sp.Rational(593,60)*eta+sp.Rational(2,3))*chi_A)+vomega**6*((44*eta**2-eta-sp.Rational(7,2))*(chi_A*chi_S))
    fspin33=(vomega**3*(((sp.Rational(19,2)*eta-2)*chi_A*deltainv)+((sp.Rational(5,2)*eta-2)*chi_S))+vomega**4*((sp.Rational(3,2)-6*eta)*chi_A**2+(3-12*eta)*(chi_A*chi_S*deltainv)+sp.Rational(3,2)*chi_S**2)+vomega**5*(((sp.Rational(407,30)*eta**2-sp.Rational(593,60)*eta+sp.Rational(2,3))*chi_A*deltainv)+((sp.Rational(241,30)*eta**2+sp.Rational(11,20)*eta+sp.Rational(2,3))*chi_S))+vomega**6*((-12*eta**2+sp.Rational(11,2)*eta-sp.Rational(7,4))*chi_A**2+(44*eta**2-eta-sp.Rational(7,2))*(chi_A*chi_S*deltainv)+(6*eta**2-sp.Rational(27,2)*eta-sp.Rational(7,4))*chi_S**2)+sp.I*(((Hreal_prmpphi/eta)*Hreal)**2*(sp.Rational(7339,540)*eta-sp.Rational(81,20))*chi_A*deltainv+(sp.Rational(593,108)*eta-sp.Rational(81,20))*chi_S))
    fspin33amp=(vomega**3*(((sp.Rational(19,2)*eta-2)*chi_A*deltainv)+((sp.Rational(5,2)*eta-2)*chi_S))+vomega**4*((sp.Rational(3,2)-6*eta)*chi_A**2+(3-12*eta)*(chi_A*chi_S*deltainv)+sp.Rational(3,2)*chi_S**2)+vomega**5*(((sp.Rational(407,30)*eta**2-sp.Rational(593,60)*eta+sp.Rational(2,3))*chi_A*deltainv)+((sp.Rational(241,30)*eta**2+sp.Rational(11,20)*eta+sp.Rational(2,3))*chi_S))+vomega**6*((-12*eta**2+sp.Rational(11,2)*eta-sp.Rational(7,4))*chi_A**2+(44*eta**2-eta-sp.Rational(7,2))*(chi_A*chi_S*deltainv)+(6*eta**2-sp.Rational(27,2)*eta-sp.Rational(7,4))*chi_S**2))
    fspin21_limit=(-sp.Rational(3,2)*vomega*(chi_A)+vomega**3*((sp.Rational(131,84)*eta+sp.Rational(61,12))*(chi_A))+vomega**4*(+(sp.Rational(21,2)*eta-6)*(chi_A*chi_S))+vomega**5*((sp.Rational(-703,112)*eta**2+sp.Rational(8797,1008)*eta-sp.Rational(81,16))*(chi_A)+(sp.Rational(3,4)-3*eta)*(chi_A**3)+(sp.Rational(9,4)-6*eta)*(chi_A*chi_S**2))+vomega**6*((sp.Rational(9487,504)*eta**2-sp.Rational(1636,21)*eta+sp.Rational(4163,126))*(chi_A*chi_S)))
    fspin21=(-sp.Rational(3,2)*vomega*(chi_A*deltainv+chi_S)+vomega**3*((sp.Rational(131,84)*eta+sp.Rational(61,12))*(chi_A*deltainv)+(sp.Rational(79,84)*eta+sp.Rational(61,12))*chi_S)+vomega**4*((-2*eta-3)*chi_A**2+(sp.Rational(21,2)*eta-6)*(chi_A*chi_S*deltainv)+(sp.Rational(1,2)*eta-3)*chi_S**2)+vomega**5*((sp.Rational(-703,112)*eta**2+sp.Rational(8797,1008)*eta-sp.Rational(81,16))*(chi_A*deltainv)+(sp.Rational(613,1008)*eta**2+sp.Rational(1709,1008)*eta-sp.Rational(81,16))*chi_S+(sp.Rational(3,4)-3*eta)*(chi_A**3*deltainv)+(sp.Rational(9,4)-6*eta)*(chi_A*chi_S**2*deltainv)+(sp.Rational(9,4)-3*eta)*(chi_A**2*chi_S)+sp.Rational(3,4)*chi_S**3)+vomega**6*((sp.Rational(5,7)*eta**2-sp.Rational(9287,1008)*eta+sp.Rational(4163,252))*chi_A**2+(sp.Rational(139,72)*eta**2-sp.Rational(2633,1008)*eta+sp.Rational(4163,252))*chi_S**2+(sp.Rational(9487,504)*eta**2-sp.Rational(1636,21)*eta+sp.Rational(4163,126))*(chi_A*chi_S*deltainv)))
    rhoNS81=1+((20022-126451*eta+236922*eta**2-138430*eta**3+21640*eta**4)/(18240*(-1+6*eta-10*eta**2+4*eta**3)))*vomega**2
    rho82=1+((2462-17598*eta+37119*eta**2-22845*eta**3+3063*eta**4)/(2736*(-1+7*eta-14*eta**2+7*eta**3)))*vomega**2
    rhoNS83=1+((20598-131059*eta+249018*eta**2-149950*eta**3+24520*eta**4)/(18240*(-1+6*eta-10*eta**2+4*eta**3)))*vomega**2
    rho84=1+((2666-19434*eta+42627*eta**2-28965*eta**3+4899*eta**4)/(2736*(-1+7*eta-14*eta**2+7*eta**3)))*vomega**2
    rhoNS85=1+((4350-28055*eta+54642*eta**2-34598*eta**3+6056*eta**4)/(3648*(-1+6*eta-10*eta**2+4*eta**3)))*vomega**2
    rho86=1+((1002-7498*eta+17269*eta**2-13055*eta**3+2653*eta**4)/(912*(-1+7*eta-14*eta**2+7*eta**3)))*vomega**2
    rhoNS87=1+((23478-154099*eta+309498*eta**2-207550*eta**3+38920*eta**4)/(18240*(-1+6*eta-10*eta**2+4*eta**3)))*vomega**2
    rho88=1+((3482-26778*eta+64659*eta**2-53445*eta**3+12243*eta**4)/(2736*(-1+7*eta-14*eta**2+7*eta**3)))*vomega**2
    rhoNS71=1+((228*eta**3-2083*eta**2+2518*eta-618)/(714*(3*eta**2-4*eta+1)))*vomega**2
    rho72=1+((32760*eta**4-190239*eta**3+273924*eta**2-123489*eta+16832)/(14994*(7*eta**3-14*eta**2+7*eta-1)))*vomega**2
    rhoNS73=1+((420*eta**3-2563*eta**2+2806*eta-666)/(714*(3*eta**2-4*eta+1)))*vomega**2
    rho74=1+((41076*eta**4-217959*eta**3+298872*eta**2-131805*eta+17756)/(14994*(7*eta**3-14*eta**2+7*eta-1)))*vomega**2
    rhoNS75=1+((804*eta**3-3523*eta**2+3382*eta-762)/(714*(3*eta**2-4*eta+1)))*vomega**2
    rho76=1+((6104*eta**4-29351*eta**3+37828*eta**2-16185*eta+2144)/(1666*(7*eta**3-14*eta**2+7*eta-1)))*vomega**2
    rhoNS77=1+((1380*eta**3-4963*eta**2+4246*eta-906)/(714*(3*eta**2-4*eta+1)))*vomega**2
    rhoNS61=1+((124*eta**3-670*eta**2+694*eta-161)/(144*(3*eta**2-4*eta+1)))*vomega**2
    rho62=1+((49*eta**3-413*eta**2+378*eta-74)/(84*(5*eta**2-5*eta+1)))*vomega**2-sp.Rational(817991,3298680)*vomega**4
    rhoNS63=1+((156*eta**3-750*eta**2+742*eta-169)/(144*(3*eta**2-4*eta+1)))*vomega**2
    rho64=1+vomega**2*((133*eta**3-581*eta**2+462*eta-86)/(84*(5*eta**2-5*eta+1)))-sp.Rational(476887,659736)*vomega**4
    rhoNS65=1+((220*eta**3-910*eta**2+838*eta-185)/(144*(3*eta**2-4*eta+1)))*vomega**2
    rho66=1+((273*eta**3-861*eta**2+602*eta-106)/(84*(5*eta**2-5*eta+1)))*vomega**2-sp.Rational(1025435,659736)*vomega**4
    rhoNS51=1+((8*eta**2-626*eta+319)/(390*(2*eta-1)))*vomega**2-sp.Rational(31877,304200)*vomega**4
    rho52=1+((21980*eta**3-104930*eta**2+84679*eta-15828)/(13650*(5*eta**2-5*eta+1)))*vomega**2-sp.Rational(7187914,15526875)*vomega**4
    rhoNS53=1+((176*eta**2-850*eta+375)/(390*(2*eta-1)))*vomega**2-sp.Rational(410833,709800)*vomega**4
    rho54=1+((33320*eta**3-127610*eta**2+96019*eta-17448)/(13650*(5*eta**2-5*eta+1)))*vomega**2-sp.Rational(16213384,15526875)*vomega**4
    rhoNS55=1+vomega**2*(sp.Rational(487,390)/(-1+2*eta)-sp.Rational(649,195)*eta/(-1+2*eta)+sp.Rational(256,195)*eta**2/(-1+2*eta))-sp.Rational(3353747,2129400)*vomega**4+(sp.Rational(190606537999247,11957879934000)-sp.Rational(1546,429)*eulerlog5)*vomega**6+(-sp.Rational(1213641959949291437,118143853747920000)+sp.Rational(376451,83655)*eulerlog5)*vomega**8+(-sp.Rational(150082616449726042201261,4837990810977324000000)+sp.Rational(2592446431,456756300)*eulerlog5)*vomega**10+eta*(-2.61*vomega**4+1.25*vomega**6+-35.7*vomega**8)
    rhoNS41=1+((288*eta**2-1385*eta+602)/(528*(2*eta-1)))*vomega**2-(sp.Rational(7775491,21141120))*vomega**4+(sp.Rational(1227423222031,1758095539200)-sp.Rational(1571,6930)*eulerlog1)*vomega**6
    rho42=(1+vomega**2*((1146.0-3530.0*eta+285.0*eta**2)/(1320.0*(-1+3*eta)))+vomega**3*((chi_A*(10.0-21.0*eta)*delta+chi_S*(10.0-59.0*eta+78.0*eta**2))/(15.0*(-1+3*eta)))+vomega**4*((-114859044.0+295834536.0*eta+1204388696.0*eta**2-3047981160.0*eta**3-379526805.0*eta**4)/(317116800.0*(-1+3*eta)**2))+vomega**6*(848238724511.0/219761942400.-(3142.0/3465.0)*eulerlog2))
    rhoNS43=1+vomega**2/(1-2*eta)*(-sp.Rational(10,11)*eta**2+sp.Rational(547,176)*eta-sp.Rational(111,88))-sp.Rational(6894273,7047040)*vomega**4+vomega**6*(sp.Rational(1664224207351,195343948800)-sp.Rational(1571,770)*eulerlog3)+vomega**8*(-sp.Rational(2465107182496333,460490801971200)+sp.Rational(174381,67760)*eulerlog3)+eta*(-0.654*vomega**4+-3.69*vomega**6+18.5*vomega**8)
    rho44=(1+vomega**2*((1614.0-5870.0*eta+2625.0*eta**2)/(1320.0*(-1+3*eta)))+vomega**3*(chi_A*(10.0-39.0*eta)*delta+chi_S*(10.0-41.0*eta+42.0*eta**2))/(15.0*(-1+3*eta))+vomega**4*((-511573572.0+2338945704.0*eta-313857376.0*eta**2-6733146000.0*eta**3+1252563795.0*eta**4)/(317116800.0*(-1+3*eta)**2)+chi_S**2/2.0+delta*chi_S*chi_A+delta**2*chi_A**2/2.0)+vomega**5*(chi_A*delta*(-8280.0+42716.0*eta-57990.0*eta**2+8955*eta**3)/(6600.0*(-1+3*eta)**2)+chi_S*(-8280.0+66284.0*eta-176418.0*eta**2+128085.0*eta**3+88650*eta**2*eta**2)/(6600.0*(-1+3*eta)**2))+vomega**6*(sp.Rational(16600939332793,1098809712000)-sp.Rational(12568.0,3465.0)*eulerlog4)+vomega**8*(-sp.Rational(172066910136202271,19426955708160000)+sp.Rational(845198.0,190575.0)*eulerlog4)+vomega**10*(-sp.Rational(17154485653213713419357,568432724020761600000)+sp.Rational(22324502267,3815311500)*eulerlog4)+eta*(-3.56*vomega**6+15.6*vomega**8+-216*vomega**10))
    rhoNS31=(1-vomega**2*(sp.Rational(2,9)*eta+sp.Rational(13,18))+vomega**4*(-sp.Rational(829,1782)*eta**2-sp.Rational(1685,1782)*eta+sp.Rational(101,7128))+vomega**6*(sp.Rational(11706720301,6129723600)-sp.Rational(26,63)*eulerlog1)+vomega**8*(sp.Rational(169,567)*eulerlog1+sp.Rational(2606097992581,4854741091200)))
    rho32=1+vomega*((4*eta*chi_S)/(3*(1-3*eta)))+vomega**2*((sp.Rational(-32,27)*eta**2+sp.Rational(223,54)*eta-sp.Rational(164,135))/(1-3*eta)-(16*eta**2*chi_S**2)/(9*(1-3*eta)**2))+vomega**3*((sp.Rational(13,9)*eta+sp.Rational(2,9))*(delta*chi_A)/(1-3*eta)+(sp.Rational(607,81)*eta**3+sp.Rational(503,81)*eta**2-sp.Rational(1478,405)*eta+sp.Rational(2,9))*chi_S/(1-3*eta)**2+(320*eta**3*chi_S**3)/(81*(1-3*eta)**3))+vomega**4*((sp.Rational(77141,40095)*eta**4-sp.Rational(508474,40095)*eta**3-sp.Rational(945121,320760)*eta**2+sp.Rational(1610009,320760)*eta-sp.Rational(180566,200475))/(1-3*eta)**2+(4*eta**2-3*eta+sp.Rational(1,3))*(chi_A**2)/(1-3*eta)+(sp.Rational(-50,27)*eta**2-sp.Rational(88,27)*eta+sp.Rational(2,3))*(delta*chi_A*chi_S)/(1-3*eta)**2+(sp.Rational(-2452,243)*eta**4-sp.Rational(1997,243)*eta**3+sp.Rational(1435,243)*eta**2-sp.Rational(43,27)*eta+sp.Rational(1,3))*(chi_S**2)/((1-3*eta)**3))+vomega**5*((sp.Rational(-1184225,96228)*eta**5-sp.Rational(40204523,962280)*eta**4+sp.Rational(101706029,962280)*eta**3-sp.Rational(14103833,192456)*eta**2+sp.Rational(20471053,962280)*eta-sp.Rational(2788,1215))*chi_S/(1-3*eta)**3+(sp.Rational(608,81)*eta**3+sp.Rational(736,81)*eta**2-sp.Rational(16,9)*eta)*(delta*chi_A*chi_S**2)/(1-3*eta)**3+(sp.Rational(889673,106920)*eta**3-sp.Rational(75737,5346)*eta**2+sp.Rational(376177,35640)*eta-sp.Rational(2788,1215))*(delta*chi_A)/(1-3*eta)**2+(sp.Rational(96176,2187)*eta**5+sp.Rational(43528,2187)*eta**4-sp.Rational(40232,2187)*eta**3+sp.Rational(376,81)*eta**2-sp.Rational(8,9)*eta)*(chi_S**3)/(1-3*eta)**4+(sp.Rational(-32,3)*eta**3+8*eta**2-sp.Rational(8,9)*eta)*(chi_A**2*chi_S)/((1-3*eta)**2))+vomega**6*(sp.Rational(5849948554,940355325)-sp.Rational(104,63)*eulerlog2)+vomega**8*(sp.Rational(17056,8505)*eulerlog2-sp.Rational(10607269449358,3072140846775))+vomega**10*(-sp.Rational(1312549797426453052,176264081083715625)+sp.Rational(18778864,12629925)*eulerlog2)+eta*(+.333*vomega**6-6.5*vomega**8+98*vomega**10)
    rhoNS33=1+vomega**2*(sp.Rational(2,3)*eta-sp.Rational(7,6))+vomega**4*(-sp.Rational(6719,3960)-sp.Rational(1861,990)*eta+sp.Rational(149,330)*eta**2)+vomega**6*(sp.Rational(3203101567,227026800)+(-sp.Rational(129509,25740)+sp.Rational(41,192)*sp.pi**2)*eta-sp.Rational(274621,154440)*eta**2+sp.Rational(12011,46332)*eta**3-sp.Rational(26,7)*eulerlog3)+vomega**8*(-sp.Rational(57566572157,8562153600)+sp.Rational(13,3)*eulerlog3)+vomega**10*(-sp.Rational(903823148417327,30566888352000)+sp.Rational(87347,13860)*eulerlog3)+eta*(12*vomega**8+-215*vomega**10)
    rhoNS21=1+vomega**2*(sp.Rational(23,84)*eta-sp.Rational(59,56))+vomega**4*(sp.Rational(617,4704)*eta**2-sp.Rational(10993,14112)*eta-sp.Rational(47009,56448))+vomega**6*(sp.Rational(7613184941,2607897600)-sp.Rational(107,105)*eulerlog1)+vomega**8*(-sp.Rational(1168617463883,911303737344)+sp.Rational(6313,5880)*eulerlog1)+vomega**10*(-sp.Rational(63735873771463,16569158860800)+sp.Rational(5029963,5927040)*eulerlog1)+eta*(1.65*vomega**6+26.5*vomega**8+80*vomega**10)
    rho22=1+vomega**2*(sp.Rational(55,84)*eta-sp.Rational(43,42))+vomega**3*((-2.0*(chi_S+chi_A*delta-chi_S*eta))/3.0)+vomega**4*(sp.Rational(19583,42336)*eta**2-sp.Rational(33025,21168)*eta-sp.Rational(20555,10584)+(sp.Rational(1,2)-2*eta)*chi_A**2+delta*chi_A*chi_S+sp.Rational(1,2)*chi_S**2)+vomega**5*(delta*(-sp.Rational(19,42)*eta-sp.Rational(34,21))*chi_A+(sp.Rational(209,126)*eta**2+sp.Rational(49,18)*eta-sp.Rational(34,21))*chi_S)+vomega**6*(sp.Rational(10620745,39118464)*eta**3-sp.Rational(6292061,3259872)*eta**2+sp.Rational(41,192)*sp.pi**2*eta-sp.Rational(48993925,9779616)*eta-sp.Rational(428,105)*eulerlog2+sp.Rational(1556919113,122245200)+delta*(sp.Rational(89,126)-sp.Rational(781,252)*eta)*chi_A*chi_S+(-sp.Rational(27,14)*eta**2-sp.Rational(457,504)*eta+sp.Rational(89,252))*chi_A**2+(sp.Rational(10,9)*eta**2-sp.Rational(1817,504)*eta+sp.Rational(89,252))*chi_S**2)+vomega**7*(delta*(sp.Rational(97865,63504)*eta**2+sp.Rational(50140,3969)*eta+sp.Rational(18733,15876))*chi_A+(sp.Rational(50803,63504)*eta**3-sp.Rational(245717,63504)*eta**2+sp.Rational(74749,5292)*eta+sp.Rational(18733,15876))*chi_S+delta*chi_A**3*(sp.Rational(1,3)-sp.Rational(4,3)*eta)+delta*(2*eta+1)*chi_A*chi_S**2+(sp.Rational(-4,1)*eta**2-sp.Rational(3,1)*eta+sp.Rational(1,1))*chi_A**2*chi_S+(eta+sp.Rational(1,3))*chi_S**3)+vomega**8*(sp.Rational(9202,2205)*eulerlog2-sp.Rational(387216563023,160190110080))+vomega**10*(sp.Rational(439877,55566)*eulerlog2-sp.Rational(16094530514677,533967033600))+eta*(21.2*vomega**8+-411*vomega**10)
    f81amp = (rhoNS81)**8
    f82amp = (rho82)**8
    f83amp = (rhoNS83)**8
    f84amp = (rho84)**8
    f85amp = (rhoNS85)**8
    f86amp = (rho86)**8
    f87amp = (rhoNS87)**8
    f88amp = (rho88)**8
    f71amp = (rhoNS71)**7
    f72amp = (rho72)**7
    f73amp = (rhoNS73)**7
    f74amp = (rho74)**7
    f75amp = (rhoNS75)**7
    f76amp = (rho76)**7
    f77amp = (rhoNS77)**7
    f61amp = (rhoNS61)**6
    f62amp = (rho62)**6
    f63amp = (rhoNS63)**6
    f64amp = (rho64)**6
    f65amp = (rhoNS65)**6
    f66amp = (rho66)**6
    f51amp = ((rhoNS51)**5)
    f52amp = (rho52)**5
    f53amp = ((rhoNS53)**5)
    f54amp = (rho54)**5
    f55 = ((rhoNS55)**5 + fspin55)*noneqcond + fspin55_limit*eqcond
    f55amp = f55
    f41amp = ((rhoNS41)**4 + fspin41)*noneqcond + fspin41_limit*eqcond
    f42amp = (rho42)**4
    f43 = ((rhoNS43)**4 + fspin43)*noneqcond + fspin43_limit*eqcond
    f43amp = f43
    f44 = (rho44)**4
    f44amp = f44
    f31amp = ((rhoNS31)**3 + fspin31)*noneqcond + fspin31_limit*eqcond
    f32 = (rho32)**3
    f32amp = f32
    f33 = ((rhoNS33)**3 + fspin33)*noneqcond + fspin33_limit*eqcond
    f33amp = ((rhoNS33)**3 + fspin33amp)*noneqcond + fspin33amp_limit*eqcond
    f21 = ((rhoNS21)**2 + fspin21)*noneqcond + fspin21_limit*eqcond
    f21amp = f21
    f22 = (rho22)**2
    f22amp = f22
    Y82amp = 0.32254835519288305
    Y84amp = 0.3382915688890245
    Y86amp = 0.3764161087284946
    Y88amp = 0.5154289843972844
    Y71amp = 0.31937046138540076
    Y73amp = 0.331899519333737
    Y75amp = 0.3669287245764378
    Y77amp = 0.5000395635705508
    Y62amp = 0.32569524293385776
    Y64amp = 0.3567812628539981
    Y66amp = 0.48308411358006625
    Y51amp = 0.32028164857621516
    Y53amp = 0.34594371914684025
    Y55amp = 0.46413220344085826
    Y55 = 0.46413220344085826*sp.exp(-5*sp.I*phi)
    Y42amp = 0.33452327177864466
    Y44amp = 0.4425326924449826
    Y44 = 0.4425326924449826*sp.exp(-4*sp.I*phi)
    Y31amp = 0.3231801841141506
    Y33amp = 0.4172238236327842
    Y33 = 0.4172238236327842*sp.exp(-3*sp.I*phi)
    Y11amp = 0.3454941494713355
    Y11 = 0.3454941494713355*sp.exp(-sp.I*phi)
    Y22amp = 0.3862742020231896
    Y22 = 0.3862742020231896*sp.exp(-2*sp.I*phi)
    c9 = ((1 - delta)/2)**8 + ((-1)**9)*((1 + delta)/2)**8
    c8 = ((1 - delta)/2)**7 + ((-1)**8)*((1 + delta)/2)**7
    c7 = ((1 - delta)/2)**6 + ((-1)**7)*((1 + delta)/2)**6
    c6 = ((1 - delta)/2)**5 + ((-1)**6)*((1 + delta)/2)**5
    c5 = (((1 - delta)/2)**4 + ((-1)**5)*((1 + delta)/2)**4)*noneqcond + (-sp.Rational(1,2))*eqcond
    c4 = ((1 - delta)/2)**3 + ((-1)**4)*((1 + delta)/2)**3
    c3 = (((1 - delta)/2)**2 + ((-1)**3)*((1 + delta)/2)**2)*noneqcond + (-1)*eqcond
    c2 = ((1 - delta)/2)**1 + ((-1)**2)*((1 + delta)/2)**1
    N81 = (-16*sp.I*sp.pi*(sp.I*1)**8/sp.factorial2(2*8+1))*sp.sqrt( ( (2*8+1)*(8+2)*(8**2 - 1**2) ) / ( (2*8-1)*(8+1)*(8)*(8-1) ) )
    N82 = (8*sp.I*sp.pi*(sp.I*2)**8/sp.factorial2(2*8 + 1))*sp.sqrt( ( (8+1)*(8+2) ) / ( (8)*(8-1) ) )
    N83 = (-16*sp.I*sp.pi*(sp.I*3)**8/sp.factorial2(2*8+1))*sp.sqrt( ( (2*8+1)*(8+2)*(8**2 - 3**2) ) / ( (2*8-1)*(8+1)*(8)*(8-1) ) )
    N84 = (8*sp.I*sp.pi*(sp.I*4)**8/sp.factorial2(2*8 + 1))*sp.sqrt( ( (8+1)*(8+2) ) / ( (8)*(8-1) ) )
    N85 = (-16*sp.I*sp.pi*(sp.I*5)**8/sp.factorial2(2*8+1))*sp.sqrt( ( (2*8+1)*(8+2)*(8**2 - 5**2) ) / ( (2*8-1)*(8+1)*(8)*(8-1) ) )
    N86 = (8*sp.I*sp.pi*(sp.I*6)**8/sp.factorial2(2*8 + 1))*sp.sqrt( ( (8+1)*(8+2) ) / ( (8)*(8-1) ) )
    N87 = (-16*sp.I*sp.pi*(sp.I*7)**8/sp.factorial2(2*8+1))*sp.sqrt( ( (2*8+1)*(8+2)*(8**2 - 7**2) ) / ( (2*8-1)*(8+1)*(8)*(8-1) ) )
    N88 = (8*sp.I*sp.pi*(sp.I*8)**8/sp.factorial2(2*8 + 1))*sp.sqrt( ( (8+1)*(8+2) ) / ( (8)*(8-1) ) )
    N71 = (8*sp.I*sp.pi*(sp.I*1)**7/sp.factorial2(2*7 + 1))*sp.sqrt( ( (7+1)*(7+2) ) / ( (7)*(7-1) ) )
    N72 = (-16*sp.I*sp.pi*(sp.I*2)**7/sp.factorial2(2*7+1))*sp.sqrt( ( (2*7+1)*(7+2)*(7**2 - 2**2) ) / ( (2*7-1)*(7+1)*(7)*(7-1) ) )
    N73 = (8*sp.I*sp.pi*(sp.I*3)**7/sp.factorial2(2*7 + 1))*sp.sqrt( ( (7+1)*(7+2) ) / ( (7)*(7-1) ) )
    N74 = (-16*sp.I*sp.pi*(sp.I*4)**7/sp.factorial2(2*7+1))*sp.sqrt( ( (2*7+1)*(7+2)*(7**2 - 4**2) ) / ( (2*7-1)*(7+1)*(7)*(7-1) ) )
    N75 = (8*sp.I*sp.pi*(sp.I*5)**7/sp.factorial2(2*7 + 1))*sp.sqrt( ( (7+1)*(7+2) ) / ( (7)*(7-1) ) )
    N76 = (-16*sp.I*sp.pi*(sp.I*6)**7/sp.factorial2(2*7+1))*sp.sqrt( ( (2*7+1)*(7+2)*(7**2 - 6**2) ) / ( (2*7-1)*(7+1)*(7)*(7-1) ) )
    N77 = (8*sp.I*sp.pi*(sp.I*7)**7/sp.factorial2(2*7 + 1))*sp.sqrt( ( (7+1)*(7+2) ) / ( (7)*(7-1) ) )
    N61 = (-16*sp.I*sp.pi*(sp.I*1)**6/sp.factorial2(2*6+1))*sp.sqrt( ( (2*6+1)*(6+2)*(6**2 - 1**2) ) / ( (2*6-1)*(6+1)*(6)*(6-1) ) )
    N62 = (8*sp.I*sp.pi*(sp.I*2)**6/sp.factorial2(2*6 + 1))*sp.sqrt( ( (6+1)*(6+2) ) / ( (6)*(6-1) ) )
    N63 = (-16*sp.I*sp.pi*(sp.I*3)**6/sp.factorial2(2*6+1))*sp.sqrt( ( (2*6+1)*(6+2)*(6**2 - 3**2) ) / ( (2*6-1)*(6+1)*(6)*(6-1) ) )
    N64 = (8*sp.I*sp.pi*(sp.I*4)**6/sp.factorial2(2*6 + 1))*sp.sqrt( ( (6+1)*(6+2) ) / ( (6)*(6-1) ) )
    N65 = (-16*sp.I*sp.pi*(sp.I*5)**6/sp.factorial2(2*6+1))*sp.sqrt( ( (2*6+1)*(6+2)*(6**2 - 5**2) ) / ( (2*6-1)*(6+1)*(6)*(6-1) ) )
    N66 = (8*sp.I*sp.pi*(sp.I*6)**6/sp.factorial2(2*6 + 1))*sp.sqrt( ( (6+1)*(6+2) ) / ( (6)*(6-1) ) )
    N51 = (8*sp.I*sp.pi*(sp.I*1)**5/sp.factorial2(2*5 + 1))*sp.sqrt( ( (5+1)*(5+2) ) / ( (5)*(5-1) ) )
    N52 = (-16*sp.I*sp.pi*(sp.I*2)**5/sp.factorial2(2*5+1))*sp.sqrt( ( (2*5+1)*(5+2)*(5**2 - 2**2) ) / ( (2*5-1)*(5+1)*(5)*(5-1) ) )
    N53 = (8*sp.I*sp.pi*(sp.I*3)**5/sp.factorial2(2*5 + 1))*sp.sqrt( ( (5+1)*(5+2) ) / ( (5)*(5-1) ) )
    N54 = (-16*sp.I*sp.pi*(sp.I*4)**5/sp.factorial2(2*5+1))*sp.sqrt( ( (2*5+1)*(5+2)*(5**2 - 4**2) ) / ( (2*5-1)*(5+1)*(5)*(5-1) ) )
    N55 = (8*sp.I*sp.pi*(sp.I*5)**5/sp.factorial2(2*5 + 1))*sp.sqrt( ( (5+1)*(5+2) ) / ( (5)*(5-1) ) )
    N41 = (-16*sp.I*sp.pi*(sp.I*1)**4/sp.factorial2(2*4+1))*sp.sqrt( ( (2*4+1)*(4+2)*(4**2 - 1**2) ) / ( (2*4-1)*(4+1)*(4)*(4-1) ) )
    N42 = (8*sp.I*sp.pi*(sp.I*2)**4/sp.factorial2(2*4 + 1))*sp.sqrt( ( (4+1)*(4+2) ) / ( (4)*(4-1) ) )
    N43 = (-16*sp.I*sp.pi*(sp.I*3)**4/sp.factorial2(2*4+1))*sp.sqrt( ( (2*4+1)*(4+2)*(4**2 - 3**2) ) / ( (2*4-1)*(4+1)*(4)*(4-1) ) )
    N44 = (8*sp.I*sp.pi*(sp.I*4)**4/sp.factorial2(2*4 + 1))*sp.sqrt( ( (4+1)*(4+2) ) / ( (4)*(4-1) ) )
    N31 = (8*sp.I*sp.pi*(sp.I*1)**3/sp.factorial2(2*3 + 1))*sp.sqrt( ( (3+1)*(3+2) ) / ( (3)*(3-1) ) )
    N32 = (-16*sp.I*sp.pi*(sp.I*2)**3/sp.factorial2(2*3+1))*sp.sqrt( ( (2*3+1)*(3+2)*(3**2 - 2**2) ) / ( (2*3-1)*(3+1)*(3)*(3-1) ) )
    N33 = (8*sp.I*sp.pi*(sp.I*3)**3/sp.factorial2(2*3 + 1))*sp.sqrt( ( (3+1)*(3+2) ) / ( (3)*(3-1) ) )
    N21 = (-16*sp.I*sp.pi*(sp.I*1)**2/sp.factorial2(2*2+1))*sp.sqrt( ( (2*2+1)*(2+2)*(2**2 - 1**2) ) / ( (2*2-1)*(2+1)*(2)*(2-1) ) )
    N22 = (8*sp.I*sp.pi*(sp.I*2)**2/sp.factorial2(2*2 + 1))*sp.sqrt( ( (2+1)*(2+2) ) / ( (2)*(2-1) ) )
    N81amp = sp.Abs(N81)
    N82amp = sp.Abs(N82)
    N83amp = sp.Abs(N83)
    N84amp = sp.Abs(N84)
    N85amp = sp.Abs(N85)
    N86amp = sp.Abs(N86)
    N87amp = sp.Abs(N87)
    N88amp = sp.Abs(N88)
    N71amp = sp.Abs(N71)
    N72amp = sp.Abs(N72)
    N73amp = sp.Abs(N73)
    N74amp = sp.Abs(N74)
    N75amp = sp.Abs(N75)
    N76amp = sp.Abs(N76)
    N77amp = sp.Abs(N77)
    N61amp = sp.Abs(N61)
    N62amp = sp.Abs(N62)
    N63amp = sp.Abs(N63)
    N64amp = sp.Abs(N64)
    N65amp = sp.Abs(N65)
    N66amp = sp.Abs(N66)
    N51amp = sp.Abs(N51)
    N52amp = sp.Abs(N52)
    N53amp = sp.Abs(N53)
    N54amp = sp.Abs(N54)
    N55amp = sp.Abs(N55)
    N41amp = sp.Abs(N41)
    N42amp = sp.Abs(N42)
    N43amp = sp.Abs(N43)
    N44amp = sp.Abs(N44)
    N31amp = sp.Abs(N31)
    N32amp = sp.Abs(N32)
    N33amp = sp.Abs(N33)
    N21amp = sp.Abs(N21)
    N22amp = sp.Abs(N22)
    r0 = 2/sp.sqrt(sp.exp(1))
    b8 = -2*khat8
    b7 = -2*khat7
    b6 = -2*khat6
    b5 = -2*khat5
    b4 = -2*khat4
    b3 = -2*khat3
    b2 = -2*khat2
    b1 = -2*khat1
    T81prodfac = (1**2 + b1**2)*(2**2 + b1**2)*(3**2 + b1**2)*(4**2 + b1**2)*(5**2 + b1**2)*(6**2 + b1**2)*(7**2 + b1**2)*(8**2 + b1**2)
    T82prodfac = (1**2 + b2**2)*(2**2 + b2**2)*(3**2 + b2**2)*(4**2 + b2**2)*(5**2 + b2**2)*(6**2 + b2**2)*(7**2 + b2**2)*(8**2 + b2**2)
    T83prodfac = (1**2 + b3**2)*(2**2 + b3**2)*(3**2 + b3**2)*(4**2 + b3**2)*(5**2 + b3**2)*(6**2 + b3**2)*(7**2 + b3**2)*(8**2 + b3**2)
    T84prodfac = (1**2 + b4**2)*(2**2 + b4**2)*(3**2 + b4**2)*(4**2 + b4**2)*(5**2 + b4**2)*(6**2 + b4**2)*(7**2 + b4**2)*(8**2 + b4**2)
    T85prodfac = (1**2 + b5**2)*(2**2 + b5**2)*(3**2 + b5**2)*(4**2 + b5**2)*(5**2 + b5**2)*(6**2 + b5**2)*(7**2 + b5**2)*(8**2 + b5**2)
    T86prodfac = (1**2 + b6**2)*(2**2 + b6**2)*(3**2 + b6**2)*(4**2 + b6**2)*(5**2 + b6**2)*(6**2 + b6**2)*(7**2 + b6**2)*(8**2 + b6**2)
    T87prodfac = (1**2 + b7**2)*(2**2 + b7**2)*(3**2 + b7**2)*(4**2 + b7**2)*(5**2 + b7**2)*(6**2 + b7**2)*(7**2 + b7**2)*(8**2 + b7**2)
    T88prodfac = (1**2 + b8**2)*(2**2 + b8**2)*(3**2 + b8**2)*(4**2 + b8**2)*(5**2 + b8**2)*(6**2 + b8**2)*(7**2 + b8**2)*(8**2 + b8**2)
    T71prodfac = (1**2 + b1**2)*(2**2 + b1**2)*(3**2 + b1**2)*(4**2 + b1**2)*(5**2 + b1**2)*(6**2 + b1**2)*(7**2 + b1**2)
    T72prodfac = (1**2 + b2**2)*(2**2 + b2**2)*(3**2 + b2**2)*(4**2 + b2**2)*(5**2 + b2**2)*(6**2 + b2**2)*(7**2 + b2**2)
    T73prodfac = (1**2 + b3**2)*(2**2 + b3**2)*(3**2 + b3**2)*(4**2 + b3**2)*(5**2 + b3**2)*(6**2 + b3**2)*(7**2 + b3**2)
    T74prodfac = (1**2 + b4**2)*(2**2 + b4**2)*(3**2 + b4**2)*(4**2 + b4**2)*(5**2 + b4**2)*(6**2 + b4**2)*(7**2 + b4**2)
    T75prodfac = (1**2 + b5**2)*(2**2 + b5**2)*(3**2 + b5**2)*(4**2 + b5**2)*(5**2 + b5**2)*(6**2 + b5**2)*(7**2 + b5**2)
    T76prodfac = (1**2 + b6**2)*(2**2 + b6**2)*(3**2 + b6**2)*(4**2 + b6**2)*(5**2 + b6**2)*(6**2 + b6**2)*(7**2 + b6**2)
    T77prodfac = (1**2 + b7**2)*(2**2 + b7**2)*(3**2 + b7**2)*(4**2 + b7**2)*(5**2 + b7**2)*(6**2 + b7**2)*(7**2 + b7**2)
    T61prodfac = (1**2 + b1**2)*(2**2 + b1**2)*(3**2 + b1**2)*(4**2 + b1**2)*(5**2 + b1**2)*(6**2 + b1**2)
    T62prodfac = (1**2 + b2**2)*(2**2 + b2**2)*(3**2 + b2**2)*(4**2 + b2**2)*(5**2 + b2**2)*(6**2 + b2**2)
    T63prodfac = (1**2 + b3**2)*(2**2 + b3**2)*(3**2 + b3**2)*(4**2 + b3**2)*(5**2 + b3**2)*(6**2 + b3**2)
    T64prodfac = (1**2 + b4**2)*(2**2 + b4**2)*(3**2 + b4**2)*(4**2 + b4**2)*(5**2 + b4**2)*(6**2 + b4**2)
    T65prodfac = (1**2 + b5**2)*(2**2 + b5**2)*(3**2 + b5**2)*(4**2 + b5**2)*(5**2 + b5**2)*(6**2 + b5**2)
    T66prodfac = (1**2 + b6**2)*(2**2 + b6**2)*(3**2 + b6**2)*(4**2 + b6**2)*(5**2 + b6**2)*(6**2 + b6**2)
    T51prodfac = (1**2 + b1**2)*(2**2 + b1**2)*(3**2 + b1**2)*(4**2 + b1**2)*(5**2 + b1**2)
    T52prodfac = (1**2 + b2**2)*(2**2 + b2**2)*(3**2 + b2**2)*(4**2 + b2**2)*(5**2 + b2**2)
    T53prodfac = (1**2 + b3**2)*(2**2 + b3**2)*(3**2 + b3**2)*(4**2 + b3**2)*(5**2 + b3**2)
    T54prodfac = (1**2 + b4**2)*(2**2 + b4**2)*(3**2 + b4**2)*(4**2 + b4**2)*(5**2 + b4**2)
    T55prodfac = (1**2 + b5**2)*(2**2 + b5**2)*(3**2 + b5**2)*(4**2 + b5**2)*(5**2 + b5**2)
    T41prodfac = (1**2 + b1**2)*(2**2 + b1**2)*(3**2 + b1**2)*(4**2 + b1**2)
    T42prodfac = (1**2 + b2**2)*(2**2 + b2**2)*(3**2 + b2**2)*(4**2 + b2**2)
    T43prodfac = (1**2 + b3**2)*(2**2 + b3**2)*(3**2 + b3**2)*(4**2 + b3**2)
    T44prodfac = (1**2 + b4**2)*(2**2 + b4**2)*(3**2 + b4**2)*(4**2 + b4**2)
    T31prodfac = (1**2 + b1**2)*(2**2 + b1**2)*(3**2 + b1**2)
    T32prodfac = (1**2 + b2**2)*(2**2 + b2**2)*(3**2 + b2**2)
    T33prodfac = (1**2 + b3**2)*(2**2 + b3**2)*(3**2 + b3**2)
    T21prodfac = (1**2 + b1**2)*(2**2 + b1**2)
    T22prodfac = (1**2 + b2**2)*(2**2 + b2**2)
    T8prefac = 2*sp.pi*b8/(sp.exp(sp.pi*b8) - sp.exp(-sp.pi*b8))
    T7prefac = 2*sp.pi*b7/(sp.exp(sp.pi*b7) - sp.exp(-sp.pi*b7))
    T6prefac = 2*sp.pi*b6/(sp.exp(sp.pi*b6) - sp.exp(-sp.pi*b6))
    T5prefac = 2*sp.pi*b5/(sp.exp(sp.pi*b5) - sp.exp(-sp.pi*b5))
    T4prefac = 2*sp.pi*b4/(sp.exp(sp.pi*b4) - sp.exp(-sp.pi*b4))
    T3prefac = 2*sp.pi*b3/(sp.exp(sp.pi*b3) - sp.exp(-sp.pi*b3))
    T2prefac = 2*sp.pi*b2/(sp.exp(sp.pi*b2) - sp.exp(-sp.pi*b2))
    T1prefac = 2*sp.pi*b1/(sp.exp(sp.pi*b1) - sp.exp(-sp.pi*b1))
    gamma_amp_81 = sp.sqrt(T1prefac*T81prodfac)
    gamma_amp_82 = sp.sqrt(T2prefac*T82prodfac)
    gamma_amp_83 = sp.sqrt(T3prefac*T83prodfac)
    gamma_amp_84 = sp.sqrt(T4prefac*T84prodfac)
    gamma_amp_85 = sp.sqrt(T5prefac*T85prodfac)
    gamma_amp_86 = sp.sqrt(T6prefac*T86prodfac)
    gamma_amp_87 = sp.sqrt(T7prefac*T87prodfac)
    gamma_amp_88 = sp.sqrt(T8prefac*T88prodfac)
    gamma_amp_71 = sp.sqrt(T1prefac*T71prodfac)
    gamma_amp_72 = sp.sqrt(T2prefac*T72prodfac)
    gamma_amp_73 = sp.sqrt(T3prefac*T73prodfac)
    gamma_amp_74 = sp.sqrt(T4prefac*T74prodfac)
    gamma_amp_75 = sp.sqrt(T5prefac*T75prodfac)
    gamma_amp_76 = sp.sqrt(T6prefac*T76prodfac)
    gamma_amp_77 = sp.sqrt(T7prefac*T77prodfac)
    gamma_amp_61 = sp.sqrt(T1prefac*T61prodfac)
    gamma_amp_62 = sp.sqrt(T2prefac*T62prodfac)
    gamma_amp_63 = sp.sqrt(T3prefac*T63prodfac)
    gamma_amp_64 = sp.sqrt(T4prefac*T64prodfac)
    gamma_amp_65 = sp.sqrt(T5prefac*T65prodfac)
    gamma_amp_66 = sp.sqrt(T6prefac*T66prodfac)
    gamma_amp_51 = sp.sqrt(T1prefac*T51prodfac)
    gamma_amp_52 = sp.sqrt(T2prefac*T52prodfac)
    gamma_amp_53 = sp.sqrt(T3prefac*T53prodfac)
    gamma_amp_54 = sp.sqrt(T4prefac*T54prodfac)
    gamma_amp_55 = sp.sqrt(T5prefac*T55prodfac)
    gamma_amp_41 = sp.sqrt(T1prefac*T41prodfac)
    gamma_amp_42 = sp.sqrt(T2prefac*T42prodfac)
    gamma_amp_43 = sp.sqrt(T3prefac*T43prodfac)
    gamma_amp_44 = sp.sqrt(T4prefac*T44prodfac)
    gamma_amp_31 = sp.sqrt(T1prefac*T31prodfac)
    gamma_amp_32 = sp.sqrt(T2prefac*T32prodfac)
    gamma_amp_33 = sp.sqrt(T3prefac*T33prodfac)
    gamma_amp_21 = sp.sqrt(T1prefac*T21prodfac)
    gamma_amp_22 = sp.sqrt(T2prefac*T22prodfac)
    T81amp = gamma_amp_81*sp.exp(sp.pi*khat1)/sp.factorial(8)
    T82amp = gamma_amp_82*sp.exp(sp.pi*khat2)/sp.factorial(8)
    T83amp = gamma_amp_83*sp.exp(sp.pi*khat3)/sp.factorial(8)
    T84amp = gamma_amp_84*sp.exp(sp.pi*khat4)/sp.factorial(8)
    T85amp = gamma_amp_85*sp.exp(sp.pi*khat5)/sp.factorial(8)
    T86amp = gamma_amp_86*sp.exp(sp.pi*khat6)/sp.factorial(8)
    T87amp = gamma_amp_87*sp.exp(sp.pi*khat7)/sp.factorial(8)
    T88amp = gamma_amp_88*sp.exp(sp.pi*khat8)/sp.factorial(8)
    T71amp = gamma_amp_71*sp.exp(sp.pi*khat1)/sp.factorial(7)
    T72amp = gamma_amp_72*sp.exp(sp.pi*khat2)/sp.factorial(7)
    T73amp = gamma_amp_73*sp.exp(sp.pi*khat3)/sp.factorial(7)
    T74amp = gamma_amp_74*sp.exp(sp.pi*khat4)/sp.factorial(7)
    T75amp = gamma_amp_75*sp.exp(sp.pi*khat5)/sp.factorial(7)
    T76amp = gamma_amp_76*sp.exp(sp.pi*khat6)/sp.factorial(7)
    T77amp = gamma_amp_77*sp.exp(sp.pi*khat7)/sp.factorial(7)
    T61amp = gamma_amp_61*sp.exp(sp.pi*khat1)/sp.factorial(6)
    T62amp = gamma_amp_62*sp.exp(sp.pi*khat2)/sp.factorial(6)
    T63amp = gamma_amp_63*sp.exp(sp.pi*khat3)/sp.factorial(6)
    T64amp = gamma_amp_64*sp.exp(sp.pi*khat4)/sp.factorial(6)
    T65amp = gamma_amp_65*sp.exp(sp.pi*khat5)/sp.factorial(6)
    T66amp = gamma_amp_66*sp.exp(sp.pi*khat6)/sp.factorial(6)
    T51amp = gamma_amp_51*sp.exp(sp.pi*khat1)/sp.factorial(5)
    T52amp = gamma_amp_52*sp.exp(sp.pi*khat2)/sp.factorial(5)
    T53amp = gamma_amp_53*sp.exp(sp.pi*khat3)/sp.factorial(5)
    T54amp = gamma_amp_54*sp.exp(sp.pi*khat4)/sp.factorial(5)
    T55amp = gamma_amp_55*sp.exp(sp.pi*khat5)/sp.factorial(5)
    T55 = sp.gamma(5 + 1 - 2*sp.I*khat5)*sp.exp(sp.pi*khat5)*(sp.exp(2*sp.I*khat5*sp.log(2*5*(Hreal_prmpphi/eta)*r0)))/sp.factorial(5)
    T41amp = gamma_amp_41*sp.exp(sp.pi*khat1)/sp.factorial(4)
    T42amp = gamma_amp_42*sp.exp(sp.pi*khat2)/sp.factorial(4)
    T43amp = gamma_amp_43*sp.exp(sp.pi*khat3)/sp.factorial(4)
    T43 = sp.gamma(4 + 1 - 2*sp.I*khat3)*sp.exp(sp.pi*khat3)*(sp.exp(2*sp.I*khat3*sp.log(2*3*(Hreal_prmpphi/eta)*r0)))/sp.factorial(4)
    T44amp = gamma_amp_44*sp.exp(sp.pi*khat4)/sp.factorial(4)
    T44 = sp.gamma(4 + 1 - 2*sp.I*khat4)*sp.exp(sp.pi*khat4)*(sp.exp(2*sp.I*khat4*sp.log(2*4*(Hreal_prmpphi/eta)*r0)))/sp.factorial(4)
    T31amp = gamma_amp_31*sp.exp(sp.pi*khat1)/sp.factorial(3)
    T32amp = gamma_amp_32*sp.exp(sp.pi*khat2)/sp.factorial(3)
    T32 = sp.gamma(3 + 1 - 2*sp.I*khat2)*sp.exp(sp.pi*khat2)*(sp.exp(2*sp.I*khat2*sp.log(2*2*(Hreal_prmpphi/eta)*r0)))/sp.factorial(3)
    T33amp = gamma_amp_33*sp.exp(sp.pi*khat3)/sp.factorial(3)
    T33 = sp.gamma(3 + 1 - 2*sp.I*khat3)*sp.exp(sp.pi*khat3)*(sp.exp(2*sp.I*khat3*sp.log(2*3*(Hreal_prmpphi/eta)*r0)))/sp.factorial(3)
    T21amp = gamma_amp_21*sp.exp(sp.pi*khat1)/sp.factorial(2)
    T21 = sp.gamma(2 + 1 - 2*sp.I*khat1)*sp.exp(sp.pi*khat1)*(sp.exp(2*sp.I*khat1*sp.log(2*1*(Hreal_prmpphi/eta)*r0)))/sp.factorial(2)
    T22amp = gamma_amp_22*sp.exp(sp.pi*khat2)/sp.factorial(2)
    T22 = sp.gamma(2 + 1 - 2*sp.I*khat2)*sp.exp(sp.pi*khat2)*(sp.exp(2*sp.I*khat2*sp.log(2*2*(Hreal_prmpphi/eta)*r0)))/sp.factorial(2)
    source_odd = vomega*pphi
    source_even = Heff_for_flux
    hN81amp = eta*N81amp*sp.Abs(c9)*vphi**9*Y71amp
    hN82amp = eta*N82amp*sp.Abs(c8)*vphi**8*Y82amp
    hN83amp = eta*N83amp*sp.Abs(c9)*vphi**9*Y73amp
    hN84amp = eta*N84amp*sp.Abs(c8)*vphi**8*Y84amp
    hN85amp = eta*N85amp*sp.Abs(c9)*vphi**9*Y75amp
    hN86amp = eta*N86amp*sp.Abs(c8)*vphi**8*Y86amp
    hN87amp = eta*N87amp*sp.Abs(c9)*vphi**9*Y77amp
    hN88amp = eta*N88amp*sp.Abs(c8)*vphi**8*Y88amp
    hN71amp = eta*N71amp*sp.Abs(c7)*vphi**7*Y71amp
    hN72amp = eta*N72amp*sp.Abs(c8)*vphi**8*Y62amp
    hN73amp = eta*N73amp*sp.Abs(c7)*vphi**7*Y73amp
    hN74amp = eta*N74amp*sp.Abs(c8)*vphi**8*Y64amp
    hN75amp = eta*N75amp*sp.Abs(c7)*vphi**7*Y75amp
    hN76amp = eta*N76amp*sp.Abs(c8)*vphi**8*Y66amp
    hN77amp = eta*N77amp*sp.Abs(c7)*vphi**7*Y77amp
    hN61amp = eta*N61amp*sp.Abs(c7)*vphi**7*Y51amp
    hN62amp = eta*N62amp*sp.Abs(c6)*vphi**6*Y62amp
    hN63amp = eta*N63amp*sp.Abs(c7)*vphi**7*Y53amp
    hN64amp = eta*N64amp*sp.Abs(c6)*vphi**6*Y64amp
    hN65amp = eta*N65amp*sp.Abs(c7)*vphi**7*Y55amp
    hN66amp = eta*N66amp*sp.Abs(c6)*vphi**6*Y66amp
    hN51amp = eta*N51amp*sp.Abs(c5)*vphi**5*Y51amp
    hN52amp = eta*N52amp*sp.Abs(c6)*vphi**6*Y42amp
    hN53amp = eta*N53amp*sp.Abs(c5)*vphi**5*Y53amp
    hN54amp = eta*N54amp*sp.Abs(c6)*vphi**6*Y44amp
    hN55amp = eta*N55amp*sp.Abs(c5)*vphi**5*Y55amp
    hN55 = eta*N55*c5*vphi**5*Y55
    hN41amp = eta*N41amp*sp.Abs(c5)*vphi**5*Y31amp
    hN42amp = eta*N42amp*sp.Abs(c4)*vphi**4*Y42amp
    hN43amp = eta*N43amp*sp.Abs(c5)*vphi**5*Y33amp
    hN43 = eta*N43*c5*vphi**5*Y33
    hN44amp = eta*N44amp*sp.Abs(c4)*vphi**4*Y44amp
    hN44 = eta*N44*c4*vphi**4*Y44
    hN31amp = eta*N31amp*sp.Abs(c3)*vphi**3*Y31amp
    hN32amp = eta*N32amp*sp.Abs(c4)*vphi**4*Y22amp
    hN32 = eta*N32*c4*vphi**4*Y22
    hN33amp = eta*N33amp*sp.Abs(c3)*vphi**3*Y33amp
    hN33 = eta*N33*c3*vphi**3*Y33
    hN21amp = eta*N21amp*sp.Abs(c3)*vphi**3*Y11amp
    hN21 = eta*N21*c3*vphi**3*Y11
    hN22amp = eta*N22amp*sp.Abs(c2)*vphi**2*Y22amp
    hN22 = eta*N22*c2*vphi**2*Y22
    h81amp = hN81amp*source_odd*T81amp*f81amp
    h82amp = hN82amp*source_even*T82amp*f82amp
    h83amp = hN83amp*source_odd*T83amp*f83amp
    h84amp = hN84amp*source_even*T84amp*f84amp
    h85amp = hN85amp*source_odd*T85amp*f85amp
    h86amp = hN86amp*source_even*T86amp*f86amp
    h87amp = hN87amp*source_odd*T87amp*f87amp
    h88amp = hN88amp*source_even*T88amp*f88amp
    h71amp = hN71amp*source_even*T71amp*f71amp
    h72amp = hN72amp*source_odd*T72amp*f72amp
    h73amp = hN73amp*source_even*T73amp*f73amp
    h74amp = hN74amp*source_odd*T74amp*f74amp
    h75amp = hN75amp*source_even*T75amp*f75amp
    h76amp = hN76amp*source_odd*T76amp*f76amp
    h77amp = hN77amp*source_even*T77amp*f77amp
    h61amp = hN61amp*source_odd*T61amp*f61amp
    h62amp = hN62amp*source_even*T62amp*f62amp
    h63amp = hN63amp*source_odd*T63amp*f63amp
    h64amp = hN64amp*source_even*T64amp*f64amp
    h65amp = hN65amp*source_odd*T65amp*f65amp
    h66amp = hN66amp*source_even*T66amp*f66amp
    h51amp = hN51amp*source_even*T51amp*f51amp
    h52amp = hN52amp*source_odd*T52amp*f52amp
    h53amp = hN53amp*source_even*T53amp*f53amp
    h54amp = hN54amp*source_odd*T54amp*f54amp
    h55amp = hN55amp*source_even*T55amp*f55amp
    h55 = hN55*source_even*T55*f55*sp.exp(1j*delta55)
    h41amp = hN41amp*source_odd*T41amp*f41amp
    h42amp = hN42amp*source_even*T42amp*f42amp
    h43amp = hN43amp*source_odd*T43amp*f43amp
    h43 = hN43*source_odd*T43*f43*sp.exp(1j*delta43)
    h44amp = hN44amp*source_even*T44amp*f44amp
    h44 = hN44*source_even*T44*f44*sp.exp(1j*delta44)
    h31amp = hN31amp*source_even*T31amp*f31amp
    h32amp = hN32amp*source_odd*T32amp*f32amp
    h32 = hN32*source_odd*T32*f32*sp.exp(1j*delta32)
    h33amp = hN33amp*source_even*T33amp*f33amp
    h33 = hN33*source_even*T33*f33*sp.exp(1j*delta33)
    h21amp = hN21amp*source_odd*T21amp*f21amp
    h21 = hN21*source_odd*T21*f21*sp.exp(1j*delta21)
    h22amp = hN22amp*source_even*T22amp*f22amp
    h22 = hN22*source_even*T22*f22*sp.exp(1j*delta22)
    flux=-((Hreal_prmpphi/eta)**2/8/sp.pi)*(2*2*h22amp**2+1*1*h21amp**2+3*3*h33amp**2+2*2*h32amp**2+1*1*h31amp**2+4*4*h44amp**2+3*3*h43amp**2+2*2*h42amp**2+1*1*h41amp**2+5*5*h55amp**2+4*4*h54amp**2+3*3*h53amp**2+2*2*h52amp**2+1*1*h51amp**2+6*6*h66amp**2+5*5*h65amp**2+4*4*h64amp**2+3*3*h63amp**2+2*2*h62amp**2+1*1*h61amp**2+7*7*h77amp**2+6*6*h76amp**2+5*5*h75amp**2+4*4*h74amp**2+3*3*h73amp**2+2*2*h72amp**2+1*1*h71amp**2+8*8*h88amp**2+7*7*h87amp**2+6*6*h86amp**2+5*5*h85amp**2+4*4*h84amp**2+3*3*h83amp**2+2*2*h82amp**2+1*1*h81amp**2)
    ic_dissipative = xi*Hreal_prmprstar/eta + flux*Hreal_prmr_prmpphi/Hreal_prmpphi/Hreal_prmr_prmpphi
    return c_codegen(ic_dissipative,'ic_dissipative',include_braces = False, verbose = False)