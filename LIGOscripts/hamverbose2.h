  // ======================================= Begin Sid Hamiltonian Verbose 2 ======================================= /
  printf("{'x': %.16e, 'y': %.16e, 'z': %.16e, 'S1x':  %.16e, 'S1y': %.16e, 'S1z': %.16e, 'S2x': %.16e, 'S2y': %.16e, 'S2z': %.16e, 'p1': %.16e, 'p2': %.16e, 'p3': %.16e,'tortoise': %d\n}", (double)x->data[0], (double)x->data[1], (double)x->data[2],(double)s1Vec->data[0], (double)s1Vec->data[1], (double)s1Vec->data[2],(double)s2Vec->data[0],(double)s2Vec->data[1], (double)s2Vec->data[2],(double)p->data[0], (double)p->data[1], (double)p->data[2],tortoise);
  printf("{'Hreal' file : %.16e}\n\n",values[14]);
  printf("eta = %.16e \n", eta);
  printf("r = %.16e \n", r);
  printf("u = %.16e \n", u);
  printf("sigmastar3 = %.16e\n", sigmaStar->data[2]);
  printf("sigmastar2 = %.16e\n", sigmaStar->data[1]);
  printf("sigmastar1 = %.16e\n", sigmaStar->data[0]);
  printf("a = %.16e \n",a);
  printf("L3 = %.16e \n",L[2]);
  printf("L2  = %.16e \n",L[1] );
  printf("L1  = %.16e \n",L[0] );
  printf("Lnorm = %.16e \n",L_mag);
  printf("Lhat3 = %.16e \n",Lhat[2]);
  printf("Lhat2  = %.16e \n",Lhat[1] );
  printf("Lhat1  = %.16e \n",Lhat[0] );
  printf("S2dotLhat = %.16e \n",tempS2_p);
  printf("S1dotLhat  = %.16e \n",tempS1_p );
  printf("S1perp3 = %.16e \n",S1_perp[2]);
  printf("S1perp2  = %.16e \n",S1_perp[1] );
  printf("S1perp1  = %.16e \n",S1_perp[0] );
  printf("S2perp3 = %.16e \n",S2_perp[2]);
  printf("S2perp2  = %.16e \n",S2_perp[1] );
  printf("S2perp1  = %.16e \n",S2_perp[0] );
  printf("Sperp3 = %.16e \n",S_perp[2]);
  printf("Sperp2  = %.16e \n",S_perp[1] );
  printf("Sperp1  = %.16e \n",S_perp[0] );
  printf("n3 = %.16e \n",nz );
  printf("n2  = %.16e \n",ny );
  printf("n1  = %.16e \n",nx );
  printf("e33 = %.16e \n",e3_z);
  printf("e32  = %.16e \n",e3_y );
  printf("e31  = %.16e \n",e3_x );
  printf("xi3 = %.16e \n",xi_z);
  printf("xi2  = %.16e \n",xi_y );
  printf("xi1  = %.16e \n",xi_x );
  printf("v3 = %.16e \n",vz);
  printf("v2  = %.16e \n",vy );
  printf("v1  = %.16e \n",vx );
  printf("costheta = %.16e \n",costheta);
  printf("xisq  = %.16e \n",xi2);
  printf("w2 = %.16e \n",w2);
  printf("Sigma = %.16e \n",rho2);
  printf("Dinv = %.16e \n",D);
  printf("omegatilde = %.16e \n",ww);
  printf("chi = %.16e \n",chi);
  printf("K = %.16e \n",coeffs->KK);
  printf("etaKminus1  = %.16e \n",1./invm1PlusetaKK );
  printf("Delta0 = %.16e \n",coeffs->k0);
  printf("Delta1 = %.16e \n",coeffs->k1);
  printf("Delta2 = %.16e \n",coeffs->k2);
  printf("Delta3 = %.16e \n",coeffs->k3);
  printf("Delta4 = %.16e \n",coeffs->k4);
  printf("Delta5 = %.16e \n",coeffs->k5);
  printf("Delta5l = %.16e \n",coeffs->k5l);
  printf("logarg = %.16e \n",logarg);
  printf("Deltaucalib  = %.16e \n",logTerms);
  printf("Deltaubar = %.16e \n",bulk);
  printf("Deltau = %.16e \n",deltaU);
  printf("Deltauprime  = %.16e \n",-u*u*deltaU_u );
  printf("Deltatprime = %.16e \n",deltaT_r);
  printf("Deltat = %.16e \n",deltaT);
  printf("Deltar = %.16e \n",deltaR);
  printf("Lambdat = %.16e \n",Lambda);
  printf("csi = %.16e \n",csi);
  printf("csi1 = %.16e \n",csi1);
  printf("csi2 = %.16e \n",csi2);
  printf("prT = %.16e \n",prT);
  printf("phat3 = %.16e \n",tmpP[2] );
  printf("phat2  = %.16e \n",tmpP[1] );
  printf("phat1  = %.16e \n",tmpP[0] );
  printf("pdotxir = %.16e \n",pxir);
  printf("pdotn = %.16e \n",pn);
  printf("pdotvr = %.16e \n",pvr);
  printf("pphi = %.16e \n",pf);
  printf("DrSipn2 = %.16e \n",pn2);
  printf("Q = %.16e \n",Q);
  printf("Qminus1  = %.16e \n",pp );
  printf("expmu  = %.16e \n",expMU );
  printf("Brtilde = %.16e \n",BR);
  printf("Btilde = %.16e \n",B);
  printf("expnu  = %.16e \n",expnu );
  printf("omega = %.16e \n",w);
  printf("omegatildeprime = %.16e \n",ww_r);
  printf("Lambdatprime = %.16e \n",Lambda_r);
  printf("mucostheta = %.16e \n",mucos);
  printf("nucostheta = %.16e \n",nucos);
  printf("omegacostheta = %.16e \n",wcos);
  printf("mur = %.16e \n",mur);
  printf("nur = %.16e \n",nur);
  printf("omegar = %.16e \n",wr);
  printf("dSO = %.16e \n",coeffs->d1v2);
  printf("sigmacoeffTerm3  = %.16e \n",coeffs->d1v2*eta*u3 );
  printf("sigmacoeffTerm2 = %.16e \n",sMultiplier2);
  printf("sigmacoeffTerm1 = %.16e \n",eta*((-8. - 3.*r*(12.*pn2 - pp)))*(1./12.)*u);
  printf("sigmastarcoeffTerm2 = %.16e \n",sMultiplier1);
  printf("sigmastarcoeffTerm1 = %.16e \n",eta*((14. + (- 30.*pn2 + 4.*pp)*r))*(1./12.)*u);
  printf("Deltasigmastar3 = %.16e \n",deltaSigmaStar_z);
  printf("Deltasigmastar2  = %.16e \n",deltaSigmaStar_y);
  printf("Deltasigmastar1  = %.16e \n",deltaSigmaStar_x);
  printf("Sstar3 = %.16e \n",sz);
  printf("Sstar2  = %.16e \n",sy);
  printf("Sstar1  = %.16e \n",sx);
  printf("SdotSkerrhat = %.16e \n",s3);
  printf("Sdotn = %.16e \n",sn);
  printf("Sdotv = %.16e \n",sv);
  printf("Sdotxi = %.16e \n",sxi);
  printf("Q4 = %.16e \n",((prT*prT)*(prT*prT))*qq*u2);
  printf("gammappsum = %.16e \n",ptheta2*invrho2 + pf*pf*rho2*invLambda*invxi2 + pr*pr*deltaR*invrho2);
  printf("Hnsradicand = %.16e \n",(1. + ((prT*prT)*(prT*prT))*qq*u2 + ptheta2*invrho2 + pf*pf*rho2*invLambda*invxi2 + pr*pr*deltaR*invrho2));
  printf("alpha = %.16e \n",sqrt((rho2*deltaT) * invLambda));
  printf("betapsum = %.16e \n",pf*ww*invLambda);
  printf("HssTerm1 = %.16e \n",w*s3);
  printf("Hss = %.16e \n", (w*s3 + Hwr*wr + Hwcos*wcos));
  printf("HsoTerm1 = %.16e \n",HSOL);
  printf("Hso = %.16e \n",(HSOL+HSONL));
  printf("Hd = %.16e \n", (-1.*Hss));
  printf("Hns = %.16e\n", Hns);
  printf("Hs = %.16e\n", Hs);
  printf("dSS = %.16e\n", coeffs->dheffSSv2);
  printf("Heff  = %.16e\n", H );
  printf("Hreal = %.16e\n", Hreal);
  int siddebughamverbose = 1;
  if (siddebughamverbose){
  exit(0);
  }
// ============================================ End Sid Hamiltonian Verbose 2 =============================== //
