from __future__ import division
import numpy as np
def compute_d2Hdp2dx(m1, m2, eta, x, y, z, p1, p2, p3, S1x, S1y, S1z, S2x, S2y, S2z, KK, k0, k1, dSO, dSS, tortoise, EMgamma):
    M = m1+m2
    mu = m1*m2/M
    eta = mu/M
    r = np.sqrt(x*x+y*y+z*z)
    u = 1/r
    sigmastar3 = m2/m1*S1z+m1/m2*S2z
    sigmastar2 = m2/m1*S1y+m1/m2*S2y
    sigmastar1 = m2/m1*S1x+m1/m2*S2x
    sigma3 = S1z+S2z
    sigma2 = S1y+S2y
    sigma1 = S1x+S2x
    Skerr3 = sigma3
    Skerr2 = sigma2
    Skerr1 = sigma1
    Skerrmag = np.sqrt(Skerr1*Skerr1+Skerr2*Skerr2+Skerr3*Skerr3)
    Skerrhat3 = Skerr3/Skerrmag
    Skerrhat2 = Skerr2/Skerrmag
    Skerrhat1 = Skerr1/Skerrmag
    a = Skerrmag
    n3 = z/r
    n2 = y/r
    n1 = x/r
    e33 = Skerrhat3
    e32 = Skerrhat2
    e31 = Skerrhat1
    xi3 = e31*n2-e32*n1
    xi2 = -e31*n3+e33*n1
    xi1 = e32*n3-e33*n2
    v3 = n1*xi2-n2*xi1
    v2 = n3*xi1-n1*xi3
    v1 = n2*xi3-n3*xi2
    costheta = e31*n1+e32*n2+e33*n3
    sin2theta = 1-costheta*costheta
    xisq = sin2theta
    w2 = a*a+r*r
    Sigma = r*r+a*a*costheta*costheta
    Dinv = 1+np.log(1+6*eta*u*u+2*(26-3*eta)*eta*u*u*u)
    omegatilde = 2*a*r
    K = 1.712-1.803949138004582*eta-39.77229225266885*eta*eta+103.16588921239249*eta*eta*eta
    etaKminus1 = eta*K-1
    Delta0 = K*(eta*K-2)
    Delta1 = -2*etaKminus1*(K+Delta0)
    Delta2 = np.true_divide(1,2)*Delta1*(Delta1-4*etaKminus1)-a*a*etaKminus1*etaKminus1*Delta0
    Delta3 = -np.true_divide(1,3)*Delta1*Delta1*Delta1+etaKminus1*Delta1*Delta1+Delta2*Delta1-2*etaKminus1*(Delta2-etaKminus1)-a*a*etaKminus1*etaKminus1*Delta1
    Delta4 = np.true_divide(1,12)*(6*a*a*(Delta1*Delta1-2*Delta2)*etaKminus1*etaKminus1+3*Delta1*Delta1*Delta1*Delta1-8*etaKminus1*Delta1*Delta1*Delta1-12*Delta2*Delta1*Delta1+12*(2*etaKminus1*Delta2+Delta3)*Delta1+12*(np.true_divide(94,3)-np.true_divide(41,32)*np.pi*np.pi)*etaKminus1*etaKminus1+6*(Delta2*Delta2-4*Delta3*etaKminus1))
    Delta5 = etaKminus1*etaKminus1*((np.true_divide(-4237,60)+np.true_divide(128,5)*EMgamma+np.true_divide(2275,512)*np.pi*np.pi-np.true_divide(1,3)*a*a*(Delta1*Delta1*Delta1-3*Delta1*Delta2+3*Delta3)-(Delta1*Delta1*Delta1*Delta1*Delta1-5*Delta1*Delta1*Delta1*Delta2+5*Delta1*Delta2*Delta2+5*Delta1*Delta1*Delta3-5*Delta2*Delta3-5*Delta1*Delta4)/(5*etaKminus1*etaKminus1)+(Delta1*Delta1*Delta1*Delta1-4*Delta1*Delta1*Delta2+2*Delta2*Delta2+4*Delta1*Delta3-4*Delta4)/(2*etaKminus1)+np.true_divide(256,5)*np.log(2)))
    Delta5l = etaKminus1*etaKminus1*np.true_divide(64,5)
    logarg = u*(Delta1+u*(Delta2+u*(Delta3+u*(Delta4+u*(Delta5+Delta5l*np.log(u))))))
    Deltaucalib = 1+eta*(Delta0+np.log(1+logarg))
    Deltaucalibprime = -eta*u*u*(Delta1+u*(2*Delta2+u*(3*Delta3+u*(4*Delta4+u*(5*(Delta5+Delta5l*np.log(u)))))))/(1+logarg)
    Deltaubar = a*a*u*u+(2*u+1/etaKminus1)/etaKminus1
    Deltaubarprime = -2*a*a*u*u*u-2*u*u/(etaKminus1)
    Deltau = Deltaubar*Deltaucalib
    Deltauprime = Deltaubarprime*Deltaucalib+Deltaubar*Deltaucalibprime
    Deltatprime = 2*r*Deltau+r*r*Deltauprime
    Deltat = r*r*Deltau
    Deltar = Deltat*Dinv
    Lambt = w2*w2-a*a*Deltat*sin2theta
    csi = np.sqrt(Deltar*Deltat)/w2
    csi1 = 1+(1-abs(1-tortoise))*(csi-1)
    csi2 = 1+(np.true_divide(1,2)-np.true_divide(1,2)*np.sign(np.true_divide(3,2)-tortoise))*(csi-1)
    prT = csi2*(p1*n1+p2*n2+p3*n3)
    phat3 = p3+prT*(1-1/csi1)*n3
    phat2 = p2+prT*(1-1/csi1)*n2
    phat1 = p1+prT*(1-1/csi1)*n1
    pdotxir = (phat1*xi1+phat2*xi2+phat3*xi3)*r
    pdotn = phat1*n1+phat2*n2+phat3*n3
    pdotvr = (phat1*v1+phat2*v2+phat3*v3)*r
    pphi = pdotxir
    Qcoeff2 = 1/(Sigma*sin2theta)
    Qcoeff1 = Sigma/(Lambt*sin2theta)
    DrSipn2 = Deltar*pdotn*pdotn/Sigma
    Q = 1+DrSipn2+Qcoeff1*pdotxir*pdotxir+Qcoeff2*pdotvr*pdotvr
    prT_p2 = csi2*n2
    phat3_p2 = n3*prT_p2*(1-1/csi1)
    phat2_p2 = n2*prT_p2*(1-1/csi1)+1
    phat1_p2 = n1*prT_p2*(1-1/csi1)
    pdotxir_p2 = r*(phat1_p2*xi1+phat2_p2*xi2+phat3_p2*xi3)
    pdotn_p2 = n1*phat1_p2+n2*phat2_p2+n3*phat3_p2
    pdotvr_p2 = r*(phat1_p2*v1+phat2_p2*v2+phat3_p2*v3)
    pphi_p2 = pdotxir_p2
    DrSipn2_p2 = 2*Deltar*pdotn*pdotn_p2/Sigma
    Q_p2 = DrSipn2_p2+2*Qcoeff1*pdotxir*pdotxir_p2+2*Qcoeff2*pdotvr*pdotvr_p2
    rprm_x = x/np.sqrt(x**2 + y**2 + z**2)
    uprm_x = -rprm_x/r**2
    n3prm_x = -rprm_x*z/r**2
    n2prm_x = -rprm_x*y/r**2
    n1prm_x = 1/r - rprm_x*x/r**2
    xi3prm_x = e31*n2prm_x - e32*n1prm_x
    xi2prm_x = -e31*n3prm_x + e33*n1prm_x
    xi1prm_x = e32*n3prm_x - e33*n2prm_x
    v3prm_x = n1*xi2prm_x + n1prm_x*xi2 - n2*xi1prm_x - n2prm_x*xi1
    v2prm_x = -n1*xi3prm_x - n1prm_x*xi3 + n3*xi1prm_x + n3prm_x*xi1
    v1prm_x = n2*xi3prm_x + n2prm_x*xi3 - n3*xi2prm_x - n3prm_x*xi2
    costhetaprm_x = e31*n1prm_x + e32*n2prm_x + e33*n3prm_x
    sin2thetaprm_x = -2*costheta*costhetaprm_x
    xisqprm_x = sin2thetaprm_x
    w2prm_x = 2*r*rprm_x
    Sigmaprm_x = 2*a**2*costheta*costhetaprm_x + 2*r*rprm_x
    Dinvprm_x = (3*eta*u**2*uprm_x*(-6*eta + 52) + 12*eta*u*uprm_x)/(eta*u**3*(-6*eta + 52) + 6*eta*u**2 + 1)
    omegatildeprm_x = 2*a*rprm_x
    logargprm_x = u*(u*(u*(u*(Delta5l*uprm_x + uprm_x*(Delta5 + Delta5l*np.log(u))) + uprm_x*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))) + uprm_x*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))) + uprm_x*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u)))))) + uprm_x*(Delta1 + u*(Delta2 + u*(Delta3 + u*(Delta4 + u*(Delta5 + Delta5l*np.log(u))))))
    Deltaucalibprm_x = eta*logargprm_x/(logarg + 1)
    Deltaucalibprimeprm_x = eta*logargprm_x*u**2*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)**2 - eta*u**2*(u*(u*(u*(5*Delta5l*uprm_x + uprm_x*(5*Delta5 + 5*Delta5l*np.log(u))) + uprm_x*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u)))) + uprm_x*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))) + uprm_x*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1) - 2*eta*u*uprm_x*(Delta1 + u*(2*Delta2 + u*(3*Delta3 + u*(4*Delta4 + u*(5*Delta5 + 5*Delta5l*np.log(u))))))/(logarg + 1)
    Deltaubarprm_x = 2*a**2*u*uprm_x + 2*uprm_x/etaKminus1
    Deltaubarprimeprm_x = -6*a**2*u**2*uprm_x - 4*u*uprm_x/etaKminus1
    Deltauprm_x = Deltaubar*Deltaucalibprm_x + Deltaubarprm_x*Deltaucalib
    Deltauprimeprm_x = Deltaubar*Deltaucalibprimeprm_x + Deltaubarprime*Deltaucalibprm_x + Deltaubarprimeprm_x*Deltaucalib + Deltaubarprm_x*Deltaucalibprime
    Deltatprimeprm_x = 2*Deltau*rprm_x + 2*Deltauprime*r*rprm_x + Deltauprimeprm_x*r**2 + 2*Deltauprm_x*r
    Deltatprm_x = 2*Deltau*r*rprm_x + Deltauprm_x*r**2
    Deltarprm_x = Deltat*Dinvprm_x + Deltatprm_x*Dinv
    Lambtprm_x = -Deltat*a**2*sin2thetaprm_x - Deltatprm_x*a**2*sin2theta + 2*w2*w2prm_x
    csiprm_x = -w2prm_x*np.sqrt(Deltar*Deltat)/w2**2 + np.sqrt(Deltar*Deltat)*(Deltar*Deltatprm_x/2 + Deltarprm_x*Deltat/2)/(Deltar*Deltat*w2)
    csi1prm_x = csiprm_x*(-abs(-tortoise + 1) + 1)
    csi2prm_x = csiprm_x*(-np.sign(-tortoise + 3/2)/2 + 1/2)
    prTprm_x = csi2*(n1prm_x*p1 + n2prm_x*p2 + n3prm_x*p3) + csi2prm_x*(n1*p1 + n2*p2 + n3*p3)
    phat3prm_x = n3*prTprm_x*(1 - 1/csi1) + n3prm_x*prT*(1 - 1/csi1) + csi1prm_x*n3*prT/csi1**2
    phat2prm_x = n2*prTprm_x*(1 - 1/csi1) + n2prm_x*prT*(1 - 1/csi1) + csi1prm_x*n2*prT/csi1**2
    phat1prm_x = n1*prTprm_x*(1 - 1/csi1) + n1prm_x*prT*(1 - 1/csi1) + csi1prm_x*n1*prT/csi1**2
    pdotxirprm_x = r*(phat1*xi1prm_x + phat1prm_x*xi1 + phat2*xi2prm_x + phat2prm_x*xi2 + phat3*xi3prm_x + phat3prm_x*xi3) + rprm_x*(phat1*xi1 + phat2*xi2 + phat3*xi3)
    pdotnprm_x = n1*phat1prm_x + n1prm_x*phat1 + n2*phat2prm_x + n2prm_x*phat2 + n3*phat3prm_x + n3prm_x*phat3
    pdotvrprm_x = r*(phat1*v1prm_x + phat1prm_x*v1 + phat2*v2prm_x + phat2prm_x*v2 + phat3*v3prm_x + phat3prm_x*v3) + rprm_x*(phat1*v1 + phat2*v2 + phat3*v3)
    pphiprm_x = pdotxirprm_x
    Qcoeff2prm_x = -sin2thetaprm_x/(Sigma*sin2theta**2) - Sigmaprm_x/(Sigma**2*sin2theta)
    Qcoeff1prm_x = -Sigma*sin2thetaprm_x/(Lambt*sin2theta**2) + Sigmaprm_x/(Lambt*sin2theta) - Lambtprm_x*Sigma/(Lambt**2*sin2theta)
    DrSipn2prm_x = 2*Deltar*pdotn*pdotnprm_x/Sigma - Deltar*Sigmaprm_x*pdotn**2/Sigma**2 + Deltarprm_x*pdotn**2/Sigma
    Qprm_x = DrSipn2prm_x + 2*Qcoeff1*pdotxir*pdotxirprm_x + Qcoeff1prm_x*pdotxir**2 + 2*Qcoeff2*pdotvr*pdotvrprm_x + Qcoeff2prm_x*pdotvr**2
    prT_p2prm_x = csi2*n2prm_x + csi2prm_x*n2
    phat3_p2prm_x = n3*prT_p2prm_x*(1 - 1/csi1) + n3prm_x*prT_p2*(1 - 1/csi1) + csi1prm_x*n3*prT_p2/csi1**2
    phat2_p2prm_x = n2*prT_p2prm_x*(1 - 1/csi1) + n2prm_x*prT_p2*(1 - 1/csi1) + csi1prm_x*n2*prT_p2/csi1**2
    phat1_p2prm_x = n1*prT_p2prm_x*(1 - 1/csi1) + n1prm_x*prT_p2*(1 - 1/csi1) + csi1prm_x*n1*prT_p2/csi1**2
    pdotxir_p2prm_x = r*(phat1_p2*xi1prm_x + phat1_p2prm_x*xi1 + phat2_p2*xi2prm_x + phat2_p2prm_x*xi2 + phat3_p2*xi3prm_x + phat3_p2prm_x*xi3) + rprm_x*(phat1_p2*xi1 + phat2_p2*xi2 + phat3_p2*xi3)
    pdotn_p2prm_x = n1*phat1_p2prm_x + n1prm_x*phat1_p2 + n2*phat2_p2prm_x + n2prm_x*phat2_p2 + n3*phat3_p2prm_x + n3prm_x*phat3_p2
    pdotvr_p2prm_x = r*(phat1_p2*v1prm_x + phat1_p2prm_x*v1 + phat2_p2*v2prm_x + phat2_p2prm_x*v2 + phat3_p2*v3prm_x + phat3_p2prm_x*v3) + rprm_x*(phat1_p2*v1 + phat2_p2*v2 + phat3_p2*v3)
    pphi_p2prm_x = pdotxir_p2prm_x
    DrSipn2_p2prm_x = 2*Deltar*pdotn*pdotn_p2prm_x/Sigma + 2*Deltar*pdotn_p2*pdotnprm_x/Sigma - 2*Deltar*Sigmaprm_x*pdotn*pdotn_p2/Sigma**2 + 2*Deltarprm_x*pdotn*pdotn_p2/Sigma
    Q_p2prm_x = DrSipn2_p2prm_x + 2*Qcoeff1*pdotxir*pdotxir_p2prm_x + 2*Qcoeff1*pdotxir_p2*pdotxirprm_x + 2*Qcoeff1prm_x*pdotxir*pdotxir_p2 + 2*Qcoeff2*pdotvr*pdotvr_p2prm_x + 2*Qcoeff2*pdotvr_p2*pdotvrprm_x + 2*Qcoeff2prm_x*pdotvr*pdotvr_p2
    Hreal_p2prm_x = Q_p2prm_x
    return np.array([Hreal_p2prm_x])